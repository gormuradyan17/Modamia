{"version":3,"file":"static/js/272.d8d2a53e.chunk.js","mappings":"qMAKA,MAcA,EAdsCA,IAAgB,IAAf,UAACC,GAAUD,EAE9C,MAAM,KAACE,EAAI,MAACC,EAAK,MAACC,EAAK,KAACC,GAAMJ,EAE9B,OACIK,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACCD,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CAAI,QAAML,MACVI,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,SAAOJ,MACVG,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,SAAOH,MACVE,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,QAAMF,OACJ,EC0Cd,EAhDiBG,KACf,MAAMC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,KACxBV,EAAWW,IAAgBC,EAAAA,EAAAA,UAAc,KACzCC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,GACrCG,GAAaC,EAAAA,EAAAA,QAAO,IAuB1B,OApBAC,EAAAA,EAAAA,YAAU,KACJjB,EAAUkB,SACZH,EAAWI,QAAUC,MAAMC,KAAK,CAAEH,OAAQlB,EAAUkB,SAAU,CAACI,EAAGC,IAAUR,EAAWI,QAAQI,IAAUC,EAAAA,cACzGV,GAAa,GACf,GACC,CAACd,KAGJiB,EAAAA,EAAAA,YAAU,KACJQ,aAAaC,eAAe,WAC9Bf,EAAagB,KAAKC,MAAMH,aAAaI,QAAQ,WAAa,MAC5D,GACC,KAEHZ,EAAAA,EAAAA,YAAU,KACJjB,EAAUkB,QACZlB,EAAU8B,SAAQ,CAACC,EAAWR,KAAkBS,EAAAA,EAAAA,IAAgB,GAAID,EAAK/B,UAAW,SAAUe,EAAWI,QAAQI,GAAQQ,EAAKE,gBAAiBF,EAAK/B,WAAW,IACjK,GACC,CAACA,EAAWQ,EAAYK,KAGzBqB,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAAA7B,SACNN,EAAUkB,QACVgB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,iBAAgB9B,SAC3BO,GAAab,EAAUkB,OAAUH,EAAWI,QAAQkB,KAAI,CAACC,EAAWf,KACpElB,EAAAA,EAAAA,MAAA,OAAiB+B,UAAU,iBAAgB9B,SAAA,EACzC4B,EAAAA,EAAAA,KAAA,UAAQK,IAAKD,KAEbJ,EAAAA,EAAAA,KAAA,OAAKE,UAAU,oBAAmB9B,UAChC4B,EAAAA,EAAAA,KAACM,EAAe,CAACxC,UAAWA,EAAUuB,SAJhCA,MAQPW,EAAAA,EAAAA,KAAA,MAAA5B,SAAI,gBAXQ4B,EAAAA,EAAAA,KAAA,MAAA5B,SAAI,qBAcf,C","sources":["components/ShopCart/index.tsx","pages/ShopCart/index.tsx"],"sourcesContent":["\ninterface Props{\n    modelData:{name:string,color:string,price:number,size:string}\n}\n\nconst ShopCartContent:React.FC<Props>=({modelData})=>{\n    \n    const {name,color,price,size}=modelData\n    \n    return(\n        <div>\n         <h2>Name:{name}</h2>\n         <p>Color:{color}</p>\n         <p>Price:{price}</p>\n         <p>Size:{size}</p>\n        </div>\n    )\n}\n\nexport default ShopCartContent;","import React, { useRef, useEffect, useState } from 'react'\nimport Container from \"layout/Container/Container\";\nimport { useSelector } from \"react-redux\";\nimport './style.scss'\nimport { canvasModelInit } from 'shared/helpers/canvasHelpers';\nimport { getActiveMannequin } from 'redux/reducers/mannequinReducer';\nimport ShopCartContent from 'components/ShopCart';\n\n\nconst ShopCart = () => {\n  const mannequins = useSelector(getActiveMannequin)\n  const [modelData, setModelData] = useState<any>([])\n  const [refUpdate, setRefUpdate] = useState(false)\n  const canvasRefs = useRef([]);\n\n\n  useEffect(() => {\n    if (modelData.length) {\n      canvasRefs.current = Array.from({ length: modelData.length }, (_, index) => canvasRefs.current[index] || React.createRef());\n      setRefUpdate(true)\n    }\n  }, [modelData]);\n\n\n  useEffect(() => {\n    if (localStorage.hasOwnProperty('basket')) {\n      setModelData(JSON.parse(localStorage.getItem('basket') || '[]'))\n    }\n  }, [])\n\n  useEffect(() => {\n    if (modelData.length) {\n      modelData.forEach((item: any, index: number) => canvasModelInit(.3, item.modelData, 'fronts', canvasRefs.current[index], item.activeMannequin, item.modelData, true))\n    }\n  }, [modelData, mannequins, refUpdate])\n\n  return (\n    <Container>\n      {!modelData.length ? <h1>Basket is empty</h1> :\n        <div className=\"shop_container\">\n          {(refUpdate && modelData.length) ? canvasRefs.current.map((canvasRef, index) => (\n            <div key={index} className='product_canvas'>\n              <canvas ref={canvasRef}>\n              </canvas>\n              <div className=\"product_info_body\">\n                <ShopCartContent modelData={modelData[index]} />\n              </div>\n            </div>\n\n          )) : <h2>loadingg</h2>}\n        </div>\n      }\n    </Container>\n  )\n}\n\n\nexport default ShopCart;"],"names":["_ref","modelData","name","color","price","size","_jsxs","children","ShopCart","mannequins","useSelector","getActiveMannequin","setModelData","useState","refUpdate","setRefUpdate","canvasRefs","useRef","useEffect","length","current","Array","from","_","index","React","localStorage","hasOwnProperty","JSON","parse","getItem","forEach","item","canvasModelInit","activeMannequin","_jsx","Container","className","map","canvasRef","ref","ShopCartContent"],"sourceRoot":""}