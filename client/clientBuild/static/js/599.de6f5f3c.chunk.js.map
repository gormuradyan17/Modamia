{"version":3,"file":"static/js/599.de6f5f3c.chunk.js","mappings":"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","sources":["components/Customization/contents/PrintContent/PrintContent.tsx","services/printService.ts"],"sourcesContent":["import { useEffect,useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { activePaletteItem } from \"redux/reducers/printReducer\";\nimport { getAvPrintsPalettes, getAvPrintsVariants } from \"services/printService\";\nimport { BASE_UPLOADS_PRINTS_HIGHS_URL, BASE_UPLOADS_PRINTS_PREVIEWS_URL } from \"shared/constants/genericApiRoutes\";\nimport { ObjectType, appColor } from \"shared/helpers/helpers\";\nimport HeadingUI from \"shared/ui/HeadingUI/HeadingUI\";\nimport './style.scss'\nimport { setActivePrint, setMannequinType } from \"redux/reducers/mannequinReducer\";\nimport { ButtonUI } from \"shared/ui/ButtonUI/ButtonUI\";\n\nconst PrintContent = () => {\n    const [activeType,setActiveType]=useState(\"all\")\n    const activePalette = useSelector(activePaletteItem)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        getAvPrintsVariants(dispatch)\n        getAvPrintsPalettes(dispatch)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const updateActivePrint = (print: ObjectType) => {\n        const obj = {\n            highresurl: `${BASE_UPLOADS_PRINTS_HIGHS_URL}${print.highresurl}`,\n            previewurl: `${BASE_UPLOADS_PRINTS_PREVIEWS_URL}${print.previewurl}`\n        }\n        dispatch(setActivePrint(obj))\n    }\n    const btns = [\n        {\n            id: 1,\n            colorPosition: \"All over\",\n            type:\"all\"\n        },\n        {\n            id: 2,\n            colorPosition: \"Top\",\n            type:\"top\"\n        },\n        {\n            id: 3,\n            colorPosition: \"Bottom\",\n            type:\"bottom\"\n        },\n    ]\n    \n    useEffect(() => {        \n        dispatch(setMannequinType(activeType))\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      }, [activeType])\n    return (\n        <div className=\"print-content-container\">\n            <div className=\"btnContent\">\n                {btns.map((opt:any) => (\n                    <ButtonUI key={opt.id}  classN={activeType===opt.type ? \"active\" : \"\"}\n                     version=\"gray\" onClick={()=>setActiveType(opt.type)}>{opt.colorPosition}</ButtonUI>\n                ))}\n            </div>\n            <div className=\"print-content customYScrollbar\">\n                {activePalette?.prints?.map((print: ObjectType) => {\n                    const { _id = '' } = print || {}\n                    const { name = '', previewurl = '', highresurl = '' } = print?.prints?.[0] || {}\n                    return <div\n                        className=\"print-content-print\"\n                        key={_id}\n                        onClick={() => updateActivePrint({\n                            previewurl,\n                            highresurl,\n                        })}>\n                        <HeadingUI classN=\"print-content-text _ellipsis\" text={name} size=\"16px\" color={appColor} />\n                        <div className=\"print-content-image\">\n                            <img src={`${BASE_UPLOADS_PRINTS_PREVIEWS_URL}${previewurl}`} className=\"print-content-img\" alt={name} />\n                        </div>\n                        <span></span>\n                    </div>\n                })}\n            </div>\n\n        </div>\n    );\n};\n\nexport default PrintContent;\n","import { setPrintData, setPrintsPalettesData, setPrintsVariantsData } from \"redux/reducers/printReducer\"\nimport { getPrints, getPrintsPalettes, getPrintsVariants } from \"shared/api/dataApi\"\n\n\nexport const getAvPrints = (dispatch: any, variant: string = '', user_id: string = '') => {\n    getPrints({\n        printVariant: variant,\n        user_id\n    }).then(res => {\n        dispatch(setPrintData(res))\n    }).catch(err => console.log(err))\n}\n\nexport const getAvPrintsVariants = (dispatch: any, user_id: string = '') => {\n    getPrintsVariants({user_id}).then(res => {\n        dispatch(setPrintsVariantsData(res))\n    }).catch(err => console.log(err))\n}\n\nexport const getAvPrintsPalettes = (dispatch: any, user_id: string = '') => {\n    getPrintsPalettes({user_id}).then(res => {\n        dispatch(setPrintsPalettesData(res))\n    }).catch(err => console.log(err))\n}"],"names":["PrintContent","_activePalette$prints","activeType","setActiveType","useState","activePalette","useSelector","activePaletteItem","dispatch","useDispatch","useEffect","getAvPrintsVariants","getAvPrintsPalettes","setMannequinType","_jsxs","className","children","_jsx","id","colorPosition","type","map","opt","ButtonUI","classN","version","onClick","prints","print","_print$prints","_id","name","previewurl","highresurl","obj","concat","BASE_UPLOADS_PRINTS_HIGHS_URL","BASE_UPLOADS_PRINTS_PREVIEWS_URL","setActivePrint","updateActivePrint","HeadingUI","text","size","color","appColor","src","alt","getAvPrints","variant","arguments","length","undefined","user_id","getPrints","printVariant","then","res","setPrintData","catch","err","console","log","getPrintsVariants","setPrintsVariantsData","getPrintsPalettes","setPrintsPalettesData"],"sourceRoot":""}