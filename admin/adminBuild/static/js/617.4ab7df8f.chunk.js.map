{"version":3,"file":"static/js/617.4ab7df8f.chunk.js","mappings":"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","sources":["components/garment/newGarment/GarmentsMannequinsList.tsx","components/garment/garmentDropdown/GarmentDropdown.tsx","components/garment/newGarment/GarmentsSilhouettesListWrapper.tsx","components/garment/newGarment/NewGarment.tsx","layout/MainBody/MainBody.tsx","layout/MainHead/MainHead.tsx","services/mannequinService.ts","services/silhouetteService.ts","shared/objectModels/GenericModel.ts","shared/ui/LoaderCircleUI/LoaderCircleUI.tsx","shared/ui/ButtonUI/ButtonUI.tsx","shared/ui/HeadingUI/HeadingUI.tsx","shared/ui/InputUI/InputUI.tsx","utils/hooks/useClickOutside.ts"],"sourcesContent":["import { useSelector } from 'react-redux';\nimport { availableMannequins } from 'redux/reducers/mannequinReducer';\nimport { BASE_UPLOADS_MANNEQUINS_FRONTS_URL } from 'shared/constants/genericApiRoutes';\nimport { ObjectType } from 'shared/helpers/helpers';\nimport HeadingUI from 'shared/ui/HeadingUI/HeadingUI';\nimport InputUI from 'shared/ui/InputUI/InputUI';\n\ninterface Props {\n    details: ObjectType,\n    callback: any\n}\n\nconst GarmentsMannequinsList = ({\n    details,\n    callback\n}: Props) => {\n\n    const mannequins = useSelector(availableMannequins)\n\n    return (\n        <div className=\"mannequin-list customXScrollbar\">\n            {mannequins?.map((mannequin: ObjectType) => {\n                const disabled = details?.mannequin_id && details?.mannequin_id !== mannequin?._id;\n                return <div className={`mannequins-list-mannequin${disabled ? ' _disabled' : ''}`} key={mannequin._id}>\n                    <HeadingUI classN=\"mannequin-list-text _ellipsis\" text={mannequin.name} size=\"16px\" />\n                    <div className=\"mannequin-list-image\">\n                        <img\n                            src={`${BASE_UPLOADS_MANNEQUINS_FRONTS_URL}${mannequin.fronturl}`}\n                            className=\"mannequin-list-img\"\n                            alt={mannequin.name}\n                        />\n                    </div>\n                    <InputUI\n                        classN='garment-input'\n                        type='checkbox'\n                        callback={(event) => callback(event, mannequin?._id)}\n                        defaultChecked={details?.mannequin_id === mannequin?._id}\n                        name=''\n                        disabled={disabled}\n                    />\n                </div>\n            })}\n        </div>\n    );\n};\n\nexport default GarmentsMannequinsList;","import { faLayerGroup } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useRef, useState } from 'react';\nimport './style.scss'\nimport useClickOutSide from 'utils/hooks/useClickOutside';\nimport { ButtonUI } from 'shared/ui/ButtonUI/ButtonUI';\n\ninterface DropdownPropsi {\n    text?: string | number;\n    onChange: (data?: any) => void\n    options: any;\n    classN?: string;\n    error?: string,\n    defaultValue?: string,\n}\n\nconst GarmentDropdown = ({\n    text,\n    options,\n    onChange,\n    classN = '',\n    error,\n    defaultValue,\n}: DropdownPropsi) => {\n\n    const [isActive, setIsActive] = useState(false);\n    const [selected, setSelected] = useState(text);\n    const ref = useRef<HTMLDivElement | null>(null)\n    \n    function handleClick(e: React.MouseEvent, index: number) {\n        const val = (e.target as HTMLElement).textContent;\n\n        if (val) {\n            setSelected(val);\n        }\n\n        onChange(options[index]);\n        setIsActive(!isActive);\n    }\n\n    useClickOutSide([ref], () => setIsActive(false), isActive)\n\n    const toggleDropdown = () => {\n        setIsActive(!isActive);\n    }\n\n    return (\n        <>\n            {error && <span className=\"error-message\">{error}</span>}\n            <div className={`GarmentDropdown ${classN}`} ref={ref}>\n                <ButtonUI \n                    classN='GarmentDropdown__button'\n                    onClick={() => toggleDropdown()}\n                ><FontAwesomeIcon icon={faLayerGroup} /></ButtonUI>\n                <div\n                    className={`GarmentDropdown__content${isActive ? ' _active' : ''}`}\n                >\n                    {Boolean(options?.length) &&\n                        options?.map(({ id, text, value }: any, index: number) => (\n                            <div\n                                key={id}\n                                onClick={(event) => handleClick(event, index)}\n                                className={`GarmentDropdown__option${defaultValue === value ? ' _selected' : ''}`}\n                            >\n                                {text || value}\n                            </div>\n                        ))}\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default GarmentDropdown;","import { ArrayType, ObjectType, appColor, getSilhouetteOrderOptions } from 'shared/helpers/helpers';\nimport { CallbackSkeletonType } from 'shared/objectModels/GenericModel';\nimport HeadingUI from 'shared/ui/HeadingUI/HeadingUI';\nimport InputUI from 'shared/ui/InputUI/InputUI';\nimport GarmentDropdown from '../garmentDropdown/GarmentDropdown';\n\ninterface Props {\n    header: string,\n    content: ArrayType,\n    srcBase: string,\n    callback: CallbackSkeletonType,\n    callbackDropdown: any,\n    type: string,\n    details: ObjectType\n}\n\nconst GarmentsSilhouettesListWrapper = ({\n    header,\n    content,\n    srcBase,\n    callback,\n    callbackDropdown,\n    type,\n    details,\n}: Props) => {\n\n    const options = getSilhouetteOrderOptions();\n\n    return (\n        <div className='silhouettes-items'>\n            <HeadingUI text={header} size=\"20px\" />\n            <div className=\"silhouettes-items-body customXScrollbar\">\n                {content?.length ? content.map((silhouette: ObjectType) => {\n                    const checked = details?.[type]?.find((top: ObjectType) => top.id === silhouette?._id)\n                    return <div className=\"silhouettes-list-silhouette\" key={silhouette._id}>\n                        <HeadingUI classN=\"silhouettes-list-text _ellipsis\" text={silhouette.name} color={appColor} size=\"16px\" />\n                        <div className=\"silhouettes-list-image\">\n                            <img src={`${srcBase}${silhouette.silhouetteurl}`} className=\"silhouettes-list-img\" alt={silhouette.name} />\n                        </div>\n                        <div className=\"silhouettes-list-actions\">\n                            <InputUI\n                                classN='garment-input'\n                                type='checkbox'\n                                callback={() => callback(silhouette?._id)}\n                                defaultChecked={checked}\n                                name=''\n                            />\n                            {checked && <GarmentDropdown\n                                options={options}\n                                defaultValue={checked?.order}\n                                onChange={(data) => callbackDropdown(data, silhouette?._id, type)}\n                            />}\n                        </div>\n                    </div>\n                }) : <HeadingUI text='Nothing found' color={appColor} size='16px' />}\n            </div>\n        </div>\n    );\n};\n\nexport default GarmentsSilhouettesListWrapper;","import MainBody from \"layout/MainBody/MainBody\";\nimport MainHead from \"layout/MainHead/MainHead\";\nimport { ChangeEvent, useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAvSilhouettes } from \"services/silhouetteService\";\nimport './style.scss'\nimport { getAvMannequins } from \"services/mannequinService\";\nimport GarmentsMannequinsList from \"./GarmentsMannequinsList\";\nimport { garmentDetails, resetGarmentState, setGarmentState } from \"redux/reducers/garmentReducer\";\nimport { ButtonUI } from \"shared/ui/ButtonUI/ButtonUI\";\nimport { addGarment } from \"shared/api/dataApi\";\nimport InputUI from \"shared/ui/InputUI/InputUI\";\nimport GarmentsSilhouettesListWrapper from \"./GarmentsSilhouettesListWrapper\";\nimport { BASE_UPLOADS_SILHOUETTES_BOTTOMS_URL, BASE_UPLOADS_SILHOUETTES_SLEEVES_URL, BASE_UPLOADS_SILHOUETTES_TOPS_URL } from \"shared/constants/genericApiRoutes\";\nimport { availableSilhouettes } from \"redux/reducers/silhouetteReducer\";\nimport { ObjectType, getIsNewGarmentApproved } from \"shared/helpers/helpers\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst NewGarment = () => {\n\n    const dispatch = useDispatch()\n    const details = useSelector(garmentDetails)\n    const navigate = useNavigate()\n\n    useEffect(() => {\n        getAvSilhouettes(dispatch)\n        getAvMannequins(dispatch)\n    }, [])\n\n    const silhouettes = useSelector(availableSilhouettes)\n\n    const topSilhouettes = useMemo(() => {\n        return silhouettes.filter((silhouette: ObjectType) => silhouette.type === 'Top')\n    }, [silhouettes])\n  \n    const bottomSilhouettes = useMemo(() => {\n        return silhouettes.filter((silhouette: ObjectType) => silhouette.type === 'Bottom')\n    }, [silhouettes])\n\n    const sleeveSilhouettes = useMemo(() => {\n        return silhouettes.filter((silhouette: ObjectType) => silhouette?.type === 'Sleeve')\n    }, [silhouettes])\n\n    const addNewGarment = async () => {\n        if (details?.mannequin_id && details?.name) {\n            await addGarment(details)\n            dispatch(resetGarmentState())\n            navigate('/garments')\n        }\n    }\n    \n    const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n        const { target: { name, value } } = event\n        dispatch(setGarmentState({ name, value }))\n    }\n    \n    const setGarmentlist = (id: string, name: string) => {\n        if (id) {\n            const copyDetails = structuredClone(details)\n            const data = copyDetails[name];\n            const idx = data?.findIndex((item: ObjectType) => item.id === id)\n            if (idx !== -1) data.splice(idx, 1)\n            else data.push({\n                id,\n                order: 1\n            })\n            dispatch(setGarmentState({ name, value: data }))\n        }\n    }\n\n    const setGarmentOrderlist = (data: ObjectType, id: string, name: string) => {\n        if (id) {\n            const { value } = data;\n            const copyDetails = structuredClone(details)\n            const dataCopy = copyDetails[name];\n            const idx = dataCopy?.findIndex((item: ObjectType) => item.id === id)\n            if (idx !== -1) {\n                dataCopy[idx].order = value\n            }\n            dispatch(setGarmentState({ name, value: dataCopy }))\n        }\n    }\n\n    const setGarmentMannequin = (event: ChangeEvent<HTMLInputElement>, id: string) => {\n        const { target: { checked } } = event;\n        const name = 'mannequin_id'\n        if (id) {\n            dispatch(setGarmentState({ name, value: checked ? id : '' }))\n        }\n    }\n\n    const isApproved = getIsNewGarmentApproved(details)\n\n    return (\n        <div>\n            <MainHead text=\"New Garment\" />\n            <MainBody>\n                <div className=\"garments-list-content\">\n                    <ButtonUI\n                        classN=\"add-garment-button\"\n                        onClick={addNewGarment}\n                        type=\"button\"\n                        disabled={!isApproved}\n                    >Add Garment</ButtonUI>\n                    <InputUI\n                        classN='add-garment-input'\n                        callback={handleInputChange}\n                        value={details?.name}\n                        name='name'\n                        label=\"Name*\"\n                    />\n                    <GarmentsMannequinsList \n                        details={details}\n                        callback={(event: ChangeEvent<HTMLInputElement>, id: string) => setGarmentMannequin(event, id)}\n                    />\n                    <GarmentsSilhouettesListWrapper \n                        header='Top Silhouettes'\n                        content={topSilhouettes}\n                        srcBase={BASE_UPLOADS_SILHOUETTES_TOPS_URL}\n                        callback={(id: string) => setGarmentlist(id, 'tops')}\n                        callbackDropdown={setGarmentOrderlist}\n                        type='tops'\n                        details={details}\n                    />\n                    <GarmentsSilhouettesListWrapper \n                        header='Bottom Silhouettes'\n                        content={bottomSilhouettes}\n                        srcBase={BASE_UPLOADS_SILHOUETTES_BOTTOMS_URL}\n                        callback={(id: string) => setGarmentlist(id, 'bottoms')}\n                        callbackDropdown={setGarmentOrderlist}\n                        type='bottoms'\n                        details={details}\n                    />\n                    <GarmentsSilhouettesListWrapper \n                        header='Sleeve Silhouettes'\n                        content={sleeveSilhouettes}\n                        srcBase={BASE_UPLOADS_SILHOUETTES_SLEEVES_URL}\n                        callback={(id: string) => setGarmentlist(id, 'sleeves')}\n                        callbackDropdown={setGarmentOrderlist}\n                        type='sleeves'\n                        details={details}\n                    />\n                </div>\n            </MainBody>\n        </div>\n    );\n};\n\nexport default NewGarment;","import './style.scss'\n\ninterface Props {\n    children: any\n}\n\nconst MainBody = ({\n    children\n}: Props) => {\n    return (\n        <div className=\"main-body\">\n            {children}\n        </div>\n    );\n};\n\nexport default MainBody;","import HeadingUI from \"shared/ui/HeadingUI/HeadingUI\";\nimport './style.scss'\nimport { ButtonUI } from \"shared/ui/ButtonUI/ButtonUI\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { adminSignout } from \"services/authService\";\nimport { eraseCookie } from \"shared/helpers/helpers\";\nimport { useDispatch } from \"react-redux\";\nimport { setActiveSuperAdmin, setIsAuth } from \"redux/reducers/authReducer\";\nimport { useNavigate } from \"react-router-dom\";\n\ninterface Props {\n    text: string,\n}\n\nconst MainHead = ({\n    text\n}: Props) => {\n\n    const dispatch = useDispatch()\n\n    const navigate = useNavigate()\n\n    const signout = async () => {\n\t\ttry {\n\t\t\tconst data = await adminSignout();\n\t\t\tif (data) {\n\t\t\t\teraseCookie('accessToken')\n\t\t\t\tdispatch(setIsAuth(false));\n                dispatch(setActiveSuperAdmin({}))\n\t\t\t\tnavigate('/login');\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n    }\n\n    return (\n        <div className=\"main-head\">\n            <HeadingUI text={text} color=\"#aa8a75\" />\n            <ButtonUI\n                classN=\"main-head-logout\"\n                onClick={signout}\n            >\n                <FontAwesomeIcon icon={faSignOutAlt} />\n                <span>Sign out</span>\n            </ButtonUI>\n        </div>\n    );\n};\n\nexport default MainHead;","import { setMannequinData } from \"redux/reducers/mannequinReducer\"\nimport { getMannequins } from \"shared/api/dataApi\"\n\n\nexport const getAvMannequins = (dispatch: any) => {\n    getMannequins().then(res => {\n        dispatch(setMannequinData(res))\n    }).catch(err => console.log(err))\n}","import { setSilhouetteData } from \"redux/reducers/silhouetteReducer\"\nimport { getSilhouettes } from \"shared/api/dataApi\"\n\n\nexport const getAvSilhouettes = (dispatch: any) => {\n    getSilhouettes().then(res => {\n        dispatch(setSilhouetteData(res))\n    }).catch(err => console.log(err))\n}","export type CallbackSkeletonType = (event?: any) => void\nexport const CallbackSkeletonValue = () => {}","interface Iloader {\n    classN?: string\n}\n\nconst LoaderCircleUI = ({ classN }: Iloader) => {\n    return (\n        <div className={`LoaderCircleUI ${classN}`} ></div>\n    )\n}\n\nexport default LoaderCircleUI","import { HTMLProps } from \"react\";\nimport \"./style.scss\";\nimport { CallbackSkeletonValue } from \"shared/objectModels/GenericModel\";\nimport LoaderCircleUI from \"../LoaderCircleUI/LoaderCircleUI\";\n\ninterface Props extends HTMLProps<HTMLButtonElement> {\n  type?: \"button\" | \"submit\" | \"reset\";\n  version?: string;\n  classN?: string;\n  disabled?: boolean;\n  isLoading?: boolean;\n}\n\nconst versions: Record<string, string> = {\n  default: \"default-btn\",\n  red: 'red-btn',\n  orange: 'orange-btn',\n  blue: 'blue-btn',\n  green: 'green-btn',\n  gray: 'gray-btn',\n}\n\nexport const ButtonUI: React.FC<Props> = ({\n  children,\n  type = \"button\",\n  version = \"default\",\n  classN = '',\n  disabled = false,\n  isLoading = false,\n  onClick = CallbackSkeletonValue,\n  ...buttonProps\n}) => {\n  return (\n    <button\n      {...buttonProps}\n      className={`ButtonUI ${classN} ${versions[version]} ${disabled ? '_disabled' : ''}`}\n      type={type}\n      onClick={(event) => !disabled && !isLoading && onClick(event)}\n    >{isLoading ? (<LoaderCircleUI />) : children}</button>\n  )\n}","import './style.scss'\n\ninterface Props {\n    text: string,\n    classN?: string,\n    color?: string,\n    size?: string,\n    align?: 'center' | 'left' | 'right'\n}\n\nconst HeadingUI = ({\n    text,\n    classN = '',\n    color = '',\n    size = '',\n    align = 'left'\n}: Props) => {\n    return (\n        <h1 className={`headingUI ${classN}`}\n            style={{\n                color: color || '#000',\n                fontSize: size || '30px',\n                textAlign: align\n            }}\n        >{text}</h1>\n    );\n};\n\nexport default HeadingUI;","import { CallbackSkeletonType } from \"shared/objectModels/GenericModel\";\nimport './style.scss'\nimport { useEffect } from \"react\";\n\ninterface Props {\n    value?: string,\n    placeholder?: string,\n    type?: string,\n    callback: CallbackSkeletonType,\n    label?: string,\n    name: string,\n    error?: string,\n    autoComplete?: string,\n    classN?: string,\n    disabled?: boolean,\n    defaultChecked?: boolean,\n}\n\nconst InputUI = ({\n    value = '',\n    placeholder = '',\n    type = 'text',\n    callback,\n    label = '',\n    name,\n    error,\n    autoComplete = '',\n    classN = '',\n    disabled = false,\n    defaultChecked = false\n}: Props) => {\n    // const refInput = useRef<HTMLInputElement | null>(null)\n    // const refSpan = useRef<HTMLInputElement | null>(null)\n\n    // useEffect(() => {\n    //     if (error && refInput?.current && refSpan?.current) {\n    //         refInput.current.classList.add('_errorShake')\n    //         refSpan.current.classList.add('_errorShake')\n    //         setTimeout(() => {\n    //             refInput?.current?.classList.remove('_errorShake')\n    //             refSpan?.current?.classList.remove('_errorShake')\n    //         }, 500);\n    //     }\n\n    //     return () => {\n    //         refInput?.current?.classList.remove('_errorShake')\n    //         refSpan?.current?.classList.remove('_errorShake')\n    //     }\n    // },[error])\n\n    return (\n        <div className={`InputUI ${classN}`}>\n            {label && <label \n                className=\"InputUI__label\"\n                htmlFor={`InputUI-${name}`}>\n                {label}\n            </label>}\n            {error && <span className=\"error-message\">{error}</span>}\n            <input \n                className={`InputUI__input${error ? ' _error' : ''}${disabled ? ' _disabled' : ''}`}\n                id={`InputUI-${name}`}\n                name={name}\n                type={type}\n                onChange={(event) => !disabled && callback(event)}\n                {...(type === 'checkbox' ? {checked: defaultChecked} : {value})}\n                {...(autoComplete) && {autoComplete}}\n                {...(placeholder && {placeholder})}\n            />\n        </div>\n    );\n};\n\nexport default InputUI;","import { CallbackSkeletonType } from 'shared/objectModels/GenericModel';\nimport { useEffect } from \"react\";\n\nconst useClickOutSide = (refList: any, handler: CallbackSkeletonType, dependency: any = false) => {\n  useEffect(() => {\n    const listener = (event: any) => {\n      let shouldCallHandler = true;\n      refList?.length && refList?.forEach((ref: any) => {\n        if (ref.current && ref.current.contains(event.target)) {\n          shouldCallHandler = false;\n        }\n      });\n\n      if (shouldCallHandler) {\n        handler();\n      }\n    };\n\n    document.addEventListener(\"click\", listener);\n    return () => {\n      document.removeEventListener(\"click\", listener);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dependency]);\n\n  return {};\n};\n\nexport default useClickOutSide;\n"],"names":["_ref","details","callback","mannequins","useSelector","availableMannequins","_jsx","className","children","map","mannequin","disabled","mannequin_id","_id","_jsxs","concat","HeadingUI","classN","text","name","size","src","BASE_UPLOADS_MANNEQUINS_FRONTS_URL","fronturl","alt","InputUI","type","event","defaultChecked","options","onChange","error","defaultValue","isActive","setIsActive","useState","selected","setSelected","ref","useRef","useClickOutSide","_Fragment","ButtonUI","onClick","FontAwesomeIcon","icon","faLayerGroup","Boolean","length","_ref2","index","id","value","e","val","target","textContent","handleClick","header","content","srcBase","callbackDropdown","getSilhouetteOrderOptions","silhouette","_details$type","checked","find","top","color","appColor","silhouetteurl","GarmentDropdown","order","data","NewGarment","dispatch","useDispatch","garmentDetails","navigate","useNavigate","useEffect","getAvSilhouettes","getAvMannequins","silhouettes","availableSilhouettes","topSilhouettes","useMemo","filter","bottomSilhouettes","sleeveSilhouettes","setGarmentlist","structuredClone","idx","findIndex","item","splice","push","setGarmentState","setGarmentOrderlist","dataCopy","isApproved","getIsNewGarmentApproved","MainHead","MainBody","async","addGarment","resetGarmentState","label","GarmentsMannequinsList","setGarmentMannequin","GarmentsSilhouettesListWrapper","BASE_UPLOADS_SILHOUETTES_TOPS_URL","BASE_UPLOADS_SILHOUETTES_BOTTOMS_URL","BASE_UPLOADS_SILHOUETTES_SLEEVES_URL","adminSignout","eraseCookie","setIsAuth","setActiveSuperAdmin","console","log","faSignOutAlt","getMannequins","then","res","setMannequinData","catch","err","getSilhouettes","setSilhouetteData","CallbackSkeletonValue","versions","default","red","orange","blue","green","gray","version","isLoading","buttonProps","LoaderCircleUI","align","style","fontSize","textAlign","placeholder","autoComplete","htmlFor","refList","handler","dependency","arguments","undefined","listener","shouldCallHandler","forEach","current","contains","document","addEventListener","removeEventListener"],"sourceRoot":""}