{"version":3,"file":"static/js/54.ad207e97.chunk.js","mappings":"0HAMA,MAUA,EAViBA,IAEH,IAFI,SACdC,GACID,EACJ,OACIE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWF,SACrBA,GACC,C,uICGd,MAoCA,EApCiBD,IAEH,IAFI,KACdI,GACIJ,EAEJ,MAAMK,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,MAgBjB,OACIC,EAAAA,EAAAA,MAAA,OAAKN,UAAU,YAAWF,SAAA,EACtBC,EAAAA,EAAAA,KAACQ,EAAAA,EAAS,CAACN,KAAMA,EAAMO,MAAM,aAC7BF,EAAAA,EAAAA,MAACG,EAAAA,EAAQ,CACLC,OAAO,mBACPC,QAnBIC,UAClB,UACoBC,EAAAA,EAAAA,SAElBC,EAAAA,EAAAA,IAAY,eACZZ,GAASa,EAAAA,EAAAA,KAAU,IACPb,GAASc,EAAAA,EAAAA,IAAoB,CAAC,IAC1CZ,EAAS,UAEX,CAAE,MAAOa,GACRC,QAAQC,IAAIF,EACb,GAQ+BnB,SAAA,EAEjBC,EAAAA,EAAAA,KAACqB,EAAAA,EAAe,CAACC,KAAMC,EAAAA,OACvBvB,EAAAA,EAAAA,KAAA,QAAAD,SAAM,kBAER,C,wDC/CP,SAASyB,EAA6BC,GACzC,MAAMC,EAAiBC,SAASC,cAAc,OAG9C,OAFAF,EAAeG,aAAa,KAAMJ,GAClCE,SAASG,KAAKC,YAAYL,GACnBA,CACT,CCgCF,QAhCA,SAAoB5B,GAAyD,IAAxD,SAAEC,EAAQ,UAAE0B,EAAY,wBAA6B3B,EACxE,MAAO4B,EAAgBM,IAAqBC,EAAAA,EAAAA,UAAc,OAE1DC,EAAAA,EAAAA,kBAAgB,KACd,IAAIC,EAAUR,SAASS,eAAeX,GAClCY,GAAgB,EASpB,OAPKF,IACHE,GAAgB,EAChBF,EAAUX,EAA6BC,IAGzCO,EAAkBG,GAEX,KACDE,GAAiBF,EAAQG,YAC3BH,EAAQG,WAAWC,YAAYJ,EACjC,CACD,GACA,CAACV,IAEJ,IAAIU,EAAUR,SAASS,eAAeX,GAMtC,OAJKU,IACHA,EAAUX,EAA6BC,IAGlB,OAAnBC,EAAgC,MAE7Bc,EAAAA,EAAAA,cAAazC,EAAU2B,EAChC,C,oJCnBA,MA8CA,EA9CsB5B,IAIR,IAAD2C,EAAAC,EAAA,IAJU,SACnBC,EAAQ,WACRC,EAAU,OACVC,GACI/C,EAEJ,MAAMK,GAAWC,EAAAA,EAAAA,MAEX0C,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IAEzBC,EAAqBC,IACvB,MAAQC,QAAQ,KAAEC,EAAI,MAAEC,IAAYH,EACpC/C,GAASmD,EAAAA,EAAAA,IAAc,CAAEF,OAAMC,UAAS,EAG5C,OACI9C,EAAAA,EAAAA,MAAA,QAAMgD,SAAUZ,EAAU1C,UAAU,kBAAiBF,SAAA,EACjDC,EAAAA,EAAAA,KAACQ,EAAAA,EAAS,CAACN,KAAK,sBAAsBsD,MAAM,SAAS/C,MAAM,aAC3DF,EAAAA,EAAAA,MAAA,OAAKN,UAAU,yBAAwBF,SAAA,EACnCC,EAAAA,EAAAA,KAACyD,EAAAA,EAAO,CACJC,KAAK,OACLN,KAAK,QACLC,MAAiB,OAAVP,QAAU,IAAVA,OAAU,EAAVA,EAAYa,MACnBzC,OAAa,OAAN2B,QAAM,IAANA,GAAa,QAAPJ,EAANI,EAAQc,aAAK,IAAAlB,OAAP,EAANA,EAAemB,UAAW,GACjCC,YAAY,QACZlB,SAAUM,EACVa,aAAa,SAEjB9D,EAAAA,EAAAA,KAACyD,EAAAA,EAAO,CACJC,KAAK,WACLN,KAAK,WACLC,MAAiB,OAAVP,QAAU,IAAVA,OAAU,EAAVA,EAAYiB,SACnB7C,OAAa,OAAN2B,QAAM,IAANA,GAAgB,QAAVH,EAANG,EAAQkB,gBAAQ,IAAArB,OAAV,EAANA,EAAkBkB,UAAW,GACpCC,YAAY,WACZlB,SAAUM,EACVa,aAAa,YAGrBvD,EAAAA,EAAAA,MAAA,OAAKN,UAAU,0BAAyBF,SAAA,EACpCC,EAAAA,EAAAA,KAACU,EAAAA,EAAQ,CAACE,QAASA,IAAMgC,IAAcoB,QAAQ,OAAMjE,SAAC,WACtDC,EAAAA,EAAAA,KAACU,EAAAA,EAAQ,CAACgD,KAAK,SAAQ3D,SAAC,aAEzB,E,4CC1Cf,MA4DA,EA5DwBD,IAEV,IAFW,OACrBmE,GACInE,EAEJ,MAAMK,GAAWC,EAAAA,EAAAA,OACV8D,EAAWC,IAAgBlC,EAAAA,EAAAA,WAAkB,IAC7CmC,EAAgBC,IAAqBpC,EAAAA,EAAAA,UAAqB,CAAC,GAe5DW,EAAaA,KACfyB,EAAkB,CAAC,GACnBF,GAAa,EAAM,EAGjBG,GAAevB,EAAAA,EAAAA,IAAYwB,EAAAA,IAEjC,OACIhE,EAAAA,EAAAA,MAAA,OAAKN,UAAU,mBAAkBF,SAAA,EAC7BQ,EAAAA,EAAAA,MAAA,SAAAR,SAAA,EACIC,EAAAA,EAAAA,KAAA,SAAAD,UACIQ,EAAAA,EAAAA,MAAA,MAAAR,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kBAGZC,EAAAA,EAAAA,KAAA,SAAAD,SACW,OAANkE,QAAM,IAANA,OAAM,EAANA,EAAQO,KAAKC,IACHlE,EAAAA,EAAAA,MAAA,MAAAR,SAAA,EACHC,EAAAA,EAAAA,KAAA,MAAAD,SAAU,OAAL0E,QAAK,IAALA,OAAK,EAALA,EAAOd,SACZ3D,EAAAA,EAAAA,KAAA,MAAAD,UAAIC,EAAAA,EAAAA,KAACU,EAAAA,EAAQ,CAACgE,UAAsB,OAAZJ,QAAY,IAAZA,OAAY,EAAZA,EAAcX,UAAe,OAALc,QAAK,IAALA,OAAK,EAALA,EAAOd,OAAO/C,QAASA,IAzBlEC,WACzBwD,EAAkBI,GAClBN,GAAa,EAAK,EAuB+EQ,CAAqBF,GAAO1E,UAACC,EAAAA,EAAAA,KAACqB,EAAAA,EAAe,CAACC,KAAMsD,EAAAA,YAFhH,OAALH,QAAK,IAALA,OAAK,EAALA,EAAOI,YAOlCX,IAAalE,EAAAA,EAAAA,KAAC8E,EAAAA,EAAO,CAACnC,SAAUC,EAAW7C,UACxCQ,EAAAA,EAAAA,MAAA,OAAKN,UAAU,qBAAoBF,SAAA,EAC/BC,EAAAA,EAAAA,KAACQ,EAAAA,EAAS,CAACN,KAAK,qBAAqBsD,MAAM,SAAS/C,MAAM,aAC1DF,EAAAA,EAAAA,MAAA,KAAGN,UAAU,0BAAyBF,SAAA,CAAC,0CAAsCQ,EAAAA,EAAAA,MAAA,QAAAR,SAAA,CAAM,IAAgB,OAAdqE,QAAc,IAAdA,OAAc,EAAdA,EAAgBT,MAAM,YAC3GpD,EAAAA,EAAAA,MAAA,OAAKN,UAAU,0BAAyBF,SAAA,EACpCC,EAAAA,EAAAA,KAACU,EAAAA,EAAQ,CAACE,QAASA,IAAMgC,IAAcoB,QAAQ,OAAMjE,SAAC,aACtDC,EAAAA,EAAAA,KAACU,EAAAA,EAAQ,CAACE,QAASA,IA5CdC,WACH,OAAduD,QAAc,IAAdA,GAAAA,EAAgBS,YACVE,EAAAA,EAAAA,IAAa,CAAEX,yBACfY,EAAAA,EAAAA,IAAmB7E,GACzByC,IACJ,EAuCyCqC,GAAoBjB,QAAQ,MAAKjE,SAAC,qBAIrE,E,wBCxDd,MA2DA,EA3DmBmF,KAEf,MAAOhB,EAAWC,IAAgBlC,EAAAA,EAAAA,WAAkB,IAC7CY,EAAQsC,IAAalD,EAAAA,EAAAA,UAAqB,CAAC,GAC5C9B,GAAWC,EAAAA,EAAAA,MACXgF,GAAiBrC,EAAAA,EAAAA,IAAYsC,EAAAA,IAC7BvC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,KAC/BsC,EAAAA,EAAAA,YAAU,MACNN,EAAAA,EAAAA,IAAmB7E,EAAS,GAC9B,IAEF,MAAMyC,EAAaA,KACfuB,GAAa,GACbgB,EAAU,CAAC,EAAE,EAyBjB,OACI5E,EAAAA,EAAAA,MAAA,OAAKN,UAAU,cAAaF,SAAA,EACxBC,EAAAA,EAAAA,KAACuF,EAAAA,EAAQ,CAACrF,KAAK,sBACfF,EAAAA,EAAAA,KAACU,EAAAA,EAAQ,CAACC,OAAO,aAAaC,QAASA,IAAMuD,GAAa,GAAOT,KAAK,SAAQ3D,SAAC,oBAC/EQ,EAAAA,EAAAA,MAACiF,EAAAA,EAAQ,CAAAzF,SAAA,EACLQ,EAAAA,EAAAA,MAAA,OAAKN,UAAU,sBAAqBF,SAAA,EAChCC,EAAAA,EAAAA,KAACQ,EAAAA,EAAS,CAACN,KAAK,mBAAmBuF,KAAK,SACzB,OAAdL,QAAc,IAAdA,GAAAA,EAAgBM,QAAS1F,EAAAA,EAAAA,KAAC2F,EAAe,CAAC1B,OAAQmB,IAAqB,QAE3ElB,IAAalE,EAAAA,EAAAA,KAAC8E,EAAAA,EAAO,CAACnC,SAAUC,EAAW7C,UACzCC,EAAAA,EAAAA,KAAC4F,EAAa,CACTjD,SAjCK9B,UACrBgF,EAAEC,iBACF,MAAMC,GAAaC,EAAAA,EAAAA,GAAclD,EAAYmD,EAAAA,IAC7C,GAAIF,EAAa,OAAOZ,EAAUY,GAC9BG,OAAOC,KAAKtD,GAAQ6C,QAASP,EAAU,CAAC,GAC5C,MAAMiB,QAAiBC,EAAAA,EAAAA,IAAavD,GACpC,GAAY,OAARsD,QAAQ,IAARA,GAAAA,EAAUvD,OAAQ,CAAC,IAADyD,EAAAC,EAAAC,EAAAC,EAClB,MAAMC,GAAwB,OAARN,QAAQ,IAARA,GAAgB,QAARE,EAARF,EAAUvD,cAAM,IAAAyD,GAAqD,QAArDC,EAAhBD,EAAkBK,MAAMC,GAAkC,cAAX,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKC,eAAoB,IAAAN,OAA7D,EAARA,EAAuEO,MAAO,GAC9FC,GAAqB,OAARX,QAAQ,IAARA,GAAgB,QAARI,EAARJ,EAAUvD,cAAM,IAAA2D,GAAkD,QAAlDC,EAAhBD,EAAkBG,MAAMC,GAAkC,WAAX,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKC,eAAiB,IAAAJ,OAA1D,EAARA,EAAoEK,MAAO,GAC9F,OAAO3B,EAAU,CACbpB,SAAU,CACNH,QAAS8C,GAEb/C,MAAO,CACHC,QAASmD,IAGrB,OACM/B,EAAAA,EAAAA,IAAmB7E,GACzByC,GAAY,EAeIC,OAAQA,EACRD,WAAYA,WAItB,C,kCCtEP,MAAMoE,EAAwBA,M,yDCGrC,MAMA,EANuBlH,IAA0B,IAAzB,OAAEa,GAAiBb,EACvC,OACIE,EAAAA,EAAAA,KAAA,OAAKC,UAAS,kBAAAgH,OAAoBtG,IAAiB,ECOrDuG,EAAmC,CACvCC,QAAS,cACTC,IAAK,UACLC,OAAQ,aACRC,KAAM,WACNC,MAAO,YACPC,KAAM,YAGK9G,EAA4BZ,IASlC,IATmC,SACxCC,EAAQ,KACR2D,EAAO,SAAQ,QACfM,EAAU,UAAS,OACnBrD,EAAS,GAAE,SACX+D,GAAW,EAAK,UAChB+C,GAAY,EAAK,QACjB7G,EAAUoG,EAAAA,KACPU,GACJ5H,EACC,OACEE,EAAAA,EAAAA,KAAA,aACM0H,EACJzH,UAAS,YAAAgH,OAActG,EAAM,KAAAsG,OAAIC,EAASlD,GAAQ,KAAAiD,OAAIvC,EAAW,YAAc,IAC/EhB,KAAMA,EACN9C,QAAUsC,IAAWwB,IAAa+C,GAAa7G,EAAQsC,GAAOnD,SAC9D0H,GAAazH,EAAAA,EAAAA,KAAC2H,EAAc,IAAO5H,GAAkB,C,8CC5B3D,MAkBA,EAlBkBD,IAMJ,IANK,KACfI,EAAI,OACJS,EAAS,GAAE,MACXF,EAAQ,GAAE,KACVgF,EAAO,GAAE,MACTjC,EAAQ,QACJ1D,EACJ,OACIE,EAAAA,EAAAA,KAAA,MAAIC,UAAS,aAAAgH,OAAetG,GACxBiH,MAAO,CACHnH,MAAOA,GAAS,OAChBoH,SAAUpC,GAAQ,OAClBqC,UAAWtE,GACbzD,SACJG,GAAU,C,+CCTpB,MAmDA,EAnDgBJ,IASF,IATG,MACbuD,EAAK,YACLQ,EAAc,GAAE,KAChBH,EAAO,OAAM,SACbf,EAAQ,MACRoF,EAAQ,GAAE,KACV3E,EAAI,MACJlC,EAAK,aACL4C,EAAe,IACXhE,EAoBJ,OACIS,EAAAA,EAAAA,MAAA,OAAKN,UAAU,UAASF,SAAA,CACnBgI,IAAS/H,EAAAA,EAAAA,KAAA,SACNC,UAAU,iBACV+H,QAAO,WAAAf,OAAa7D,GAAOrD,SAC1BgI,IAEJ7G,IAASlB,EAAAA,EAAAA,KAAA,QAAMC,UAAU,gBAAeF,SAAEmB,KAC3ClB,EAAAA,EAAAA,KAAA,SACIC,UAAS,iBAAAgH,OAAmB/F,EAAQ,UAAY,IAChD+G,GAAE,WAAAhB,OAAa7D,GACfA,KAAMA,EACNM,KAAMA,EACNwE,aAAc7E,EACd8E,SAAUxF,KACLmB,GAAiB,CAACA,mBAClBD,GAAe,CAACA,mBAEvB,C,2EClDd,MAuBA,EAvBgB/D,IAGD,IAHE,SACb6C,EAAQ,SACR5C,GACKD,EAEL,OACIE,EAAAA,EAAAA,KAACoI,EAAAA,EAAW,CAAArI,UACRQ,EAAAA,EAAAA,MAAA,OAAKN,UAAU,UAASF,SAAA,EACpBQ,EAAAA,EAAAA,MAAA,OAAKN,UAAU,qBAAoBF,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeF,SACzBA,KAELC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBACXW,QAASA,IAAM+B,IAAW5C,UAC1BC,EAAAA,EAAAA,KAACqB,EAAAA,EAAe,CAACC,KAAM+G,EAAAA,IAASR,SAAS,OAAOpH,MAAM,eAG9DT,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAcW,QAASA,IAAM+B,UAEtC,C,kCCrBf,MAAMqD,EAAgBA,CAACsC,EAAsBC,KAChD,MAAMC,EAAYtC,OAAOC,KAAKmC,GAAUG,QAAO,CAACC,EAAUC,KACtD,MAAMC,EAA6BL,EAAQI,IAAc,GACnDE,EAAaP,EAASK,GAY5B,OAXAC,EAAoBE,SAAQC,IACxB,MAAMC,EAAOD,EAAOC,KACd9H,EAAQ6H,EAAO7H,WAEA+H,IAAlBD,EAAKE,UAA2BL,IAC/BH,EAAIC,GAAazH,QAEJ+H,IAAdD,EAAKG,MAAuBH,EAAKG,KAAKA,KAAKN,KAC1CH,EAAIC,GAAazH,EACrB,IAEGwH,CAAG,GACX,CAAC,GAEJ,QAAOxC,OAAOC,KAAKqC,GAAW9C,QAAS8C,CAAiB,C,oHC3BrD,MAAMY,EAAmB,CAC5BhG,KAAM,CACF,CAAC4F,KAAM,CAAEE,UAAW,GAAQhI,MAAO,CAAC0C,QAAS,sBAEjDyF,QAAS,CACL,CAACL,KAAM,CAAEE,UAAW,GAAQhI,MAAO,CAAC0C,QAAS,wBAC7C,CAACoF,KAAM,CAAEG,KAAM,8BAAgCjI,MAAO,CAAC0C,QAAS,mCAI3D0F,EAAmB,CAC5BlG,KAAM,CACF,CAAC4F,KAAM,CAAEE,UAAW,GAAQhI,MAAO,CAAC0C,QAAS,sBAEjD2F,MAAO,CACH,CAACP,KAAM,CAAEE,UAAW,GAAQhI,MAAO,CAAC0C,QAAS,wBAIxC4F,EAAoB,CAC7BC,WAAY,CACR,CAACT,KAAM,CAAEG,KAAM,sCAAwCjI,MAAO,CAAC0C,QAAS,sCAE5E8F,WAAY,CACR,CAACV,KAAM,CAAEG,KAAM,sCAAwCjI,MAAO,CAAC0C,QAAS,uCAInE+F,EAAuB,CAChCvG,KAAM,CACF,CAAC4F,KAAM,CAAEE,UAAW,GAAQhI,MAAO,CAAC0C,QAAS,uBAIxCgG,EAAwB,CACjCC,SAAU,CACN,CAACb,KAAM,CAAEG,KAAM,sCAAwCjI,MAAO,CAAC0C,QAAS,oCAE5EkG,QAAS,CACL,CAACd,KAAM,CAAEG,KAAM,sCAAwCjI,MAAO,CAAC0C,QAAS,oCAKnEmG,EAAwB,CACjC3G,KAAM,CACF,CAAC4F,KAAM,CAAEE,UAAW,GAAQhI,MAAO,CAAC0C,QAAS,sBAEjD2F,MAAO,CACH,CAACP,KAAM,CAAEE,UAAW,GAAQhI,MAAO,CAAC0C,QAAS,uBAEjDF,KAAM,CACF,CAACsF,KAAM,CAAEE,UAAW,GAAQhI,MAAO,CAAC0C,QAAS,sBAEjDoG,YAAa,CACT,CAAChB,KAAM,CAAEE,UAAW,GAAQhI,MAAO,CAAC0C,QAAS,8BAIxCqG,EAAyB,CAClCC,cAAe,CACX,CAAClB,KAAM,CAAEG,KAAM,sCAAwCjI,MAAO,CAAC0C,QAAS,0CAInEuG,EAAkB,CAC3B/G,KAAM,CACF,CAAC4F,KAAM,CAAEE,UAAW,GAAQhI,MAAO,CAAC0C,QAAS,uBAIxCwG,EAAqB,CAC9BhH,KAAM,CACF,CAAC4F,KAAM,CAAEE,UAAW,GAAQhI,MAAO,CAAC0C,QAAS,uBAIxCqC,EAAwB,CACjCtC,MAAO,CACH,CAACqF,KAAM,CAAEE,UAAW,GAAQhI,MAAO,CAAC0C,QAAS,uBAEjDG,SAAU,CACN,CAACiF,KAAM,CAAEE,UAAW,GAAQhI,MAAO,CAAC0C,QAAS,0B","sources":["layout/MainBody/MainBody.tsx","layout/MainHead/MainHead.tsx","layout/ReactPortal/helper.ts","layout/ReactPortal/ReactPortal.tsx","pages/super-admin/NewSuperAdmin.tsx","pages/super-admin/SuperAdminsList.tsx","pages/super-admin/SuperAdmin.tsx","shared/objectModels/GenericModel.ts","shared/ui/LoaderCircleUI/LoaderCircleUI.tsx","shared/ui/ButtonUI/ButtonUI.tsx","shared/ui/HeadingUI/HeadingUI.tsx","shared/ui/InputUI/InputUI.tsx","shared/ui/PopupUI/PopupUI.tsx","utils/validators/validator.ts","utils/validators/validatorOptions.ts"],"sourcesContent":["import './style.scss'\n\ninterface Props {\n    children: any\n}\n\nconst MainBody = ({\n    children\n}: Props) => {\n    return (\n        <div className=\"main-body\">\n            {children}\n        </div>\n    );\n};\n\nexport default MainBody;","import HeadingUI from \"shared/ui/HeadingUI/HeadingUI\";\nimport './style.scss'\nimport { ButtonUI } from \"shared/ui/ButtonUI/ButtonUI\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { adminSignout } from \"services/authService\";\nimport { eraseCookie } from \"shared/helpers/helpers\";\nimport { useDispatch } from \"react-redux\";\nimport { setActiveSuperAdmin, setIsAuth } from \"redux/reducers/authReducer\";\nimport { useNavigate } from \"react-router-dom\";\n\ninterface Props {\n    text: string,\n}\n\nconst MainHead = ({\n    text\n}: Props) => {\n\n    const dispatch = useDispatch()\n\n    const navigate = useNavigate()\n\n    const signout = async () => {\n\t\ttry {\n\t\t\tconst data = await adminSignout();\n\t\t\tif (data) {\n\t\t\t\teraseCookie('accessToken')\n\t\t\t\tdispatch(setIsAuth(false));\n                dispatch(setActiveSuperAdmin({}))\n\t\t\t\tnavigate('/login');\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n    }\n\n    return (\n        <div className=\"main-head\">\n            <HeadingUI text={text} color=\"#aa8a75\" />\n            <ButtonUI\n                classN=\"main-head-logout\"\n                onClick={signout}\n            >\n                <FontAwesomeIcon icon={faSignOutAlt} />\n                <span>Sign out</span>\n            </ButtonUI>\n        </div>\n    );\n};\n\nexport default MainHead;","export function createWrapperAndAppendToBody(wrapperId: string) {\n    const wrapperElement = document.createElement(\"div\");\n    wrapperElement.setAttribute(\"id\", wrapperId);\n    document.body.appendChild(wrapperElement);\n    return wrapperElement;\n  }\n  \n  export const checkOffsetHeight = (selector: any) => {\n    const elem = document.querySelector(selector);\n    const top = elem && elem.getBoundingClientRect().top - 90;\n    let stack: any = [];\n    let prevScrollY = 0;\n  \n    const move = () => {\n      let point = window.scrollY + 20 > top ? top - window.scrollY : 20;\n    \n      if (top !== stack[0]) {\n        stack = [top];\n      } else {\n        stack.push(top);\n      }\n    \n      window.scrollBy({\n        top: point,\n      });\n  \n      if (prevScrollY === window.scrollY) return;\n  \n      if (window.scrollY + 10 < top) {\n        prevScrollY = window.scrollY;\n        requestAnimationFrame(move)\n      }\n    }\n  \n    return move;\n  }","import { useLayoutEffect, useState } from \"react\";\nimport { createPortal,  } from \"react-dom\";\nimport { createWrapperAndAppendToBody } from \"./helper\";\n\n\nfunction ReactPortal({ children, wrapperId = \"react-portal-wrapper\" }: any) {\n  const [wrapperElement, setWrapperElement] = useState<any>(null);\n\n  useLayoutEffect(() => {\n    let element = document.getElementById(wrapperId)!;\n    let systemCreated = false;\n\n    if (!element) {\n      systemCreated = true;\n      element = createWrapperAndAppendToBody(wrapperId);\n    }\n\n    setWrapperElement(element);\n\n    return () => {\n      if (systemCreated && element.parentNode) {\n        element.parentNode.removeChild(element);\n      }\n    };\n  }, [wrapperId]);\n\n  let element = document.getElementById(wrapperId);\n\n  if (!element) {\n    element = createWrapperAndAppendToBody(wrapperId);\n  }\n\n  if (wrapperElement === null) return null;\n\n  return createPortal(children, wrapperElement);\n}\n\nexport default ReactPortal;","import { ChangeEvent } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getSigninData, setSigninData } from \"redux/reducers/authReducer\";\nimport { ObjectType } from \"shared/helpers/helpers\";\nimport { CallbackSkeletonType } from \"shared/objectModels/GenericModel\";\nimport { ButtonUI } from \"shared/ui/ButtonUI/ButtonUI\";\nimport HeadingUI from \"shared/ui/HeadingUI/HeadingUI\";\nimport InputUI from \"shared/ui/InputUI/InputUI\";\nimport './style.scss'\n\ninterface Props {\n    callback: CallbackSkeletonType,\n    closePopup: CallbackSkeletonType,\n    errors: ObjectType\n}\n\nconst NewSuperAdmin = ({\n    callback,\n    closePopup,\n    errors\n}: Props) => {\n\n    const dispatch = useDispatch()\n\n    const signinData = useSelector(getSigninData)\n\n    const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n        const { target: { name, value } } = event\n        dispatch(setSigninData({ name, value }))\n    }\n\n    return (\n        <form onSubmit={callback} className=\"new-super-admin\">\n            <HeadingUI text=\"Add new super admin\" align=\"center\" color=\"#aa8a75\" />\n            <div className=\"new-super-admin-inputs\">\n                <InputUI\n                    type=\"text\"\n                    name=\"email\"\n                    value={signinData?.email}\n                    error={errors?.email?.message || ''}\n                    placeholder=\"Email\"\n                    callback={handleInputChange}\n                    autoComplete=\"off\"\n                />\n                <InputUI\n                    type=\"password\"\n                    name=\"password\"\n                    value={signinData?.password}\n                    error={errors?.password?.message || ''}\n                    placeholder=\"Password\"\n                    callback={handleInputChange}\n                    autoComplete=\"off\"\n                />\n            </div>\n            <div className=\"new-super-admin-actions\">\n                <ButtonUI onClick={() => closePopup()} version=\"gray\">Close</ButtonUI>\n                <ButtonUI type=\"submit\">Add</ButtonUI>\n            </div>\n        </form>\n    );\n};\n\nexport default NewSuperAdmin;","import { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getActiveSuperAdmin } from \"redux/reducers/authReducer\";\nimport { getSuperAdminsList } from \"services/authService\";\nimport { removeSAdmin } from \"shared/api/dataApi\";\nimport { ArrayType, ObjectType } from \"shared/helpers/helpers\";\nimport { ButtonUI } from \"shared/ui/ButtonUI/ButtonUI\";\nimport HeadingUI from \"shared/ui/HeadingUI/HeadingUI\";\nimport PopupUI from \"shared/ui/PopupUI/PopupUI\";\n\ninterface Props {\n    admins: ArrayType\n}\n\nconst SuperAdminsList = ({\n    admins\n}: Props) => {\n\n    const dispatch = useDispatch()\n    const [isVisible, setIsVisible] = useState<boolean>(false)\n    const [removableAdmin, setRemovableAdmin] = useState<ObjectType>({})\n\n    const removeSuperAdmin = async () => {\n        if (removableAdmin?._id) {\n            await removeSAdmin({ removableAdmin })\n            await getSuperAdminsList(dispatch)\n            closePopup()\n        }\n    }\n\n    const prepareToRemoveAdmin = async (admin: ObjectType) => {\n        setRemovableAdmin(admin)\n        setIsVisible(true)\n    }\n\n    const closePopup = () => {\n        setRemovableAdmin({})\n        setIsVisible(false)\n    }\n\n    const activeSAdmin = useSelector(getActiveSuperAdmin)\n\n    return (\n        <div className=\"super-admin-list\">\n            <table>\n                <thead>\n                    <tr>\n                        <th>Email</th>\n                        <th>Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {admins?.map((admin: ObjectType) => {\n                        return <tr key={admin?._id}>\n                            <td>{admin?.email}</td>\n                            <td><ButtonUI disabled={activeSAdmin?.email === admin?.email} onClick={() => prepareToRemoveAdmin(admin)}><FontAwesomeIcon icon={faTrash} /></ButtonUI></td>\n                        </tr>\n                    })}\n                </tbody>\n            </table>\n            {isVisible && <PopupUI callback={closePopup}>\n                <div className=\"remove-super-admin\">\n                    <HeadingUI text=\"Remove super admin\" align=\"center\" color=\"#aa8a75\" />\n                    <p className=\"remove-super-admin-text\">Do you want to remove the super admin <span> {removableAdmin?.email} ?</span></p>\n                    <div className=\"new-super-admin-actions\">\n                        <ButtonUI onClick={() => closePopup()} version=\"gray\">Discard</ButtonUI>\n                        <ButtonUI onClick={() => removeSuperAdmin()} version=\"red\">Remove</ButtonUI>\n                    </div>\n                </div>\n            </PopupUI>}\n        </div>\n    );\n};\n\nexport default SuperAdminsList;","import MainBody from \"layout/MainBody/MainBody\";\nimport MainHead from \"layout/MainHead/MainHead\";\nimport { useEffect, useState } from \"react\";\nimport { ObjectType } from \"shared/helpers/helpers\";\nimport { ButtonUI } from \"shared/ui/ButtonUI/ButtonUI\";\nimport HeadingUI from \"shared/ui/HeadingUI/HeadingUI\";\nimport PopupUI from \"shared/ui/PopupUI/PopupUI\";\nimport NewSuperAdmin from \"./NewSuperAdmin\";\nimport SuperAdminsList from \"./SuperAdminsList\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getSigninData, getSuperAdmins } from \"redux/reducers/authReducer\";\nimport { getSuperAdminsList } from \"services/authService\";\nimport { formValidator } from \"utils/validators/validator\";\nimport { superAdminFormOptions } from \"utils/validators/validatorOptions\";\nimport { addNewSAdmin } from \"shared/api/dataApi\";\n\nconst SuperAdmin = () => {\n\n    const [isVisible, setIsVisible] = useState<boolean>(false)\n    const [errors, setErrors] = useState<ObjectType>({})\n    const dispatch = useDispatch()\n    const superAdminList = useSelector(getSuperAdmins)\n    const signinData = useSelector(getSigninData)\n    useEffect(() => {\n        getSuperAdminsList(dispatch)\n    },[])\n    \n    const closePopup = () => {\n        setIsVisible(false)\n        setErrors({})\n    }\n\n    const addNewSuperAdmin = async (e: HTMLFormElement) => {\n        e.preventDefault()\n        const errorsForm = formValidator(signinData, superAdminFormOptions);\n        if (errorsForm) {return setErrors(errorsForm)};\n        if (Object.keys(errors).length) {setErrors({})};\n        const response = await addNewSAdmin(signinData)\n        if (response?.errors) {\n            const passwordError = response?.errors?.find((err: ObjectType) => err?.path === 'password')?.msg || ''\n            const emailError = response?.errors?.find((err: ObjectType) => err?.path === 'email')?.msg || ''\n            return setErrors({\n                password: {\n                    message: passwordError\n                },\n                email: {\n                    message: emailError\n                },\n            })\n        }\n        await getSuperAdminsList(dispatch)\n        closePopup()\n    }\n\n    return (\n        <div className=\"admins-list\">\n            <MainHead text=\"Edit SuperAdmins\" />\n            <ButtonUI classN=\"add-button\" onClick={() => setIsVisible(true)} type=\"button\">New SuperAdmin</ButtonUI>\n            <MainBody>\n                <div className=\"admins-default-list\">\n                    <HeadingUI text=\"SuperAdmins List\" size=\"22px\" />\n                    {superAdminList?.length ? <SuperAdminsList admins={superAdminList} /> : null }\n                </div>\n                {isVisible && <PopupUI callback={closePopup}>\n                   <NewSuperAdmin \n                        callback={addNewSuperAdmin}\n                        errors={errors}\n                        closePopup={closePopup}\n                   />\n                </PopupUI>}\n            </MainBody>\n        </div>\n    );\n};\n\nexport default SuperAdmin;","export type CallbackSkeletonType = (event?: any) => void\nexport const CallbackSkeletonValue = () => {}","interface Iloader {\n    classN?: string\n}\n\nconst LoaderCircleUI = ({ classN }: Iloader) => {\n    return (\n        <div className={`LoaderCircleUI ${classN}`} ></div>\n    )\n}\n\nexport default LoaderCircleUI","import { HTMLProps } from \"react\";\nimport \"./style.scss\";\nimport { CallbackSkeletonValue } from \"shared/objectModels/GenericModel\";\nimport LoaderCircleUI from \"../LoaderCircleUI/LoaderCircleUI\";\n\ninterface Props extends HTMLProps<HTMLButtonElement> {\n  type?: \"button\" | \"submit\" | \"reset\";\n  version?: string;\n  classN?: string;\n  disabled?: boolean;\n  isLoading?: boolean;\n}\n\nconst versions: Record<string, string> = {\n  default: \"default-btn\",\n  red: 'red-btn',\n  orange: 'orange-btn',\n  blue: 'blue-btn',\n  green: 'green-btn',\n  gray: 'gray-btn',\n}\n\nexport const ButtonUI: React.FC<Props> = ({\n  children,\n  type = \"button\",\n  version = \"default\",\n  classN = '',\n  disabled = false,\n  isLoading = false,\n  onClick = CallbackSkeletonValue,\n  ...buttonProps\n}) => {\n  return (\n    <button\n      {...buttonProps}\n      className={`ButtonUI ${classN} ${versions[version]} ${disabled ? '_disabled' : ''}`}\n      type={type}\n      onClick={(event) => !disabled && !isLoading && onClick(event)}\n    >{isLoading ? (<LoaderCircleUI />) : children}</button>\n  )\n}","import './style.scss'\n\ninterface Props {\n    text: string,\n    classN?: string,\n    color?: string,\n    size?: string,\n    align?: 'center' | 'left' | 'right'\n}\n\nconst HeadingUI = ({\n    text,\n    classN = '',\n    color = '',\n    size = '',\n    align = 'left'\n}: Props) => {\n    return (\n        <h1 className={`headingUI ${classN}`}\n            style={{\n                color: color || '#000',\n                fontSize: size || '30px',\n                textAlign: align\n            }}\n        >{text}</h1>\n    );\n};\n\nexport default HeadingUI;","import { CallbackSkeletonType } from \"shared/objectModels/GenericModel\";\nimport './style.scss'\nimport { useEffect } from \"react\";\n\ninterface Props {\n    value: string,\n    placeholder?: string,\n    type?: string,\n    callback: CallbackSkeletonType,\n    label?: string,\n    name: string,\n    error?: string,\n    autoComplete?: string,\n}\n\nconst InputUI = ({\n    value,\n    placeholder = '',\n    type = 'text',\n    callback,\n    label = '',\n    name,\n    error,\n    autoComplete = ''\n}: Props) => {\n    // const refInput = useRef<HTMLInputElement | null>(null)\n    // const refSpan = useRef<HTMLInputElement | null>(null)\n\n    // useEffect(() => {\n    //     if (error && refInput?.current && refSpan?.current) {\n    //         refInput.current.classList.add('_errorShake')\n    //         refSpan.current.classList.add('_errorShake')\n    //         setTimeout(() => {\n    //             refInput?.current?.classList.remove('_errorShake')\n    //             refSpan?.current?.classList.remove('_errorShake')\n    //         }, 500);\n    //     }\n\n    //     return () => {\n    //         refInput?.current?.classList.remove('_errorShake')\n    //         refSpan?.current?.classList.remove('_errorShake')\n    //     }\n    // },[error])\n\n    return (\n        <div className=\"InputUI\">\n            {label && <label \n                className=\"InputUI__label\"\n                htmlFor={`InputUI-${name}`}>\n                {label}\n            </label>}\n            {error && <span className=\"error-message\">{error}</span>}\n            <input \n                className={`InputUI__input${error ? ' _error' : ''}`}\n                id={`InputUI-${name}`}\n                name={name}\n                type={type}\n                defaultValue={value}\n                onChange={callback}\n                {...(autoComplete) && {autoComplete}}\n                {...(placeholder && {placeholder})}\n            />\n        </div>\n    );\n};\n\nexport default InputUI;","import ReactPortal from 'layout/ReactPortal/ReactPortal';\nimport './style.scss'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faXmark } from '@fortawesome/free-solid-svg-icons';\nimport { CallbackSkeletonType } from 'shared/objectModels/GenericModel';\n\ninterface PropsI {\n    callback: CallbackSkeletonType,\n    children: any\n}\n\nconst PopupUI = ({\n    callback,\n    children\n}: PropsI) => {\n\n    return (\n        <ReactPortal>\n            <div className='PopupUI'>\n                <div className=\"PopupUI__container\">\n                    <div className='PopupUI__body'>\n                        {children}\n                    </div>\n                    <div className='PopupUI__icon'\n                        onClick={() => callback()}>\n                        <FontAwesomeIcon icon={faXmark} fontSize='18px' color=\"#fff\" />\n                    </div>\n                </div>\n                <div className='PopupUI__BG' onClick={() => callback()}></div>\n            </div>\n        </ReactPortal>\n    );\n};\n\nexport default PopupUI;","import { ObjectType } from \"shared/helpers/helpers\";\n\ninterface Rule {\n    error: any;\n    rule: any;\n}\n\nexport type ErrorInfo = Record<string, Record<string, {message: string}>>\n\n\nexport const formValidator = (formData: ObjectType, options: ObjectType) => {\n    const errorInfo = Object.keys(formData).reduce((acc: any, inputName): any => {\n        const currnetInputOptions:Rule[] = options[inputName] || [];\n        const inputValue = formData[inputName];\n        currnetInputOptions.forEach(option => {\n            const rule = option.rule;\n            const error = option.error; \n\n            if(rule.required !== undefined && !inputValue) {\n                acc[inputName] = error;\n            }\n            if(rule.test !== undefined && !rule.test.test(inputValue)) {\n                acc[inputName] = error;\n            }\n        });\n        return acc;\n    }, {});\n\n    return Object.keys(errorInfo).length ? errorInfo : false;\n};\n\nexport const getAllErrorMessages = (options: ObjectType) => {\n    return Object.keys(options).reduce((acc: any, item) => {\n        acc[item] = { message:  `${item} not valid`};\n        return acc;\n    }, {});\n};\n","\nexport const colorFormOptions = {\n    name: [\n        {rule: { required : true }, error: {message: 'Name is required'} },\n    ],\n    hexcode: [\n        {rule: { required : true }, error: {message: 'HexCode is required'} },\n        {rule: { test: /^#(?:[0-9a-fA-F]{3}){1,2}$/ }, error: {message: 'Incorrect format for HexCode'} },\n    ],\n}\n\nexport const printFormOptions = {\n    name: [\n        {rule: { required : true }, error: {message: 'Name is required'} },\n    ],\n    price: [\n        {rule: { required : true }, error: {message: 'Price is required'} },\n    ]\n}\n\nexport const printFilesOptions = {\n    highresurl: [\n        {rule: { test: /^$|\\.jpe?g$|\\.png$|\\.webp$|\\.bmp$/i }, error: {message: 'Incorrect format for Highres Url'} }\n    ],\n    previewurl: [\n        {rule: { test: /^$|\\.jpe?g$|\\.png$|\\.webp$|\\.bmp$/i }, error: {message: 'Incorrect format for Preview Url'} }\n    ]\n}\n\nexport const mannequinFormOptions = {\n    name: [\n        {rule: { required : true }, error: {message: 'Name is required'} },\n    ]\n}\n\nexport const mannequinFilesOptions = {\n    fronturl: [\n        {rule: { test: /^$|\\.jpe?g$|\\.png$|\\.webp$|\\.bmp$/i }, error: {message: 'Incorrect format for Front Url'} }\n    ],\n    backurl: [\n        {rule: { test: /^$|\\.jpe?g$|\\.png$|\\.webp$|\\.bmp$/i }, error: {message: 'Incorrect format for Back Url'} }\n    ]\n}\n\n\nexport const silhouetteFormOptions = {\n    name: [\n        {rule: { required : true }, error: {message: 'Name is required'} },\n    ],\n    price: [\n        {rule: { required : true }, error: {message: 'Price is required'} },\n    ],\n    type: [\n        {rule: { required : true }, error: {message: 'Type is required'} },\n    ],\n    orientation: [\n        {rule: { required : true }, error: {message: 'Orientation is required'} },\n    ]\n}\n\nexport const silhouetteFilesOptions = {\n    silhouetteurl: [\n        {rule: { test: /^$|\\.jpe?g$|\\.png$|\\.webp$|\\.bmp$/i }, error: {message: 'Incorrect format for Silhouette Url'} }\n    ]\n}\n\nexport const sizeFormOptions = {\n    name: [\n        {rule: { required : true }, error: {message: 'Name is required'} },\n    ],\n}\n\nexport const variantFormOptions = {\n    name: [\n        {rule: { required : true }, error: {message: 'Name is required'} },\n    ],\n}\n\nexport const superAdminFormOptions = {\n    email: [\n        {rule: { required : true }, error: {message: 'Email is required'} },\n    ],\n    password: [\n        {rule: { required : true }, error: {message: 'Password is required'} },\n    ]\n}"],"names":["_ref","children","_jsx","className","text","dispatch","useDispatch","navigate","useNavigate","_jsxs","HeadingUI","color","ButtonUI","classN","onClick","async","adminSignout","eraseCookie","setIsAuth","setActiveSuperAdmin","error","console","log","FontAwesomeIcon","icon","faSignOutAlt","createWrapperAndAppendToBody","wrapperId","wrapperElement","document","createElement","setAttribute","body","appendChild","setWrapperElement","useState","useLayoutEffect","element","getElementById","systemCreated","parentNode","removeChild","createPortal","_errors$email","_errors$password","callback","closePopup","errors","signinData","useSelector","getSigninData","handleInputChange","event","target","name","value","setSigninData","onSubmit","align","InputUI","type","email","message","placeholder","autoComplete","password","version","admins","isVisible","setIsVisible","removableAdmin","setRemovableAdmin","activeSAdmin","getActiveSuperAdmin","map","admin","disabled","prepareToRemoveAdmin","faTrash","_id","PopupUI","removeSAdmin","getSuperAdminsList","removeSuperAdmin","SuperAdmin","setErrors","superAdminList","getSuperAdmins","useEffect","MainHead","MainBody","size","length","SuperAdminsList","NewSuperAdmin","e","preventDefault","errorsForm","formValidator","superAdminFormOptions","Object","keys","response","addNewSAdmin","_response$errors","_response$errors$find","_response$errors2","_response$errors2$fin","passwordError","find","err","path","msg","emailError","CallbackSkeletonValue","concat","versions","default","red","orange","blue","green","gray","isLoading","buttonProps","LoaderCircleUI","style","fontSize","textAlign","label","htmlFor","id","defaultValue","onChange","ReactPortal","faXmark","formData","options","errorInfo","reduce","acc","inputName","currnetInputOptions","inputValue","forEach","option","rule","undefined","required","test","colorFormOptions","hexcode","printFormOptions","price","printFilesOptions","highresurl","previewurl","mannequinFormOptions","mannequinFilesOptions","fronturl","backurl","silhouetteFormOptions","orientation","silhouetteFilesOptions","silhouetteurl","sizeFormOptions","variantFormOptions"],"sourceRoot":""}