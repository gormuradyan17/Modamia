{"version":3,"file":"static/js/402.85743244.chunk.js","mappings":"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","sources":["services/printService.ts","components/customize/prints/NewPrintVariant.tsx","components/customize/prints/NewPrint.tsx","components/customize/prints/EditPrint.tsx","components/customize/prints/PrintsList.tsx","components/customize/prints/CustomizePrints.tsx","layout/MainBody/MainBody.tsx","layout/MainHead/MainHead.tsx","layout/ReactPortal/helper.ts","layout/ReactPortal/ReactPortal.tsx","shared/helpers/helpers.ts","shared/objectModels/GenericModel.ts","shared/ui/LoaderCircleUI/LoaderCircleUI.tsx","shared/ui/ButtonUI/ButtonUI.tsx","shared/ui/DropdownUI/DropdownUI.tsx","shared/ui/DropzoneUI/DropzoneUI.tsx","shared/ui/HeadingUI/HeadingUI.tsx","shared/ui/InputUI/InputUI.tsx","shared/ui/PopupUI/PopupUI.tsx","utils/hooks/useClickOutside.ts","utils/validators/validator.ts","utils/validators/validatorOptions.ts"],"sourcesContent":["import { setPrintData, setPrintsVariantsData } from \"redux/reducers/printReducer\"\nimport { getPrints, getPrintsVariants } from \"shared/api/dataApi\"\n\n\nexport const getAvPrints = (dispatch: any) => {\n    getPrints().then(res => {\n        dispatch(setPrintData(res))\n    }).catch(err => console.log(err))\n}\n\nexport const getAvPrintsVariants = (dispatch: any) => {\n    getPrintsVariants().then(res => {\n        dispatch(setPrintsVariantsData(res))\n    }).catch(err => console.log(err))\n}","import { faSave } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ChangeEvent, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { getAvPrintsVariants } from \"services/printService\";\nimport { addPrintVariant } from \"shared/api/dataApi\";\nimport InputUI from \"shared/ui/InputUI/InputUI\";\n\nconst NewPrintVariant = () => {\n\n    const [isVisible, setIsVisible] = useState<boolean>(false)\n    const [newVariant, setNewVariant] = useState<string>('')\n    const dispatch = useDispatch()\n    \n    const toggleNewVariant = () => {\n        setIsVisible(!isVisible)\n        setNewVariant('')\n    }\n\n    const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n        const { target: { value } } = event;\n        setNewVariant(value)\n\n    }\n\n    const saveVariant = async () => {\n        if (newVariant) {\n            await addPrintVariant({\n                name: newVariant\n            })\n            await getAvPrintsVariants(dispatch)\n        }\n        setIsVisible(!isVisible)\n        setNewVariant('')\n    }\n    return (\n        <div className=\"new-item-variant\">\n            <button\n                type=\"button\"\n                onClick={toggleNewVariant}\n            >Add new type +</button>\n            {isVisible && <div className=\"new-item-variant-save\">\n                <InputUI\n                    placeholder=\"New type\"\n                    value={newVariant}\n                    name=\"newType\"\n                    callback={handleInputChange}\n                />\n                <button\n                    type=\"button\"\n                    onClick={saveVariant}\n                ><FontAwesomeIcon icon={faSave} /></button>\n            </div>}\n        </div>\n    );\n};\n\nexport default NewPrintVariant;","import { ChangeEvent, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAvPrints } from 'services/printService';\nimport { addPrint } from 'shared/api/dataApi';\nimport { ArrayType, ObjectType, appColor, getDropdownOptionsFromItemsVariants } from 'shared/helpers/helpers';\nimport { CallbackSkeletonType } from 'shared/objectModels/GenericModel';\nimport { ButtonUI } from 'shared/ui/ButtonUI/ButtonUI';\nimport DropzoneUI from 'shared/ui/DropzoneUI/DropzoneUI';\nimport HeadingUI from 'shared/ui/HeadingUI/HeadingUI';\nimport InputUI from 'shared/ui/InputUI/InputUI';\nimport { formValidator } from 'utils/validators/validator';\nimport { printFilesOptions, printFormOptions } from 'utils/validators/validatorOptions';\nimport NewPrintVariant from './NewPrintVariant';\nimport DropdownUI from 'shared/ui/DropdownUI/DropdownUI';\nimport { printsVariants } from 'redux/reducers/printReducer';\n\ninterface Props {\n    closePopup: CallbackSkeletonType,\n}\n\nconst NewPrint = ({\n    closePopup,\n}: Props) => {\n    const dispatch = useDispatch()\n\n    const printVariants = getDropdownOptionsFromItemsVariants(useSelector(printsVariants)) || [{}]\n\n    const [data, setData] = useState<ObjectType>({\n        name: '',\n        price: '',\n        tags: '',\n        highresurl: '',\n        previewurl: '',\n        colorVariant: ''\n    })\n    const [errors, setErrors] = useState<ObjectType>({})\n    const [fileErrors, setFileErrors] = useState<ObjectType>({})\n\n    const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n        const { target: { name, value } } = event\n        setData({ ...data, [name]: value })\n    }\n\n    const addNewPrint: CallbackSkeletonType = async (e: HTMLFormElement) => {\n        e.preventDefault()\n        const errors = formValidator(data, printFormOptions);\n        if (errors) { return setErrors(errors) };\n        if (Object.keys(errors).length) { setErrors({}) };\n        const formData = new FormData();\n        Object.keys(data).forEach((key: string) => {\n            formData.append(key, data[key]); // Add other data properties as needed\n        });\n        await addPrint(formData)\n        await getAvPrints(dispatch)\n        closePopup()\n\n    }\n\n    const addImage = (files: ArrayType, name: string) => {\n        setData({\n            ...data,\n            [name]: files[0]\n        })\n    }\n\n    const validateFiles = (files: ArrayType, field: string) => {\n        let err = {}\n        files?.map(file => {\n            const obj = {\n                [field]: file?.name\n            }\n            err = formValidator(obj, printFilesOptions);\n        })\n        if (Object.keys(err).length) {\n            setFileErrors(err)\n            return false\n        }\n        if (Object.keys(fileErrors).length) { setFileErrors({}) };\n        return true\n    }\n\n    const handleDropdownChange = (dataT: ObjectType) => {\n        const value = dataT.id\n        setData({ ...data, printVariant: value })\n    }\n\n    return (\n        <form onSubmit={addNewPrint} className=\"new-print\">\n            <HeadingUI text=\"Add new print\" align=\"center\" color={appColor} />\n            <div className=\"new-print-inputs\">\n                <InputUI\n                    placeholder=\"Name\"\n                    value={data?.name}\n                    label=\"Name*\"\n                    name=\"name\"\n                    error={errors?.name?.message || ''}\n                    callback={handleInputChange}\n                />\n                <InputUI\n                    type='number'\n                    placeholder=\"Price\"\n                    value={data?.price}\n                    label=\"Price*\"\n                    name=\"price\"\n                    error={errors?.price?.message || ''}\n                    callback={handleInputChange}\n                />\n                <InputUI\n                    placeholder=\"Tags\"\n                    value={data?.tags}\n                    label=\"Tags\"\n                    name=\"tags\"\n                    callback={handleInputChange}\n                />\n                <div className=\"new-color-variants\">\n                    <NewPrintVariant />\n                    <DropdownUI\n                        options={printVariants}\n                        onChange={(data) => handleDropdownChange(data)}\n                        label=\"Print type\"\n                    />\n                </div>\n                <div className=\"new-print-zone\">\n                    <HeadingUI text='High res image' size='18px' color={appColor} />\n                    <DropzoneUI\n                        width=\"480px\"\n                        height=\"160px\"\n                        name=\"highresurl\"\n                        validationCallback={(files) => validateFiles(files, 'highresurl')}\n                        error={fileErrors?.highresurl?.message || ''}\n                        onChange={(files: ArrayType) => addImage(files, 'highresurl')}\n                    />\n                </div>\n                <div className=\"new-print-zone\">\n                    <HeadingUI text='Preview image' size='18px' color={appColor} />\n                    <DropzoneUI\n                        width=\"480px\"\n                        height=\"160px\"\n                        name=\"previewurl\"\n                        validationCallback={(files) => validateFiles(files, 'previewurl')}\n                        error={fileErrors?.previewurl?.message || ''}\n                        onChange={(files: ArrayType) => addImage(files, 'previewurl')}\n                    />\n                </div>\n            </div>\n            <div className=\"new-print-actions\">\n                <ButtonUI onClick={() => closePopup()} version=\"gray\">Close</ButtonUI>\n                <ButtonUI type=\"submit\">Add</ButtonUI>\n            </div>\n        </form>\n    );\n};\n\nexport default NewPrint;","import { ChangeEvent, useState } from \"react\";\nimport { CallbackSkeletonType } from \"shared/objectModels/GenericModel\";\nimport { ButtonUI } from \"shared/ui/ButtonUI/ButtonUI\";\nimport HeadingUI from \"shared/ui/HeadingUI/HeadingUI\";\nimport InputUI from \"shared/ui/InputUI/InputUI\";\nimport './style.scss'\nimport { ArrayType, ObjectType, appColor, getActiveItemTypeById, getDropdownOptionsFromItemsVariants } from \"shared/helpers/helpers\";\nimport DropzoneUI from \"shared/ui/DropzoneUI/DropzoneUI\";\nimport { BASE_UPLOADS_PRINTS_HIGHS_URL, BASE_UPLOADS_PRINTS_PREVIEWS_URL } from \"shared/constants/genericApiRoutes\";\nimport { printFilesOptions } from \"utils/validators/validatorOptions\";\nimport { formValidator } from \"utils/validators/validator\";\nimport DropdownUI from \"shared/ui/DropdownUI/DropdownUI\";\nimport { useSelector } from \"react-redux\";\nimport { printsVariants } from \"redux/reducers/printReducer\";\n\ninterface Props {\n    callback: CallbackSkeletonType,\n    closePopup: CallbackSkeletonType,\n    print: ObjectType,\n    setPrint: CallbackSkeletonType,\n    errors: ObjectType,\n    printInfo: ObjectType\n}\n\nconst EditPrint = ({\n    callback,\n    closePopup,\n    print,\n    setPrint,\n    errors,\n    printInfo\n}: Props) => {\n\n    const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n        const { target: { name, value } } = event\n        setPrint({ ...print, [name]: value })\n    }\n    const [fileErrors, setFileErrors] = useState<ObjectType>({})\n    const printVariants = getDropdownOptionsFromItemsVariants(useSelector(printsVariants)) || [{}]\n    \n    const editImage = (files: ArrayType, name: string) => {\n        setPrint({\n            ...print,\n            [name]: URL.createObjectURL(files[0] as any)\n        })\n    }\n\n    const validateFiles = (files: ArrayType, field: string) => {\n        let err = {}\n        files?.map(file => {\n            const obj = {\n                [field]: file?.name\n            }\n            err = formValidator(obj, printFilesOptions);\n        })\n        if (Object.keys(err).length) {\n            setFileErrors(err)\n            return false\n        }\n        if (Object.keys(fileErrors).length) { setFileErrors({}) };\n        return true\n    }\n\n    const handleDropdownChange = (data: ObjectType) => {\n        const value = data.id\n        setPrint({ ...print, printVariant: value })\n    }\n\n\n    return (\n        <div className=\"new-print\">\n            <HeadingUI text={`Edit ${printInfo.name} print`} align=\"center\" color=\"#aa8a75\" />\n            <div className=\"new-print-inputs\">\n                <InputUI\n                    placeholder=\"Name\"\n                    value={print?.name}\n                    label=\"Name*\"\n                    name=\"name\"\n                    error={errors?.name?.message || ''}\n                    callback={handleInputChange}\n                />\n                <InputUI\n                    type='number'\n                    placeholder=\"Price\"\n                    value={print?.price}\n                    label=\"Price*\"\n                    name=\"price\"\n                    error={errors?.price?.message || ''}\n                    callback={handleInputChange}\n                />\n                <InputUI\n                    placeholder=\"Tags\"\n                    value={print?.tags}\n                    label=\"Tags\"\n                    name=\"tags\"\n                    callback={handleInputChange}\n                />\n            </div>\n            <div className=\"new-print-variants\">\n                <DropdownUI\n                    options={printVariants}\n                    onChange={(data) => handleDropdownChange(data)}\n                    label=\"Print type\"\n                    defaultValue={getActiveItemTypeById(printVariants, print?.printVariant)}\n                />\n            </div>\n            <div className=\"new-print-zone\">\n                <HeadingUI text='High res image' size='18px' color={appColor} />\n                <DropzoneUI\n                    width=\"480px\"\n                    height=\"160px\"\n                    name='highresurl'\n                    validationCallback={(files) => validateFiles(files, 'highresurl')}\n                    error={fileErrors?.highresurl?.message || ''}\n                    onChange={(files: ArrayType) => editImage(files, 'highresurl')}\n                    defaultFiles={[{\n                        ...print,\n                        preview: print.highresurl?.includes('blob') ? print.highresurl : `${BASE_UPLOADS_PRINTS_HIGHS_URL}${print.highresurl}`\n                    }]}\n                />\n            </div>\n            <div className=\"new-print-zone\">\n                <HeadingUI text='Preview image' size='18px' color={appColor} />\n                <DropzoneUI\n                    width=\"480px\"\n                    height=\"160px\"\n                    name='previewurl'\n                    onChange={(files: ArrayType) => editImage(files, 'previewurl')}\n                    validationCallback={(files) => validateFiles(files, 'previewurl')}\n                    error={fileErrors?.previewurl?.message || ''}\n                    defaultFiles={[{\n                        ...print,\n                        preview: print.previewurl?.includes('blob') ? print.previewurl : `${BASE_UPLOADS_PRINTS_PREVIEWS_URL}${print.previewurl}`\n                    }]}\n                />\n            </div>\n            <div className=\"new-print-actions\">\n                <ButtonUI onClick={() => closePopup()} version=\"gray\">Discard</ButtonUI>\n                <ButtonUI onClick={() => callback()}>Save</ButtonUI>\n            </div>\n        </div>\n    );\n};\n\nexport default EditPrint;","import { BASE_UPLOADS_PRINTS_PREVIEWS_URL } from \"shared/constants/genericApiRoutes\";\nimport { ArrayType, ObjectType } from \"shared/helpers/helpers\";\nimport { ButtonUI } from \"shared/ui/ButtonUI/ButtonUI\";\nimport HeadingUI from \"shared/ui/HeadingUI/HeadingUI\";\nimport './style.scss'\nimport { useState } from \"react\";\nimport PopupUI from \"shared/ui/PopupUI/PopupUI\";\nimport EditPrint from \"./EditPrint\";\nimport { updatePrint } from \"shared/api/dataApi\";\nimport { getAvPrints } from \"services/printService\";\nimport { useDispatch } from \"react-redux\";\nimport { formValidator } from \"utils/validators/validator\";\nimport { printFormOptions } from \"utils/validators/validatorOptions\";\n\ninterface Props {\n    prints: ArrayType\n}\n\nconst PrintsList = ({\n    prints\n}: Props) => {\n\n    const [isVisible, setIsVisible] = useState<boolean>(false)\n    const [editablePrint, setEditablePrint] = useState<ObjectType>({})\n    const [printInfo, setPrintInfo] = useState<ObjectType>({})\n    const [errors, setErrors] = useState<ObjectType>({})\n    const dispatch = useDispatch()\n    const editPrint = (print: ObjectType) => {\n        if (print) {\n            setEditablePrint(print)\n            setPrintInfo(print)\n            setIsVisible(true)\n        }\n    }\n\n    const closePopup = () => {\n        setIsVisible(false)\n        setEditablePrint({})\n        setPrintInfo({})\n        setErrors({})\n    }\n\n    const savePrint = async () => {\n\n        const formErrors = formValidator(editablePrint, printFormOptions);\n        if (formErrors) { return setErrors(formErrors) };\n        if (Object.keys(errors).length) { setErrors({}) };\n        async function getNewFile(image: string) {\n            const response = await fetch(image);\n            const blob = await response.blob();\n            const file = new File([blob], 'image.jpg', { type: blob.type });\n            return file\n        }\n        const newPrint = JSON.parse(JSON.stringify(editablePrint));\n        if (editablePrint?.highresurl?.includes('blob')) {\n            const file = await getNewFile(editablePrint.highresurl);\n            newPrint.highresurl = file;\n        }\n        if (editablePrint?.previewurl?.includes('blob')) {\n            const file = await getNewFile(editablePrint.previewurl);\n            newPrint.previewurl = file;\n        }\n        const formData = new FormData();\n        Object.keys(newPrint).forEach((key) => {\n            formData.append(key, newPrint[key]);\n        });\n\n        await updatePrint(formData)\n        await getAvPrints(dispatch)\n        closePopup()\n    }\n\n    return (\n        <div className=\"print-list\">\n            {prints?.map((print: ObjectType) => {\n                return <div className=\"prints-list-print\" key={print._id}>\n                    <HeadingUI classN=\"print-list-text _ellipsis\" text={print.name} size=\"16px\" />\n                    <div className=\"print-list-image\">\n                        <img src={`${BASE_UPLOADS_PRINTS_PREVIEWS_URL}${print.previewurl}`} className=\"print-list-img\" alt={print.name} />\n                    </div>\n                    <span></span>\n                    <ButtonUI classN=\"print-list-button\" onClick={() => editPrint(print)}>Edit</ButtonUI>\n                </div>\n            })}\n            {isVisible && <PopupUI callback={closePopup}>\n                <EditPrint\n                    callback={savePrint}\n                    closePopup={closePopup}\n                    print={editablePrint}\n                    errors={errors}\n                    setPrint={setEditablePrint}\n                    printInfo={printInfo}\n                />\n            </PopupUI>}\n        </div>\n    );\n};\n\nexport default PrintsList;","import MainBody from \"layout/MainBody/MainBody\";\nimport MainHead from \"layout/MainHead/MainHead\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ButtonUI } from \"shared/ui/ButtonUI/ButtonUI\";\nimport HeadingUI from \"shared/ui/HeadingUI/HeadingUI\";\nimport PopupUI from \"shared/ui/PopupUI/PopupUI\";\nimport './style.scss'\nimport NewPrint from \"./NewPrint\";\nimport { getAvPrints, getAvPrintsVariants } from \"services/printService\";\nimport { availablePrints, resetPrintState } from \"redux/reducers/printReducer\";\nimport PrintsList from \"./PrintsList\";\n\nconst CustomizePrints = () => {\n\n    const [isVisible, setIsVisible] = useState<boolean>(false)\n    const prints = useSelector(availablePrints)\n    const dispatch = useDispatch()\n    const closePopup = () => {\n        setIsVisible(false)\n        dispatch(resetPrintState())\n    }\n\n    useEffect(() => {\n        getAvPrints(dispatch)\n        getAvPrintsVariants(dispatch)\n    }, [])\n\n    return (\n        <div>\n            <MainHead text=\"Customize Prints\" />\n            <ButtonUI classN=\"add-button\" onClick={() => setIsVisible(true)} type=\"button\">New Print</ButtonUI>\n            <MainBody>\n                <div className=\"prints-pallette-list\">\n                    <HeadingUI text=\"Print List\" size=\"22px\" />\n                    {prints?.length ? <PrintsList prints={prints} /> : null}\n                </div>\n                {isVisible && <PopupUI callback={closePopup}>\n                    <NewPrint \n                        closePopup={closePopup}\n                    />\n                </PopupUI>}\n            </MainBody>\n        </div>\n    );\n};\n\nexport default CustomizePrints;","import './style.scss'\n\ninterface Props {\n    children: any\n}\n\nconst MainBody = ({\n    children\n}: Props) => {\n    return (\n        <div className=\"main-body\">\n            {children}\n        </div>\n    );\n};\n\nexport default MainBody;","import HeadingUI from \"shared/ui/HeadingUI/HeadingUI\";\nimport './style.scss'\n\ninterface Props {\n    text: string,\n}\n\nconst MainHead = ({\n    text\n}: Props) => {\n    return (\n        <div className=\"main-head\">\n            <HeadingUI text={text} color=\"#aa8a75\" />\n        </div>\n    );\n};\n\nexport default MainHead;","export function createWrapperAndAppendToBody(wrapperId: string) {\n    const wrapperElement = document.createElement(\"div\");\n    wrapperElement.setAttribute(\"id\", wrapperId);\n    document.body.appendChild(wrapperElement);\n    return wrapperElement;\n  }\n  \n  export const checkOffsetHeight = (selector: any) => {\n    const elem = document.querySelector(selector);\n    const top = elem && elem.getBoundingClientRect().top - 90;\n    let stack: any = [];\n    let prevScrollY = 0;\n  \n    const move = () => {\n      let point = window.scrollY + 20 > top ? top - window.scrollY : 20;\n    \n      if (top !== stack[0]) {\n        stack = [top];\n      } else {\n        stack.push(top);\n      }\n    \n      window.scrollBy({\n        top: point,\n      });\n  \n      if (prevScrollY === window.scrollY) return;\n  \n      if (window.scrollY + 10 < top) {\n        prevScrollY = window.scrollY;\n        requestAnimationFrame(move)\n      }\n    }\n  \n    return move;\n  }","import { useLayoutEffect, useState } from \"react\";\nimport { createPortal,  } from \"react-dom\";\nimport { createWrapperAndAppendToBody } from \"./helper\";\n\n\nfunction ReactPortal({ children, wrapperId = \"react-portal-wrapper\" }: any) {\n  const [wrapperElement, setWrapperElement] = useState<any>(null);\n\n  useLayoutEffect(() => {\n    let element = document.getElementById(wrapperId)!;\n    let systemCreated = false;\n\n    if (!element) {\n      systemCreated = true;\n      element = createWrapperAndAppendToBody(wrapperId);\n    }\n\n    setWrapperElement(element);\n\n    return () => {\n      if (systemCreated && element.parentNode) {\n        element.parentNode.removeChild(element);\n      }\n    };\n  }, [wrapperId]);\n\n  let element = document.getElementById(wrapperId);\n\n  if (!element) {\n    element = createWrapperAndAppendToBody(wrapperId);\n  }\n\n  if (wrapperElement === null) return null;\n\n  return createPortal(children, wrapperElement);\n}\n\nexport default ReactPortal;","import { BASE_UPLOADS_SILHOUETTES_BOTTOMS_URL, BASE_UPLOADS_SILHOUETTES_SLEEVES_URL, BASE_UPLOADS_SILHOUETTES_TOPS_URL } from \"shared/constants/genericApiRoutes\";\nimport { AnimationObject } from \"shared/objectModels/AnimationModel\";\n\nexport type ArrayType = Array<Record<string, any>>\nexport type ObjectType = Record<string, any>\n\nexport const PortalAnimations: AnimationObject = {\n  fadeIn: [\n    { opacity: 0, visibility: \"hidden\" },\n    { opacity: 1, visibility: \"visible\" },\n  ],\n  fadeOut: [\n    { opacity: 1, visibility: \"visible\" },\n    { opacity: 0, visibility: \"hidden\" },\n  ],\n};\n\nexport const CardBarPanelAnimations: AnimationObject = {\n  toRight: [\n    { opacity: 1, transform: \"translateX(0%)\" },\n    { opacity: 0, transform: \"translateX(100%)\" },\n  ],\n  fromRight: [\n    { opacity: 0, transform: \"translateX(100%)\" },\n    { opacity: 1, transform: \"translateX(0%)\" },\n  ],\n};\n\nexport const appColor = '#aa8a75';\n\nexport const silhouetteTypeOptions = [\n  {\n    id: 'top',\n    text: 'Top',\n    value: 'Top'\n  },\n  {\n    id: 'bottom',\n    text: 'Bottom',\n    value: 'Bottom'\n  },\n  {\n    id: 'sleeve',\n    text: 'Sleeve',\n    value: 'Sleeve'\n  }\n]\nexport const silhouetteOrientationOptions = [\n  {\n    id: 'front',\n    text: 'Front',\n    value: 'Front'\n  },\n  {\n    id: 'back',\n    text: 'Back',\n    value: 'Back'\n  },\n]\n\nexport const getSilhouetteFullPath = (type: string) => {\n  const loweredType = type.toLowerCase()\n  switch (loweredType) {\n    case 'top':\n      return BASE_UPLOADS_SILHOUETTES_TOPS_URL\n    case 'bottom':\n      return BASE_UPLOADS_SILHOUETTES_BOTTOMS_URL\n    case 'sleeve':\n      return BASE_UPLOADS_SILHOUETTES_SLEEVES_URL\n    default:\n      break;\n  }\n}\n\nexport const getDropdownOptionsFromItemsVariants = (options: ArrayType) => {\n  return options?.length ? options.reduce((acc: any, option: ObjectType) => {\n    acc.push({\n      id: option?._id,\n      text: option?.name,\n      value: option?.name,\n    })\n    return acc\n  }, []) : []\n}\n\nexport const getActiveItemTypeById = (options:  ArrayType, id: string) => {\n  const elem = options.find(option => option.id === id)\n  return elem?.value || ''\n}","export type CallbackSkeletonType = (event?: any) => void\nexport const CallbackSkeletonValue = () => {}","interface Iloader {\n    classN?: string\n}\n\nconst LoaderCircleUI = ({ classN }: Iloader) => {\n    return (\n        <div className={`LoaderCircleUI ${classN}`} ></div>\n    )\n}\n\nexport default LoaderCircleUI","import { HTMLProps } from \"react\";\nimport \"./style.scss\";\nimport { CallbackSkeletonValue } from \"shared/objectModels/GenericModel\";\nimport LoaderCircleUI from \"../LoaderCircleUI/LoaderCircleUI\";\n\ninterface Props extends HTMLProps<HTMLButtonElement> {\n  type?: \"button\" | \"submit\" | \"reset\";\n  version?: string;\n  classN?: string;\n  disabled?: boolean;\n  isLoading?: boolean;\n}\n\nconst versions: Record<string, string> = {\n  default: \"default-btn\",\n  red: 'red-btn',\n  orange: 'orange-btn',\n  blue: 'blue-btn',\n  green: 'green-btn',\n  gray: 'gray-btn',\n}\n\nexport const ButtonUI: React.FC<Props> = ({\n  children,\n  type = \"button\",\n  version = \"default\",\n  classN = '',\n  disabled = false,\n  isLoading = false,\n  onClick = CallbackSkeletonValue,\n  ...buttonProps\n}) => {\n  return (\n    <button\n      {...buttonProps}\n      className={`ButtonUI ${classN} ${versions[version]} ${disabled ? '_disabled' : ''}`}\n      type={type}\n      onClick={(event) => !disabled && !isLoading && onClick(event)}\n    >{isLoading ? (<LoaderCircleUI />) : children}</button>\n  )\n}","import { faCaretDown, faCaretUp } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useEffect, useRef, useState } from 'react';\nimport './style.scss'\nimport useClickOutSide from 'utils/hooks/useClickOutside';\nimport HeadingUI from '../HeadingUI/HeadingUI';\nimport ReactPortal from 'layout/ReactPortal/ReactPortal';\n\ninterface DropdownPropsi {\n    text?: string | number;\n    onChange: (data?: any) => void\n    options: any;\n    classN?: string;\n    label?: string;\n    error?: string,\n    defaultValue?: string,\n    disabled?: boolean,\n}\n\nconst DropdownUI = ({\n    text,\n    options,\n    onChange,\n    classN = '',\n    label = '',\n    error,\n    defaultValue,\n    disabled = false\n}: DropdownPropsi) => {\n\n    const [isActive, setIsActive] = useState(false);\n    const [selected, setSelected] = useState(text);\n    const ref = useRef<HTMLDivElement | null>(null)\n    const contentRef = useRef<HTMLDivElement | null>(null)\n\n    function handleClick(e: React.MouseEvent, index: number) {\n        const val = (e.target as HTMLElement).textContent;\n\n        if (val) {\n            setSelected(val);\n        }\n\n        onChange(options[index]);\n        setIsActive(!isActive);\n    }\n\n    useClickOutSide(ref, () => setIsActive(false), isActive)\n\n    const getContentPositioned = () => {\n        if (ref?.current && contentRef?.current) {\n            const posY = ref.current.getBoundingClientRect().top + 60\n            const posX = ref.current.getBoundingClientRect().left\n            const posW = ref.current.offsetWidth - 3\n            contentRef.current.style.top = `${posY}px`\n            contentRef.current.style.left = `${posX}px`\n            contentRef.current.style.width = `${posW}px`\n        }\n    }\n\n    const toggleDropdown = () => {\n        setIsActive(!isActive);\n        getContentPositioned()\n    }\n    \n    useEffect(() => {\n        getContentPositioned()\n    },[contentRef, ref])\n\n    return (\n        <>\n            {label && <HeadingUI size='18px' color='#aa8a75' text={label}/>}\n            {error && <span className=\"error-message\">{error}</span>}\n            <div className={`DropdownUI ${classN} ${disabled ? '_disabled' : ''}`} ref={ref}>\n                <div\n                    onClick={(e) => disabled ? e.preventDefault() : toggleDropdown()}\n                    className={`DropdownUI__button${isActive ? ' _active' : ''}${error ? ' _error' : ''}`}\n                >\n                    {defaultValue || selected}\n                    {isActive ? (\n                        <FontAwesomeIcon className='DropdownUI__icon' icon={faCaretUp} />\n                    ) : (\n                        <FontAwesomeIcon className='DropdownUI__icon' icon={faCaretDown} />\n                    )}\n                </div>\n            </div>\n            {!disabled && <ReactPortal>\n                <div\n                    className={`DropdownUI__content${isActive ? ' _active' : ''}`}\n                    ref={contentRef}\n                >\n                    {Boolean(options?.length) &&\n                        options?.map(({ id, text, value }: any, index: number) => (\n                            <div\n                                key={id}\n                                onClick={(event) => handleClick(event, index)}\n                                className='DropdownUI__option'\n                            >\n                                {text || value}\n                            </div>\n                        ))}\n                </div>\n            </ReactPortal>}\n        </>\n    );\n};\n\nexport default DropdownUI;","import React, { useState, ChangeEvent, useRef, useEffect } from 'react';\nimport './style.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faX } from '@fortawesome/free-solid-svg-icons';\nimport HeadingUI from '../HeadingUI/HeadingUI';\nimport { CallbackSkeletonType, CallbackSkeletonValue } from 'shared/objectModels/GenericModel';\nimport { ArrayType, ObjectType } from 'shared/helpers/helpers';\n\ninterface FileWithPreview extends File {\n    preview: string;\n}\n\ninterface Props {\n    multiple?: boolean,\n    width?: string,\n    height?: string,\n    onChange?: CallbackSkeletonType,\n    defaultFiles?: ArrayType,\n    name: string,\n    validationCallback?: CallbackSkeletonType | null,\n    error?: string,\n    classN?: string\n}\n\nconst DropzoneUI = ({\n    multiple = false,\n    width = '400px',\n    height = '400px',\n    onChange = CallbackSkeletonValue,\n    defaultFiles,\n    name,\n    validationCallback = null,\n    error = '',\n    classN\n}: Props) => {\n    const [files, setFiles] = useState<FileWithPreview[] | ArrayType>([]);\n    const fileInputRef = useRef<HTMLInputElement | null>(null);\n    const bodyRef = useRef<HTMLDivElement | null>(null);\n    \n    useEffect(() => {\n        if (defaultFiles?.length) setFiles(defaultFiles)\n    },[defaultFiles])\n\n    const handleDrop = (e: React.DragEvent<HTMLDivElement>) => {\n        e.preventDefault();\n        const newFiles = Array.from(e.dataTransfer.files) as FileWithPreview[];\n\n        newFiles.forEach((file) => {\n            file.preview = URL.createObjectURL(file);\n        });\n        \n        if (multiple) {\n            setFiles([...files, ...newFiles]);\n            return onChange([...files, ...newFiles])\n        }\n        if (newFiles?.length) {\n            setFiles(newFiles)\n            onChange(newFiles)\n        }\n        bodyRef?.current?.classList.remove('_drag')\n\n    };\n\n    const handleDelete = (index: number) => {\n        const updatedFiles = [...files];\n        updatedFiles.splice(index, 1);\n        setFiles(updatedFiles);\n    };\n\n    const handleDragOver = (e: React.DragEvent<HTMLDivElement>) => {\n        e.preventDefault();\n        bodyRef?.current?.classList.add('_drag')\n    };\n\n    const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n        e.preventDefault();\n        bodyRef?.current?.classList.remove('_drag')\n    };\n\n    const handleDropzoneClick = () => {\n        if (fileInputRef.current) {\n            fileInputRef.current.click();\n        }\n    };\n\n    const handleFileInputChange = async (e: ChangeEvent<HTMLInputElement>) => {\n        const newFiles = Array.from(e.target.files as FileList) as FileWithPreview[];\n        const isValidated = validationCallback ? await validationCallback(newFiles) : true\n        if (isValidated) {\n            newFiles.forEach((file) => {\n                file.preview = URL.createObjectURL(file);\n            });\n            if (multiple) {\n                setFiles([...files, ...newFiles]);\n                return onChange([...files, ...newFiles])\n            }\n            if (newFiles?.length) {\n                setFiles(newFiles)\n                onChange(newFiles)\n            }\n        }\n    };\n\n    const borderColor = error ? 'red' : 'silver'\n    return (\n        <>\n            {error && <span className=\"error-message\">{error}</span>}\n            <div className={`DropzoneUI ${classN}`}\n                style={{\n                    width,\n                    height,\n                    backgroundImage: `linear-gradient(90deg, ${borderColor} 50%, transparent 50%), linear-gradient(90deg, ${borderColor} 50%, transparent 50%), linear-gradient(0deg, ${borderColor} 50%, transparent 50%), linear-gradient(0deg, ${borderColor} 50%, transparent 50%)`\n                }}\n                onDrop={handleDrop}\n                onDragOver={handleDragOver}\n                onDragLeave={handleDragLeave}\n                ref={bodyRef}\n            >\n                <div\n                    className='DropzoneUI__body'\n                    onClick={handleDropzoneClick}\n                >\n                    <HeadingUI \n                        text={`Drag & drop some file${multiple ? 's' : ''} here, or click to select file${multiple ? 's' : ''}`}\n                        size='14px'\n                        align='center'\n                    />\n                </div>\n                <input\n                    type=\"file\"\n                    ref={fileInputRef}\n                    style={{ display: 'none' }}\n                    onChange={handleFileInputChange}\n                    multiple={multiple}\n                    name={name}\n                />\n\n                <div className='DropzoneUI__files' style={{ maxHeight: +height.replace('px', '') - 30 + 'px' }}>\n                    {files.map((file, index) => (\n                        <div key={index} className='DropzoneUI__file'>\n                            <img src={file.preview} alt={`Preview ${index}`} className='DropzoneUI__preview' />\n                            <button\n                                className='DropzoneUI__remove'\n                                onClick={() => handleDelete(index)}\n                                type='button'>\n                                <FontAwesomeIcon icon={faX} />\n                            </button>\n                        </div>\n                    ))}\n                </div>\n\n            </div>\n        </>\n    );\n};\n\nexport default DropzoneUI;\n","import './style.scss'\n\ninterface Props {\n    text: string,\n    classN?: string,\n    color?: string,\n    size?: string,\n    align?: 'center' | 'left' | 'right'\n}\n\nconst HeadingUI = ({\n    text,\n    classN = '',\n    color = '',\n    size = '',\n    align = 'left'\n}: Props) => {\n    return (\n        <h1 className={`headingUI ${classN}`}\n            style={{\n                color: color || '#000',\n                fontSize: size || '30px',\n                textAlign: align\n            }}\n        >{text}</h1>\n    );\n};\n\nexport default HeadingUI;","import { CallbackSkeletonType } from \"shared/objectModels/GenericModel\";\nimport './style.scss'\nimport { useEffect } from \"react\";\n\ninterface Props {\n    value: string,\n    placeholder?: string,\n    type?: string,\n    callback: CallbackSkeletonType,\n    label?: string,\n    name: string,\n    error?: string,\n}\n\nconst InputUI = ({\n    value,\n    placeholder = '',\n    type = 'text',\n    callback,\n    label = '',\n    name,\n    error,\n}: Props) => {\n    // const refInput = useRef<HTMLInputElement | null>(null)\n    // const refSpan = useRef<HTMLInputElement | null>(null)\n\n    // useEffect(() => {\n    //     if (error && refInput?.current && refSpan?.current) {\n    //         refInput.current.classList.add('_errorShake')\n    //         refSpan.current.classList.add('_errorShake')\n    //         setTimeout(() => {\n    //             refInput?.current?.classList.remove('_errorShake')\n    //             refSpan?.current?.classList.remove('_errorShake')\n    //         }, 500);\n    //     }\n\n    //     return () => {\n    //         refInput?.current?.classList.remove('_errorShake')\n    //         refSpan?.current?.classList.remove('_errorShake')\n    //     }\n    // },[error])\n\n    return (\n        <div className=\"InputUI\">\n            {label && <label \n                className=\"InputUI__label\"\n                htmlFor={`InputUI-${name}`}>\n                {label}\n            </label>}\n            {error && <span className=\"error-message\">{error}</span>}\n            <input \n                className={`InputUI__input${error ? ' _error' : ''}`}\n                id={`InputUI-${name}`}\n                name={name}\n                type={type}\n                value={value}\n                onChange={callback}\n                {...(placeholder && {placeholder})}\n            />\n        </div>\n    );\n};\n\nexport default InputUI;","import ReactPortal from 'layout/ReactPortal/ReactPortal';\nimport './style.scss'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faXmark } from '@fortawesome/free-solid-svg-icons';\nimport { CallbackSkeletonType } from 'shared/objectModels/GenericModel';\n\ninterface PropsI {\n    callback: CallbackSkeletonType,\n    children: any\n}\n\nconst PopupUI = ({\n    callback,\n    children\n}: PropsI) => {\n\n    return (\n        <ReactPortal>\n            <div className='PopupUI'>\n                <div className=\"PopupUI__container\">\n                    <div className='PopupUI__body'>\n                        {children}\n                    </div>\n                    <div className='PopupUI__icon'\n                        onClick={() => callback()}>\n                        <FontAwesomeIcon icon={faXmark} fontSize='18px' color=\"#fff\" />\n                    </div>\n                </div>\n                <div className='PopupUI__BG' onClick={() => callback()}></div>\n            </div>\n        </ReactPortal>\n    );\n};\n\nexport default PopupUI;","import { CallbackSkeletonType } from 'shared/objectModels/GenericModel';\nimport { useEffect } from \"react\";\n\nconst useClickOutSide = (ref: any, handler: CallbackSkeletonType, dependency: any = false) => {\n  useEffect(() => {\n    const listener = (event: any) => {\n      if (ref.current && !ref.current.contains(event.target)) {\n        handler();\n      }\n    };\n\n    document.addEventListener(\"click\", listener);\n    return () => {\n      document.removeEventListener(\"click\", listener);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dependency]);\n\n  return {};\n};\n\nexport default useClickOutSide;","import { ObjectType } from \"shared/helpers/helpers\";\n\ninterface Rule {\n    error: any;\n    rule: any;\n}\n\nexport type ErrorInfo = Record<string, Record<string, {message: string}>>\n\n\nexport const formValidator = (formData: ObjectType, options: ObjectType) => {\n    const errorInfo = Object.keys(formData).reduce((acc: any, inputName): any => {\n        const currnetInputOptions:Rule[] = options[inputName] || [];\n        const inputValue = formData[inputName];\n        currnetInputOptions.forEach(option => {\n            const rule = option.rule;\n            const error = option.error; \n\n            if(rule.required !== undefined && !inputValue) {\n                acc[inputName] = error;\n            }\n            if(rule.test !== undefined && !rule.test.test(inputValue)) {\n                acc[inputName] = error;\n            }\n        });\n        return acc;\n    }, {});\n\n    return Object.keys(errorInfo).length ? errorInfo : false;\n};\n\nexport const getAllErrorMessages = (options: ObjectType) => {\n    return Object.keys(options).reduce((acc: any, item) => {\n        acc[item] = { message:  `${item} not valid`};\n        return acc;\n    }, {});\n};\n","\nexport const colorFormOptions = {\n    name: [\n        {rule: { required : true }, error: {message: 'Name is required'} },\n    ],\n    hexcode: [\n        {rule: { required : true }, error: {message: 'HexCode is required'} },\n        {rule: { test: /^#(?:[0-9a-fA-F]{3}){1,2}$/ }, error: {message: 'Incorrect format for HexCode'} },\n    ],\n}\n\nexport const printFormOptions = {\n    name: [\n        {rule: { required : true }, error: {message: 'Name is required'} },\n    ],\n    price: [\n        {rule: { required : true }, error: {message: 'Price is required'} },\n    ]\n}\n\nexport const printFilesOptions = {\n    highresurl: [\n        {rule: { test: /^$|\\.jpe?g$|\\.png$|\\.webp$|\\.bmp$/i }, error: {message: 'Incorrect format for Highres Url'} }\n    ],\n    previewurl: [\n        {rule: { test: /^$|\\.jpe?g$|\\.png$|\\.webp$|\\.bmp$/i }, error: {message: 'Incorrect format for Preview Url'} }\n    ]\n}\n\nexport const mannequinFormOptions = {\n    name: [\n        {rule: { required : true }, error: {message: 'Name is required'} },\n    ]\n}\n\nexport const mannequinFilesOptions = {\n    fronturl: [\n        {rule: { test: /^$|\\.jpe?g$|\\.png$|\\.webp$|\\.bmp$/i }, error: {message: 'Incorrect format for Front Url'} }\n    ],\n    backurl: [\n        {rule: { test: /^$|\\.jpe?g$|\\.png$|\\.webp$|\\.bmp$/i }, error: {message: 'Incorrect format for Back Url'} }\n    ]\n}\n\n\nexport const silhouetteFormOptions = {\n    name: [\n        {rule: { required : true }, error: {message: 'Name is required'} },\n    ],\n    price: [\n        {rule: { required : true }, error: {message: 'Price is required'} },\n    ],\n    type: [\n        {rule: { required : true }, error: {message: 'Type is required'} },\n    ],\n    orientation: [\n        {rule: { required : true }, error: {message: 'Orientation is required'} },\n    ]\n}\n\nexport const silhouetteFilesOptions = {\n    silhouetteurl: [\n        {rule: { test: /^$|\\.jpe?g$|\\.png$|\\.webp$|\\.bmp$/i }, error: {message: 'Incorrect format for Silhouette Url'} }\n    ]\n}"],"names":["getAvPrints","dispatch","getPrints","then","res","setPrintData","catch","err","console","log","getAvPrintsVariants","getPrintsVariants","setPrintsVariantsData","NewPrintVariant","isVisible","setIsVisible","useState","newVariant","setNewVariant","useDispatch","_jsxs","className","children","_jsx","type","onClick","toggleNewVariant","InputUI","placeholder","value","name","callback","event","target","async","addPrintVariant","FontAwesomeIcon","icon","faSave","_ref","_errors$name","_errors$price","_fileErrors$highresur","_fileErrors$previewur","closePopup","printVariants","getDropdownOptionsFromItemsVariants","useSelector","printsVariants","data","setData","price","tags","highresurl","previewurl","colorVariant","errors","setErrors","fileErrors","setFileErrors","handleInputChange","addImage","files","validateFiles","field","map","file","obj","formValidator","printFilesOptions","Object","keys","length","handleDropdownChange","dataT","id","printVariant","onSubmit","e","preventDefault","printFormOptions","formData","FormData","forEach","key","append","addPrint","HeadingUI","text","align","color","appColor","label","error","message","DropdownUI","options","onChange","size","DropzoneUI","width","height","validationCallback","ButtonUI","version","_print$highresurl","_print$previewurl","print","setPrint","printInfo","editImage","URL","createObjectURL","concat","defaultValue","getActiveItemTypeById","defaultFiles","preview","includes","BASE_UPLOADS_PRINTS_HIGHS_URL","BASE_UPLOADS_PRINTS_PREVIEWS_URL","prints","editablePrint","setEditablePrint","setPrintInfo","classN","src","alt","editPrint","_id","PopupUI","EditPrint","_editablePrint$highre","_editablePrint$previe","formErrors","getNewFile","image","response","fetch","blob","File","newPrint","JSON","parse","stringify","updatePrint","CustomizePrints","availablePrints","resetPrintState","useEffect","MainHead","MainBody","PrintsList","NewPrint","createWrapperAndAppendToBody","wrapperId","wrapperElement","document","createElement","setAttribute","body","appendChild","setWrapperElement","useLayoutEffect","element","getElementById","systemCreated","parentNode","removeChild","createPortal","silhouetteTypeOptions","silhouetteOrientationOptions","getSilhouetteFullPath","toLowerCase","BASE_UPLOADS_SILHOUETTES_TOPS_URL","BASE_UPLOADS_SILHOUETTES_BOTTOMS_URL","BASE_UPLOADS_SILHOUETTES_SLEEVES_URL","reduce","acc","option","push","elem","find","CallbackSkeletonValue","versions","default","red","orange","blue","green","gray","disabled","isLoading","buttonProps","LoaderCircleUI","isActive","setIsActive","selected","setSelected","ref","useRef","contentRef","useClickOutSide","getContentPositioned","current","posY","getBoundingClientRect","top","posX","left","posW","offsetWidth","style","_Fragment","faCaretUp","faCaretDown","ReactPortal","Boolean","_ref2","index","val","textContent","handleClick","multiple","setFiles","fileInputRef","bodyRef","borderColor","backgroundImage","onDrop","_bodyRef$current","newFiles","Array","from","dataTransfer","classList","remove","onDragOver","_bodyRef$current2","add","onDragLeave","_bodyRef$current3","handleDropzoneClick","click","display","maxHeight","replace","updatedFiles","splice","handleDelete","faX","fontSize","textAlign","htmlFor","faXmark","handler","dependency","arguments","undefined","listener","contains","addEventListener","removeEventListener","errorInfo","inputName","currnetInputOptions","inputValue","rule","required","test","colorFormOptions","hexcode","mannequinFormOptions","mannequinFilesOptions","fronturl","backurl","silhouetteFormOptions","orientation","silhouetteFilesOptions","silhouetteurl"],"sourceRoot":""}