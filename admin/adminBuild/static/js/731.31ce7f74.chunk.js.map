{"version":3,"file":"static/js/731.31ce7f74.chunk.js","mappings":"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","sources":["components/customize/silhouettes/EditSilhouette.tsx","components/customize/silhouettes/NewSilhouette.tsx","components/customize/silhouettes/sleeves/SleeveSilhouettesList.tsx","services/silhouetteService.ts","shared/helpers/helpers.ts","shared/ui/DropdownUI/DropdownUI.tsx","shared/ui/DropzoneUI/DropzoneUI.tsx","utils/hooks/useClickOutside.ts"],"sourcesContent":["import { ChangeEvent, useState } from \"react\";\nimport { CallbackSkeletonType } from \"shared/objectModels/GenericModel\";\nimport { ButtonUI } from \"shared/ui/ButtonUI/ButtonUI\";\nimport HeadingUI from \"shared/ui/HeadingUI/HeadingUI\";\nimport InputUI from \"shared/ui/InputUI/InputUI\";\nimport './style.scss'\nimport { ArrayType, ObjectType, appColor, getSilhouetteFullPath, silhouetteOrientationOptions, silhouetteTypeOptions } from \"shared/helpers/helpers\";\nimport DropzoneUI from \"shared/ui/DropzoneUI/DropzoneUI\";\nimport { BASE_UPLOADS_PRINTS_HIGHS_URL, BASE_UPLOADS_PRINTS_PREVIEWS_URL, BASE_UPLOADS_SILHOUETTES_TOPS_URL } from \"shared/constants/genericApiRoutes\";\nimport { printFilesOptions, silhouetteFilesOptions } from \"utils/validators/validatorOptions\";\nimport { formValidator } from \"utils/validators/validator\";\nimport DropdownUI from \"shared/ui/DropdownUI/DropdownUI\";\n\ninterface Props {\n    callback: CallbackSkeletonType,\n    closePopup: CallbackSkeletonType,\n    silhouette: ObjectType,\n    setSilhouette: CallbackSkeletonType,\n    errors: ObjectType,\n    silhouetteInfo: ObjectType\n}\n\nconst EditSilhouette = ({\n    callback,\n    closePopup,\n    silhouette,\n    setSilhouette,\n    errors,\n    silhouetteInfo\n}: Props) => {\n\n    const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n        const { target: { name, value } } = event\n        setSilhouette({ ...silhouette, [name]: value })\n    }\n    const [fileErrors, setFileErrors] = useState<ObjectType>({})\n\n    const editImage = (files: ArrayType) => {\n        setSilhouette({\n            ...silhouette,\n            silhouetteurl: URL.createObjectURL(files[0] as any)\n        })\n    }\n\n    const validateFiles = (files: ArrayType, field: string) => {\n        let err = {}\n        files?.map(file => {\n            const obj = {\n                [field]: file?.name\n            }\n            err = formValidator(obj, silhouetteFilesOptions);\n        })\n        if (Object.keys(err).length) {\n            setFileErrors(err)\n            return false\n        }\n        if (Object.keys(fileErrors).length) { setFileErrors({}) };\n        return true\n    }\n\n    const handleDropdownChange = (data: ObjectType, name: string) => {\n        const value = data.value\n        setSilhouette({\n            ...silhouette,\n            [name]: value\n        })\n    }\n\n    return (\n        <div className=\"new-print\">\n            <HeadingUI text={`Edit silhouette ${silhouetteInfo.name}`} align=\"center\" color={appColor} />\n            <div className=\"new-silhouette-inputs\">\n                <InputUI\n                    placeholder=\"Name\"\n                    value={silhouette?.name}\n                    label=\"Name*\"\n                    name=\"name\"\n                    error={errors?.name?.message || ''}\n                    callback={handleInputChange}\n                />\n                <InputUI\n                    type='number'\n                    placeholder=\"Price\"\n                    value={silhouette?.price > 0 ? silhouette?.price : ''}\n                    label=\"Price*\"\n                    name=\"price\"\n                    error={errors?.price?.message || ''}\n                    callback={handleInputChange}\n                />\n                <InputUI\n                    placeholder=\"Tags\"\n                    value={silhouette?.tags}\n                    label=\"Tags\"\n                    name=\"tags\"\n                    callback={handleInputChange}\n                />\n                <DropdownUI\n                    options={silhouetteTypeOptions}\n                    onChange={(data) => handleDropdownChange(data, 'type')}\n                    label=\"Silhouette type*\"\n                    error={errors?.type?.message || ''}\n                    defaultValue={silhouette?.type}\n                />\n                <DropdownUI\n                    options={silhouetteOrientationOptions}\n                    onChange={(data) => handleDropdownChange(data, 'orientation')}\n                    label=\"Silhouette orientation*\"\n                    error={errors?.orientation?.message || ''}\n                    defaultValue={silhouette?.orientation}\n                />\n                <div className=\"new-silhouette-zone\">\n                    <HeadingUI text='Silhouette image' size='18px' color={appColor} />\n                    <DropzoneUI\n                        width=\"480px\"\n                        height=\"160px\"\n                        name=\"silhouetteurl\"\n                        validationCallback={(files) => validateFiles(files, 'silhouetteurl')}\n                        error={fileErrors?.silhouetteurl?.message || ''}\n                        onChange={(files: ArrayType) => editImage(files)}\n                        defaultFiles={[{\n                            ...silhouette,\n                            preview: silhouette.silhouetteurl?.includes('blob') ? silhouette.silhouetteurl : `${getSilhouetteFullPath(silhouetteInfo.type)}${silhouette.silhouetteurl}`\n                        }]}\n                    />\n                </div>\n            </div>\n            <div className=\"new-silhouette-actions\">\n                <ButtonUI onClick={() => closePopup()} version=\"gray\">Discard</ButtonUI>\n                <ButtonUI onClick={() => callback()}>Save</ButtonUI>\n            </div>\n        </div>\n    );\n};\n\nexport default EditSilhouette;","import { ChangeEvent, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setSilhouetteState, silhouetteDetails } from \"redux/reducers/silhouetteReducer\";\nimport { ArrayType, ObjectType, appColor, silhouetteOrientationOptions, silhouetteTypeOptions } from \"shared/helpers/helpers\";\nimport { CallbackSkeletonType } from \"shared/objectModels/GenericModel\";\nimport { ButtonUI } from \"shared/ui/ButtonUI/ButtonUI\";\nimport DropdownUI from \"shared/ui/DropdownUI/DropdownUI\";\nimport HeadingUI from \"shared/ui/HeadingUI/HeadingUI\";\nimport InputUI from \"shared/ui/InputUI/InputUI\";\nimport { formValidator } from \"utils/validators/validator\";\nimport { silhouetteFilesOptions, silhouetteFormOptions } from \"utils/validators/validatorOptions\";\nimport DropzoneUI from \"shared/ui/DropzoneUI/DropzoneUI\";\nimport { addSilhouette } from \"shared/api/dataApi\";\nimport { getAvSilhouettes } from \"services/silhouetteService\";\n\ninterface Props {\n    closePopup: CallbackSkeletonType,\n    selectedType?: string,\n}\n\nconst NewSilhouette = ({\n    closePopup,\n    selectedType = ''\n}: Props) => {\n\n    const dispatch = useDispatch()\n    const sDetails = useSelector(silhouetteDetails)\n    const [errors, setErrors] = useState<ObjectType>({})\n    const [fileErrors, setFileErrors] = useState<ObjectType>({})\n    const [file, setFile] = useState<any>(null)\n\n    const addNewSilhouette: CallbackSkeletonType = async (e: HTMLFormElement) => {\n        e.preventDefault()\n        const errors = formValidator(sDetails, silhouetteFormOptions);\n        if (errors) { return setErrors(errors) };\n        if (Object.keys(errors).length) { setErrors({}) };\n        const formData = new FormData();\n        Object.keys(sDetails).forEach((key: string) => {\n            formData.append(key, sDetails[key]); // Add other data properties as needed\n        });\n        formData.append('silhouetteurl', file[0]);\n        await addSilhouette(formData)\n        await getAvSilhouettes(dispatch)\n        closePopup()\n    }\n\n    const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n        const { target: { name, value } } = event\n        dispatch(setSilhouetteState({ name, value }))\n    }\n\n    const handleDropdownChange = (data: ObjectType, name: string) => {\n        const value = data.value\n        dispatch(setSilhouetteState({ name, value }))\n    }\n\n    const handleImageChange = (data: ObjectType) => {\n        setFile(data)\n    }\n\n    const validateFiles = (files: ArrayType, field: string) => {\n        let err = {}\n        files?.map(file => {\n            const obj = {\n                [field]: file?.name\n            }\n            err = formValidator(obj, silhouetteFilesOptions);\n        })\n        if (Object.keys(err).length) {\n            setFileErrors(err)\n            return false\n        }\n        if (Object.keys(fileErrors).length) { setFileErrors({}) };\n        return true\n    }\n\n    useEffect(() => {\n        if (selectedType) {\n            dispatch(setSilhouetteState({name: 'type', value: selectedType }))\n        }\n    },[selectedType])\n\n    return (\n        <form onSubmit={addNewSilhouette} className=\"new-silhouette\">\n            <HeadingUI text=\"Add new silhouette\" align=\"center\" color={appColor} />\n            <div className=\"new-silhouette-inputs\">\n                <InputUI\n                    placeholder=\"Name\"\n                    value={sDetails?.name}\n                    label=\"Name*\"\n                    name=\"name\"\n                    error={errors?.name?.message || ''}\n                    callback={handleInputChange}\n                />\n                <InputUI\n                    type='number'\n                    placeholder=\"Price\"\n                    value={sDetails?.price > 0 ? sDetails?.price : ''}\n                    label=\"Price*\"\n                    name=\"price\"\n                    error={errors?.price?.message || ''}\n                    callback={handleInputChange}\n                />\n                <InputUI\n                    placeholder=\"Tags\"\n                    value={sDetails?.tags}\n                    label=\"Tags\"\n                    name=\"tags\"\n                    callback={handleInputChange}\n                />\n                <DropdownUI \n                    options={silhouetteTypeOptions} \n                    onChange={(data) => handleDropdownChange(data, 'type')}\n                    label=\"Silhouette type*\"\n                    error={errors?.type?.message || ''}\n                    {...(selectedType && {defaultValue: selectedType})}\n                    disabled={!!selectedType}\n                />\n                <DropdownUI \n                    options={silhouetteOrientationOptions} \n                    onChange={(data) => handleDropdownChange(data, 'orientation')}\n                    label=\"Silhouette orientation*\"\n                    error={errors?.orientation?.message || ''}\n                />\n                <div className=\"new-silhouette-zone\">\n                    <HeadingUI text='Silhouette image' size='18px' color={appColor} />\n                    <DropzoneUI\n                        width=\"480px\"\n                        height=\"160px\"\n                        name=\"silhouetteurl\"\n                        validationCallback={(files) => validateFiles(files, 'silhouetteurl')}\n                        error={fileErrors?.silhouetteurl?.message || ''}\n                        onChange={(files: ArrayType) => handleImageChange(files)}\n                    />\n                </div>\n            </div>\n            <div className=\"new-silhouette-actions\">\n                <ButtonUI onClick={() => closePopup()} version=\"gray\">Close</ButtonUI>\n                <ButtonUI type=\"submit\">Add</ButtonUI>\n            </div>\n        </form>\n    );\n};\n\nexport default NewSilhouette;","import { useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { availableSilhouettes } from 'redux/reducers/silhouetteReducer';\nimport { BASE_UPLOADS_SILHOUETTES_SLEEVES_URL } from 'shared/constants/genericApiRoutes';\nimport { ObjectType, appColor } from 'shared/helpers/helpers';\nimport { ButtonUI } from 'shared/ui/ButtonUI/ButtonUI';\nimport HeadingUI from 'shared/ui/HeadingUI/HeadingUI';\nimport PopupUI from 'shared/ui/PopupUI/PopupUI';\nimport EditSilhouette from '../EditSilhouette';\nimport { formValidator } from 'utils/validators/validator';\nimport { silhouetteFormOptions } from 'utils/validators/validatorOptions';\nimport { updateSilhouette } from 'shared/api/dataApi';\nimport { getAvSilhouettes } from 'services/silhouetteService';\n\nconst SleeveSilhouettesList = () => {\n\n    const silhouettes = useSelector(availableSilhouettes)\n\n    const [editableSilhouette, setEditableSilhouette] = useState<ObjectType>({})\n    const [silhouetteInfo, setSilhouetteInfo] = useState<ObjectType>({})\n    const [isVisible, setIsVisible] = useState<boolean>(false)\n    const [errors, setErrors] = useState<ObjectType>({})\n    const dispatch = useDispatch()\n\n    const sleeveSilhouettes = useMemo(() => {\n        return silhouettes.filter((silhouette: ObjectType) => silhouette?.type === 'Sleeve')\n    }, [silhouettes])\n\n    const editSilhouette = (silhouette: ObjectType) => {\n        if (silhouette) {\n            setEditableSilhouette(silhouette)\n            setSilhouetteInfo(silhouette)\n            setIsVisible(true)\n        }\n    }\n\n    const closePopup = () => {\n        setIsVisible(false)\n        setEditableSilhouette({})\n        setSilhouetteInfo({})\n        setErrors({})\n    }\n\n    const saveSilhouette = async () => {\n\n        const formErrors = formValidator(editableSilhouette, silhouetteFormOptions);\n        if (formErrors) { return setErrors(formErrors) };\n        if (Object.keys(errors).length) { setErrors({}) };\n\n        async function getNewFile(image: string) {\n            const response = await fetch(image);\n            const blob = await response.blob();\n            const file = new File([blob], 'image.jpg', { type: blob.type });\n            return file\n        }\n        const newPrint = JSON.parse(JSON.stringify(editableSilhouette));\n        // console.log('editableSilhouette = > ', editableSilhouette)\n        if (editableSilhouette?.silhouetteurl?.includes('blob')) {\n            const file = await getNewFile(editableSilhouette.silhouetteurl);\n            newPrint.silhouetteurl = file;\n        }\n        const formData = new FormData();\n        Object.keys(newPrint).forEach((key) => {\n            formData.append(key, newPrint[key]);\n        });\n\n        await updateSilhouette(formData)\n        await getAvSilhouettes(dispatch)\n        closePopup()\n    }\n\n    return (\n        <div className='silhouettes-items'>\n            <HeadingUI text=\"Sleeve Silhouettes\" size=\"20px\" />\n            <div className=\"silhouettes-items-body customXScrollbar\">\n                {sleeveSilhouettes?.length ? sleeveSilhouettes.map((silhouette: ObjectType) => {\n                    return <div className=\"silhouettes-list-silhouette\" key={silhouette._id}>\n                        <HeadingUI classN=\"silhouettes-list-text _ellipsis\" text={silhouette.name} color={appColor} size=\"16px\" />\n                        <div className=\"silhouettes-list-image\">\n                            <img src={`${BASE_UPLOADS_SILHOUETTES_SLEEVES_URL}${silhouette.silhouetteurl}`} className=\"silhouettes-list-img\" alt={silhouette.name} />\n                        </div>\n                        <ButtonUI classN=\"silhouettes-list-button\" onClick={() => editSilhouette(silhouette)}>Edit</ButtonUI>\n                    </div>\n                }) : <HeadingUI text='Nothing found' color={appColor} size='16px' />}\n            </div>\n            {isVisible && <PopupUI callback={closePopup}>\n                <EditSilhouette\n                    callback={saveSilhouette}\n                    closePopup={closePopup}\n                    silhouette={editableSilhouette}\n                    errors={errors}\n                    setSilhouette={setEditableSilhouette}\n                    silhouetteInfo={silhouetteInfo}\n                />\n            </PopupUI>}\n        </div>\n    );\n};\n\nexport default SleeveSilhouettesList;","import { setSilhouetteData } from \"redux/reducers/silhouetteReducer\"\nimport { getSilhouettes } from \"shared/api/dataApi\"\n\n\nexport const getAvSilhouettes = (dispatch: any) => {\n    getSilhouettes().then(res => {\n        dispatch(setSilhouetteData(res))\n    }).catch(err => console.log(err))\n}","import { BASE_UPLOADS_SILHOUETTES_BOTTOMS_URL, BASE_UPLOADS_SILHOUETTES_SLEEVES_URL, BASE_UPLOADS_SILHOUETTES_TOPS_URL } from \"shared/constants/genericApiRoutes\";\nimport { AnimationObject } from \"shared/objectModels/AnimationModel\";\n\nexport type ArrayType = Array<Record<string, any>>\nexport type ObjectType = Record<string, any>\n\nexport const PortalAnimations: AnimationObject = {\n  fadeIn: [\n    { opacity: 0, visibility: \"hidden\" },\n    { opacity: 1, visibility: \"visible\" },\n  ],\n  fadeOut: [\n    { opacity: 1, visibility: \"visible\" },\n    { opacity: 0, visibility: \"hidden\" },\n  ],\n};\n\nexport const CardBarPanelAnimations: AnimationObject = {\n  toRight: [\n    { opacity: 1, transform: \"translateX(0%)\" },\n    { opacity: 0, transform: \"translateX(100%)\" },\n  ],\n  fromRight: [\n    { opacity: 0, transform: \"translateX(100%)\" },\n    { opacity: 1, transform: \"translateX(0%)\" },\n  ],\n};\n\nexport const appColor = '#aa8a75';\n\nexport const silhouetteTypeOptions = [\n  {\n    id: 'top',\n    text: 'Top',\n    value: 'Top'\n  },\n  {\n    id: 'bottom',\n    text: 'Bottom',\n    value: 'Bottom'\n  },\n  {\n    id: 'sleeve',\n    text: 'Sleeve',\n    value: 'Sleeve'\n  }\n]\nexport const silhouetteOrientationOptions = [\n  {\n    id: 'front',\n    text: 'Front',\n    value: 'Front'\n  },\n  {\n    id: 'back',\n    text: 'Back',\n    value: 'Back'\n  },\n]\n\nexport const getSilhouetteFullPath = (type: string) => {\n  const loweredType = type.toLowerCase()\n  switch (loweredType) {\n    case 'top':\n      return BASE_UPLOADS_SILHOUETTES_TOPS_URL\n    case 'bottom':\n      return BASE_UPLOADS_SILHOUETTES_BOTTOMS_URL\n    case 'sleeve':\n      return BASE_UPLOADS_SILHOUETTES_SLEEVES_URL\n    default:\n      break;\n  }\n}\n\nexport const getDropdownOptionsFromItemsVariants = (options: ArrayType) => {\n  return options?.length ? options.reduce((acc: any, option: ObjectType) => {\n    acc.push({\n      id: option?._id,\n      text: option?.name,\n      value: option?.name,\n    })\n    return acc\n  }, []) : []\n}\n\nexport const getActiveItemTypeById = (options:  ArrayType, id: string) => {\n  const elem = options.find(option => option.id === id)\n  return elem?.value || ''\n}","import { faCaretDown, faCaretUp } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useEffect, useRef, useState } from 'react';\nimport './style.scss'\nimport useClickOutSide from 'utils/hooks/useClickOutside';\nimport HeadingUI from '../HeadingUI/HeadingUI';\nimport ReactPortal from 'layout/ReactPortal/ReactPortal';\n\ninterface DropdownPropsi {\n    text?: string | number;\n    onChange: (data?: any) => void\n    options: any;\n    classN?: string;\n    label?: string;\n    error?: string,\n    defaultValue?: string,\n    disabled?: boolean,\n}\n\nconst DropdownUI = ({\n    text,\n    options,\n    onChange,\n    classN = '',\n    label = '',\n    error,\n    defaultValue,\n    disabled = false\n}: DropdownPropsi) => {\n\n    const [isActive, setIsActive] = useState(false);\n    const [selected, setSelected] = useState(text);\n    const ref = useRef<HTMLDivElement | null>(null)\n    const contentRef = useRef<HTMLDivElement | null>(null)\n\n    function handleClick(e: React.MouseEvent, index: number) {\n        const val = (e.target as HTMLElement).textContent;\n\n        if (val) {\n            setSelected(val);\n        }\n\n        onChange(options[index]);\n        setIsActive(!isActive);\n    }\n\n    useClickOutSide([ref], () => setIsActive(false), isActive)\n\n    const getContentPositioned = () => {\n        if (ref?.current && contentRef?.current) {\n            const posY = ref.current.getBoundingClientRect().top + 60\n            const posX = ref.current.getBoundingClientRect().left\n            const posW = ref.current.offsetWidth - 3\n            contentRef.current.style.top = `${posY}px`\n            contentRef.current.style.left = `${posX}px`\n            contentRef.current.style.width = `${posW}px`\n        }\n    }\n\n    const toggleDropdown = () => {\n        setIsActive(!isActive);\n        getContentPositioned()\n    }\n    \n    useEffect(() => {\n        getContentPositioned()\n    },[contentRef, ref])\n\n    return (\n        <>\n            {label && <HeadingUI size='18px' color='#aa8a75' text={label}/>}\n            {error && <span className=\"error-message\">{error}</span>}\n            <div className={`DropdownUI ${classN} ${disabled ? '_disabled' : ''}`} ref={ref}>\n                <div\n                    onClick={(e) => disabled ? e.preventDefault() : toggleDropdown()}\n                    className={`DropdownUI__button${isActive ? ' _active' : ''}${error ? ' _error' : ''}`}\n                >\n                    {defaultValue || selected}\n                    {isActive ? (\n                        <FontAwesomeIcon className='DropdownUI__icon' icon={faCaretUp} />\n                    ) : (\n                        <FontAwesomeIcon className='DropdownUI__icon' icon={faCaretDown} />\n                    )}\n                </div>\n            </div>\n            {!disabled && <ReactPortal>\n                <div\n                    className={`DropdownUI__content${isActive ? ' _active' : ''}`}\n                    ref={contentRef}\n                >\n                    {Boolean(options?.length) &&\n                        options?.map(({ id, text, value }: any, index: number) => (\n                            <div\n                                key={id}\n                                onClick={(event) => handleClick(event, index)}\n                                className='DropdownUI__option'\n                            >\n                                {text || value}\n                            </div>\n                        ))}\n                </div>\n            </ReactPortal>}\n        </>\n    );\n};\n\nexport default DropdownUI;","import React, { useState, ChangeEvent, useRef, useEffect } from 'react';\nimport './style.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faX } from '@fortawesome/free-solid-svg-icons';\nimport HeadingUI from '../HeadingUI/HeadingUI';\nimport { CallbackSkeletonType, CallbackSkeletonValue } from 'shared/objectModels/GenericModel';\nimport { ArrayType, ObjectType } from 'shared/helpers/helpers';\n\ninterface FileWithPreview extends File {\n    preview: string;\n}\n\ninterface Props {\n    multiple?: boolean,\n    width?: string,\n    height?: string,\n    onChange?: CallbackSkeletonType,\n    defaultFiles?: ArrayType,\n    name: string,\n    validationCallback?: CallbackSkeletonType | null,\n    error?: string,\n    classN?: string\n}\n\nconst DropzoneUI = ({\n    multiple = false,\n    width = '400px',\n    height = '400px',\n    onChange = CallbackSkeletonValue,\n    defaultFiles,\n    name,\n    validationCallback = null,\n    error = '',\n    classN\n}: Props) => {\n    const [files, setFiles] = useState<FileWithPreview[] | ArrayType>([]);\n    const fileInputRef = useRef<HTMLInputElement | null>(null);\n    const bodyRef = useRef<HTMLDivElement | null>(null);\n    \n    useEffect(() => {\n        if (defaultFiles?.length) setFiles(defaultFiles)\n    },[defaultFiles])\n\n    const handleDrop = (e: React.DragEvent<HTMLDivElement>) => {\n        e.preventDefault();\n        const newFiles = Array.from(e.dataTransfer.files) as FileWithPreview[];\n\n        newFiles.forEach((file) => {\n            file.preview = URL.createObjectURL(file);\n        });\n        \n        if (multiple) {\n            setFiles([...files, ...newFiles]);\n            return onChange([...files, ...newFiles])\n        }\n        if (newFiles?.length) {\n            setFiles(newFiles)\n            onChange(newFiles)\n        }\n        bodyRef?.current?.classList.remove('_drag')\n\n    };\n\n    const handleDelete = (index: number) => {\n        const updatedFiles = [...files];\n        updatedFiles.splice(index, 1);\n        setFiles(updatedFiles);\n    };\n\n    const handleDragOver = (e: React.DragEvent<HTMLDivElement>) => {\n        e.preventDefault();\n        bodyRef?.current?.classList.add('_drag')\n    };\n\n    const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n        e.preventDefault();\n        bodyRef?.current?.classList.remove('_drag')\n    };\n\n    const handleDropzoneClick = () => {\n        if (fileInputRef.current) {\n            fileInputRef.current.click();\n        }\n    };\n\n    const handleFileInputChange = async (e: ChangeEvent<HTMLInputElement>) => {\n        const newFiles = Array.from(e.target.files as FileList) as FileWithPreview[];\n        const isValidated = validationCallback ? await validationCallback(newFiles) : true\n        if (isValidated) {\n            newFiles.forEach((file) => {\n                file.preview = URL.createObjectURL(file);\n            });\n            if (multiple) {\n                setFiles([...files, ...newFiles]);\n                return onChange([...files, ...newFiles])\n            }\n            if (newFiles?.length) {\n                setFiles(newFiles)\n                onChange(newFiles)\n            }\n        }\n    };\n\n    const borderColor = error ? 'red' : 'silver'\n    return (\n        <>\n            {error && <span className=\"error-message\">{error}</span>}\n            <div className={`DropzoneUI ${classN}`}\n                style={{\n                    width,\n                    height,\n                    backgroundImage: `linear-gradient(90deg, ${borderColor} 50%, transparent 50%), linear-gradient(90deg, ${borderColor} 50%, transparent 50%), linear-gradient(0deg, ${borderColor} 50%, transparent 50%), linear-gradient(0deg, ${borderColor} 50%, transparent 50%)`\n                }}\n                onDrop={handleDrop}\n                onDragOver={handleDragOver}\n                onDragLeave={handleDragLeave}\n                ref={bodyRef}\n            >\n                <div\n                    className='DropzoneUI__body'\n                    onClick={handleDropzoneClick}\n                >\n                    <HeadingUI \n                        text={`Drag & drop some file${multiple ? 's' : ''} here, or click to select file${multiple ? 's' : ''}`}\n                        size='14px'\n                        align='center'\n                    />\n                </div>\n                <input\n                    type=\"file\"\n                    ref={fileInputRef}\n                    style={{ display: 'none' }}\n                    onChange={handleFileInputChange}\n                    multiple={multiple}\n                    name={name}\n                />\n\n                <div className='DropzoneUI__files' style={{ maxHeight: +height.replace('px', '') - 30 + 'px' }}>\n                    {files.map((file, index) => (\n                        <div key={index} className='DropzoneUI__file'>\n                            <img src={file.preview} alt={`Preview ${index}`} className='DropzoneUI__preview' />\n                            <button\n                                className='DropzoneUI__remove'\n                                onClick={() => handleDelete(index)}\n                                type='button'>\n                                <FontAwesomeIcon icon={faX} />\n                            </button>\n                        </div>\n                    ))}\n                </div>\n\n            </div>\n        </>\n    );\n};\n\nexport default DropzoneUI;\n","import { CallbackSkeletonType } from 'shared/objectModels/GenericModel';\nimport { useEffect } from \"react\";\n\nconst useClickOutSide = (refList: any, handler: CallbackSkeletonType, dependency: any = false) => {\n  useEffect(() => {\n    const listener = (event: any) => {\n      let shouldCallHandler = true;\n      refList?.length && refList?.forEach((ref: any) => {\n        if (ref.current && ref.current.contains(event.target)) {\n          shouldCallHandler = false;\n        }\n      });\n\n      if (shouldCallHandler) {\n        handler();\n      }\n    };\n\n    document.addEventListener(\"click\", listener);\n    return () => {\n      document.removeEventListener(\"click\", listener);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dependency]);\n\n  return {};\n};\n\nexport default useClickOutSide;\n"],"names":["_ref","_errors$name","_errors$price","_errors$type","_errors$orientation","_fileErrors$silhouett","_silhouette$silhouett","callback","closePopup","silhouette","setSilhouette","errors","silhouetteInfo","handleInputChange","event","target","name","value","fileErrors","setFileErrors","useState","handleDropdownChange","data","_jsxs","className","children","_jsx","HeadingUI","text","concat","align","color","appColor","InputUI","placeholder","label","error","message","type","price","tags","DropdownUI","options","silhouetteTypeOptions","onChange","defaultValue","silhouetteOrientationOptions","orientation","size","DropzoneUI","width","height","validationCallback","files","validateFiles","field","err","map","file","obj","formValidator","silhouetteFilesOptions","Object","keys","length","silhouetteurl","URL","createObjectURL","editImage","defaultFiles","preview","includes","getSilhouetteFullPath","ButtonUI","onClick","version","selectedType","dispatch","useDispatch","sDetails","useSelector","silhouetteDetails","setErrors","setFile","setSilhouetteState","useEffect","onSubmit","async","e","preventDefault","silhouetteFormOptions","formData","FormData","forEach","key","append","addSilhouette","getAvSilhouettes","disabled","SleeveSilhouettesList","silhouettes","availableSilhouettes","editableSilhouette","setEditableSilhouette","setSilhouetteInfo","isVisible","setIsVisible","sleeveSilhouettes","useMemo","filter","classN","src","BASE_UPLOADS_SILHOUETTES_SLEEVES_URL","alt","editSilhouette","_id","PopupUI","EditSilhouette","_editableSilhouette$s","formErrors","newPrint","JSON","parse","stringify","image","response","fetch","blob","File","getNewFile","updateSilhouette","getSilhouettes","then","res","setSilhouetteData","catch","console","log","id","toLowerCase","BASE_UPLOADS_SILHOUETTES_TOPS_URL","BASE_UPLOADS_SILHOUETTES_BOTTOMS_URL","getDropdownOptionsFromItemsVariants","reduce","acc","option","push","isActive","setIsActive","selected","setSelected","ref","useRef","contentRef","useClickOutSide","getContentPositioned","current","posY","getBoundingClientRect","top","posX","left","posW","offsetWidth","style","_Fragment","FontAwesomeIcon","icon","faCaretUp","faCaretDown","ReactPortal","Boolean","_ref2","index","val","textContent","handleClick","multiple","CallbackSkeletonValue","setFiles","fileInputRef","bodyRef","borderColor","backgroundImage","onDrop","_bodyRef$current","newFiles","Array","from","dataTransfer","classList","remove","onDragOver","_bodyRef$current2","add","onDragLeave","_bodyRef$current3","handleDropzoneClick","click","display","maxHeight","replace","updatedFiles","splice","handleDelete","faX","refList","handler","dependency","arguments","undefined","listener","shouldCallHandler","contains","document","addEventListener","removeEventListener"],"sourceRoot":""}