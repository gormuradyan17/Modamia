{"version":3,"file":"static/js/714.e0bdddd1.chunk.js","mappings":"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","sources":["services/mannequinService.ts","components/customize/mannequins/EditMannequin.tsx","components/customize/mannequins/MannequinsList.tsx","components/customize/mannequins/NewMannequin.tsx","components/customize/mannequins/CustomizeMannequins.tsx","shared/helpers/helpers.ts","shared/ui/DropzoneUI/DropzoneUI.tsx"],"sourcesContent":["import { setMannequinData } from \"redux/reducers/mannequinReducer\"\nimport { getMannequins } from \"shared/api/dataApi\"\n\n\nexport const getAvMannequins = (dispatch: any) => {\n    getMannequins().then(res => {\n        dispatch(setMannequinData(res))\n    }).catch(err => console.log(err))\n}","import { ChangeEvent, useState } from \"react\";\nimport { CallbackSkeletonType } from \"shared/objectModels/GenericModel\";\nimport { ButtonUI } from \"shared/ui/ButtonUI/ButtonUI\";\nimport HeadingUI from \"shared/ui/HeadingUI/HeadingUI\";\nimport InputUI from \"shared/ui/InputUI/InputUI\";\nimport './style.scss'\nimport { ArrayType, ObjectType, appColor } from \"shared/helpers/helpers\";\nimport DropzoneUI from \"shared/ui/DropzoneUI/DropzoneUI\";\nimport { BASE_UPLOADS_MANNEQUINS_BACKS_URL, BASE_UPLOADS_MANNEQUINS_FRONTS_URL } from \"shared/constants/genericApiRoutes\";\nimport { mannequinFilesOptions } from \"utils/validators/validatorOptions\";\nimport { formValidator } from \"utils/validators/validator\";\n\ninterface Props {\n    callback: CallbackSkeletonType,\n    closePopup: CallbackSkeletonType,\n    mannequin: ObjectType,\n    setMannequin: CallbackSkeletonType,\n    errors: ObjectType,\n    mannequinInfo: ObjectType\n}\n\nconst EditMannequin = ({\n    callback,\n    closePopup,\n    mannequin,\n    setMannequin,\n    errors,\n    mannequinInfo\n}: Props) => {\n\n    const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n        const { target: { name, value } } = event\n        setMannequin({ ...mannequin, [name]: value })\n    }\n    const [fileErrors, setFileErrors] = useState<ObjectType>({})\n\n    const editImage = (files: ArrayType, name: string) => {\n        setMannequin({\n            ...mannequin,\n            [name]: URL.createObjectURL(files[0] as any)\n        })\n    }\n\n    const validateFiles = (files: ArrayType, field: string) => {\n        let err = {}\n        files?.map(file => {\n            const obj = {\n                [field]: file?.name\n            }\n            err = formValidator(obj, mannequinFilesOptions);\n        })\n        if (Object.keys(err).length) {\n            setFileErrors(err)\n            return false\n        }\n        if (Object.keys(fileErrors).length) { setFileErrors({}) };\n        return true\n    }\n\n    return (\n        <div className=\"new-mannequin\">\n            <HeadingUI text={`Edit ${mannequinInfo.name} mannequin`} align=\"center\" color=\"#aa8a75\" />\n            <div className=\"new-mannequin-inputs\">\n                <InputUI\n                    placeholder=\"Name\"\n                    value={mannequin?.name}\n                    label=\"Name*\"\n                    name=\"name\"\n                    error={errors?.name?.message || ''}\n                    callback={handleInputChange}\n                />\n            </div>\n            <div className=\"new-mannequin-zone\">\n                <HeadingUI text='Front image' size='18px' color={appColor} />\n                <DropzoneUI\n                    width=\"480px\"\n                    height=\"260px\"\n                    name='fronturl'\n                    classN=\"new-mannequin-dropzone\"\n                    validationCallback={(files) => validateFiles(files, 'fronturl')}\n                    error={fileErrors?.fronturl?.message || ''}\n                    onChange={(files: ArrayType) => editImage(files, 'fronturl')}\n                    defaultFiles={[{\n                        ...mannequin,\n                        preview: mannequin.fronturl?.includes('blob') ? mannequin.fronturl : `${BASE_UPLOADS_MANNEQUINS_FRONTS_URL}${mannequin.fronturl}`\n                    }]}\n                />\n            </div>\n            <div className=\"new-mannequin-zone\">\n                <HeadingUI text='Back image' size='18px' color={appColor} />\n                <DropzoneUI\n                    width=\"480px\"\n                    height=\"260px\"\n                    name='backurl'\n                    classN=\"new-mannequin-dropzone\"\n                    onChange={(files: ArrayType) => editImage(files, 'backurl')}\n                    validationCallback={(files) => validateFiles(files, 'backurl')}\n                    error={fileErrors?.backurl?.message || ''}\n                    defaultFiles={[{\n                        ...mannequin,\n                        preview: mannequin.backurl?.includes('blob') ? mannequin.backurl : `${BASE_UPLOADS_MANNEQUINS_BACKS_URL}${mannequin.backurl}`\n                    }]}\n                />\n            </div>\n            <div className=\"new-mannequin-actions\">\n                <ButtonUI onClick={() => closePopup()} version=\"gray\">Discard</ButtonUI>\n                <ButtonUI onClick={() => callback()}>Save</ButtonUI>\n            </div>\n        </div>\n    );\n};\n\nexport default EditMannequin;","import { BASE_UPLOADS_MANNEQUINS_BACKS_URL, BASE_UPLOADS_MANNEQUINS_FRONTS_URL } from \"shared/constants/genericApiRoutes\";\nimport { ArrayType, ObjectType } from \"shared/helpers/helpers\";\nimport { ButtonUI } from \"shared/ui/ButtonUI/ButtonUI\";\nimport HeadingUI from \"shared/ui/HeadingUI/HeadingUI\";\nimport './style.scss'\nimport { useEffect, useState } from \"react\";\nimport PopupUI from \"shared/ui/PopupUI/PopupUI\";\nimport { updateMannequin, updatePrint } from \"shared/api/dataApi\";\nimport { getAvPrints } from \"services/printService\";\nimport { useDispatch } from \"react-redux\";\nimport { formValidator } from \"utils/validators/validator\";\nimport { mannequinFormOptions } from \"utils/validators/validatorOptions\";\nimport { getAvMannequins } from \"services/mannequinService\";\nimport EditMannequin from \"./EditMannequin\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPencil, faReplyAll } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface Props {\n    mannequins: ArrayType\n}\n\nconst MannequinsList = ({\n    mannequins\n}: Props) => {\n\n    const [isVisible, setIsVisible] = useState<boolean>(false)\n    const [editableMannequin, setEditableMannequin] = useState<ObjectType>({})\n    const [mannequinInfo, setMannequinInfo] = useState<ObjectType>({})\n    const [errors, setErrors] = useState<ObjectType>({})\n    const [side, setSide] = useState<string>('front')\n    const dispatch = useDispatch()\n\n    const editMannequin = (print: ObjectType) => {\n        if (print) {\n            setEditableMannequin(print)\n            setMannequinInfo(print)\n            setIsVisible(true)\n        }\n    }\n\n    const closePopup = () => {\n        setIsVisible(false)\n        setEditableMannequin({})\n        setMannequinInfo({})\n        setErrors({})\n    }\n\n    const saveMannequin = async () => {\n\n        const formErrors = formValidator(editableMannequin, mannequinFormOptions);\n        if (formErrors) { return setErrors(formErrors) };\n        if (Object.keys(errors).length) { setErrors({}) };\n        async function getNewFile(image: string) {\n            const response = await fetch(image);\n            const blob = await response.blob();\n            const file = new File([blob], 'image.jpg', { type: blob.type });\n            return file\n        }\n        const newMannequin = JSON.parse(JSON.stringify(editableMannequin));\n        if (editableMannequin?.fronturl?.includes('blob')) {\n            const file = await getNewFile(editableMannequin.fronturl);\n            newMannequin.fronturl = file;\n        }\n        if (editableMannequin?.backurl?.includes('blob')) {\n            const file = await getNewFile(editableMannequin.backurl);\n            newMannequin.backurl = file;\n        }\n        const formData = new FormData();\n        Object.keys(newMannequin).forEach((key) => {\n            formData.append(key, newMannequin[key]);\n        });\n\n        await updateMannequin(formData)\n        await getAvMannequins(dispatch)\n        closePopup()\n    }\n\n    const rotateImage = () => {\n        setSide(side === 'front' ? 'back' : 'front')\n    }\n\n    return (\n        <div className=\"mannequin-list\">\n            {mannequins?.map((mannequin: ObjectType) => {\n                return <div className=\"mannequins-list-mannequin\" key={mannequin._id}>\n                    <HeadingUI classN=\"mannequin-list-text _ellipsis\" text={mannequin.name} size=\"16px\" />\n                    <div className=\"mannequin-list-image\">\n                        <img\n                            src={side === 'front'\n                                ? `${BASE_UPLOADS_MANNEQUINS_FRONTS_URL}${mannequin.fronturl}`\n                                : `${BASE_UPLOADS_MANNEQUINS_BACKS_URL}${mannequin.backurl}`\n                            }\n                            className=\"mannequin-list-img\"\n                            alt={mannequin.name}\n                        />\n                        <button\n                            type=\"button\"\n                            className=\"mannequin-list-rotate\"\n                            onClick={rotateImage}\n                        ><FontAwesomeIcon icon={faReplyAll} />\n                        </button>\n                        <button\n                            type=\"button\"\n                            className=\"mannequin-list-edit\"\n                            onClick={() => editMannequin(mannequin)}\n                        ><FontAwesomeIcon icon={faPencil} />\n                        </button>\n                    </div>\n                </div>\n            })}\n            {isVisible && <PopupUI callback={closePopup}>\n                <EditMannequin\n                    callback={saveMannequin}\n                    closePopup={closePopup}\n                    mannequin={editableMannequin}\n                    errors={errors}\n                    setMannequin={setEditableMannequin}\n                    mannequinInfo={mannequinInfo}\n                />\n            </PopupUI>}\n        </div>\n    );\n};\n\nexport default MannequinsList;","import { ChangeEvent, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getAvMannequins } from 'services/mannequinService';\nimport { getAvPrints } from 'services/printService';\nimport { addMannequin, addPrint } from 'shared/api/dataApi';\nimport { ArrayType, ObjectType, appColor } from 'shared/helpers/helpers';\nimport { CallbackSkeletonType } from 'shared/objectModels/GenericModel';\nimport { ButtonUI } from 'shared/ui/ButtonUI/ButtonUI';\nimport DropzoneUI from 'shared/ui/DropzoneUI/DropzoneUI';\nimport HeadingUI from 'shared/ui/HeadingUI/HeadingUI';\nimport InputUI from 'shared/ui/InputUI/InputUI';\nimport { formValidator } from 'utils/validators/validator';\nimport { mannequinFormOptions, printFormOptions } from 'utils/validators/validatorOptions';\n\ninterface Props {\n    closePopup: CallbackSkeletonType,\n}\n\nconst NewMannequin = ({\n    closePopup,\n}: Props) => {\n    const dispatch = useDispatch()\n    const [data, setData] = useState<ObjectType>({\n        name: '',\n        fronturl: '',\n        backurl: ''\n    })\n    const [errors, setErrors] = useState<ObjectType>({})\n    const [fileErrors, setFileErrors] = useState<ObjectType>({})\n\n    const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n        const { target: { name, value } } = event\n        setData({ ...data, [name]: value })\n    }\n\n    const addNewMannequin: CallbackSkeletonType = async (e: HTMLFormElement) => {\n        e.preventDefault()\n        const errors = formValidator(data, mannequinFormOptions);\n        if (errors) { return setErrors(errors) };\n        if (Object.keys(errors).length) { setErrors({}) };\n        const formData = new FormData();\n        Object.keys(data).forEach((key: string) => {\n            formData.append(key, data[key]); // Add other data properties as needed\n        });\n        await addMannequin(formData)\n        await getAvMannequins(dispatch)\n        closePopup()\n\n    }\n\n    const addImage = (files: ArrayType, name: string) => {\n        setData({\n            ...data,\n            [name]: files[0]\n        })\n    }\n\n    const validateFiles = (files: ArrayType, field: string) => {\n        let err = {}\n        files?.map(file => {\n            const obj = {\n                [field]: file?.name\n            }\n            err = formValidator(obj, mannequinFormOptions);\n        })\n        if (Object.keys(err).length) {\n            setFileErrors(err)\n            return false\n        }\n        if (Object.keys(fileErrors).length) { setFileErrors({}) };\n        return true\n    }\n\n    return (\n        <form onSubmit={addNewMannequin} className=\"new-mannequin\">\n            <HeadingUI text=\"Add new mannequin\" align=\"center\" color={appColor} />\n            <div className=\"new-mannequin-inputs\">\n                <InputUI\n                    placeholder=\"Name\"\n                    value={data?.name}\n                    label=\"Name*\"\n                    name=\"name\"\n                    error={errors?.name?.message || ''}\n                    callback={handleInputChange}\n                />\n                <div className=\"new-mannequin-zone\">\n                    <HeadingUI text='Front image' size='18px' color={appColor} />\n                    <DropzoneUI\n                        width=\"480px\"\n                        height=\"160px\"\n                        name=\"fronturl\"\n                        validationCallback={(files) => validateFiles(files, 'fronturl')}\n                        error={fileErrors?.fronturl?.message || ''}\n                        onChange={(files: ArrayType) => addImage(files, 'fronturl')}\n                    />\n                </div>\n                <div className=\"new-mannequin-zone\">\n                    <HeadingUI text='Back image' size='18px' color={appColor} />\n                    <DropzoneUI\n                        width=\"480px\"\n                        height=\"160px\"\n                        name=\"backurl\"\n                        validationCallback={(files) => validateFiles(files, 'backurl')}\n                        error={fileErrors?.backurl?.message || ''}\n                        onChange={(files: ArrayType) => addImage(files, 'backurl')}\n                    />\n                </div>\n            </div>\n            <div className=\"new-mannequin-actions\">\n                <ButtonUI onClick={() => closePopup()} version=\"gray\">Close</ButtonUI>\n                <ButtonUI type=\"submit\">Add</ButtonUI>\n            </div>\n        </form>\n    );\n};\n\nexport default NewMannequin;","import MainHead from 'layout/MainHead/MainHead';\nimport './style.scss'\nimport { ButtonUI } from 'shared/ui/ButtonUI/ButtonUI';\nimport { useEffect, useState } from 'react';\nimport MainBody from 'layout/MainBody/MainBody';\nimport HeadingUI from 'shared/ui/HeadingUI/HeadingUI';\nimport PopupUI from 'shared/ui/PopupUI/PopupUI';\nimport MannequinsList from './MannequinsList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ObjectType } from 'shared/helpers/helpers';\nimport { availableMannequins } from 'redux/reducers/mannequinReducer';\nimport { getAvMannequins } from 'services/mannequinService';\nimport NewMannequin from './NewMannequin';\n\nconst CustomizeMannequins = () => {\n\n    const [isVisible, setIsVisible] = useState<boolean>(false)\n    const mannequins = useSelector(availableMannequins)\n    const dispatch = useDispatch()\n    const [errors, setErrors] = useState<ObjectType>({})\n\n    useEffect(() => {\n        getAvMannequins(dispatch)\n    }, [])\n\n    const closePopup = () => {\n        setIsVisible(false)\n        // dispatch(resetColorState())\n        setErrors({})\n    }\n\n    return (\n        <div>\n            <MainHead text=\"Customize Mannequins\" />\n            <ButtonUI classN=\"add-button\" onClick={() => setIsVisible(true)} type=\"button\">New Mannequin</ButtonUI>\n            <MainBody>\n                <div className=\"colors-pallette-list\">\n                    <HeadingUI text=\"Mannequins List\" size=\"22px\" />\n                    {mannequins?.length ? <MannequinsList mannequins={mannequins} /> : null}\n                </div>\n                {isVisible && <PopupUI callback={closePopup}>\n                    <NewMannequin\n                        closePopup={closePopup}\n                    />\n                </PopupUI>}\n            </MainBody>\n        </div>\n    );\n};\n\nexport default CustomizeMannequins;","import { BASE_UPLOADS_SILHOUETTES_BOTTOMS_URL, BASE_UPLOADS_SILHOUETTES_SLEEVES_URL, BASE_UPLOADS_SILHOUETTES_TOPS_URL } from \"shared/constants/genericApiRoutes\";\nimport { AnimationObject } from \"shared/objectModels/AnimationModel\";\n\nexport type ArrayType = Array<Record<string, any>>\nexport type ObjectType = Record<string, any>\n\nexport const PortalAnimations: AnimationObject = {\n  fadeIn: [\n    { opacity: 0, visibility: \"hidden\" },\n    { opacity: 1, visibility: \"visible\" },\n  ],\n  fadeOut: [\n    { opacity: 1, visibility: \"visible\" },\n    { opacity: 0, visibility: \"hidden\" },\n  ],\n};\n\nexport const CardBarPanelAnimations: AnimationObject = {\n  toRight: [\n    { opacity: 1, transform: \"translateX(0%)\" },\n    { opacity: 0, transform: \"translateX(100%)\" },\n  ],\n  fromRight: [\n    { opacity: 0, transform: \"translateX(100%)\" },\n    { opacity: 1, transform: \"translateX(0%)\" },\n  ],\n};\n\nexport const appColor = '#aa8a75';\n\nexport const silhouetteTypeOptions = [\n  {\n    id: 'top',\n    text: 'Top',\n    value: 'Top'\n  },\n  {\n    id: 'bottom',\n    text: 'Bottom',\n    value: 'Bottom'\n  },\n  {\n    id: 'sleeve',\n    text: 'Sleeve',\n    value: 'Sleeve'\n  }\n]\nexport const silhouetteOrientationOptions = [\n  {\n    id: 'front',\n    text: 'Front',\n    value: 'Front'\n  },\n  {\n    id: 'back',\n    text: 'Back',\n    value: 'Back'\n  },\n]\n\nexport const getSilhouetteFullPath = (type: string) => {\n  const loweredType = type.toLowerCase()\n  switch (loweredType) {\n    case 'top':\n      return BASE_UPLOADS_SILHOUETTES_TOPS_URL\n    case 'bottom':\n      return BASE_UPLOADS_SILHOUETTES_BOTTOMS_URL\n    case 'sleeve':\n      return BASE_UPLOADS_SILHOUETTES_SLEEVES_URL\n    default:\n      break;\n  }\n}\n\nexport const getDropdownOptionsFromItemsVariants = (options: ArrayType) => {\n  return options?.length ? options.reduce((acc: any, option: ObjectType) => {\n    acc.push({\n      id: option?._id,\n      text: option?.name,\n      value: option?.name,\n    })\n    return acc\n  }, []) : []\n}\n\nexport const getActiveItemTypeById = (options:  ArrayType, id: string) => {\n  const elem = options.find(option => option.id === id)\n  return elem?.value || ''\n}","import React, { useState, ChangeEvent, useRef, useEffect } from 'react';\nimport './style.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faX } from '@fortawesome/free-solid-svg-icons';\nimport HeadingUI from '../HeadingUI/HeadingUI';\nimport { CallbackSkeletonType, CallbackSkeletonValue } from 'shared/objectModels/GenericModel';\nimport { ArrayType, ObjectType } from 'shared/helpers/helpers';\n\ninterface FileWithPreview extends File {\n    preview: string;\n}\n\ninterface Props {\n    multiple?: boolean,\n    width?: string,\n    height?: string,\n    onChange?: CallbackSkeletonType,\n    defaultFiles?: ArrayType,\n    name: string,\n    validationCallback?: CallbackSkeletonType | null,\n    error?: string,\n    classN?: string\n}\n\nconst DropzoneUI = ({\n    multiple = false,\n    width = '400px',\n    height = '400px',\n    onChange = CallbackSkeletonValue,\n    defaultFiles,\n    name,\n    validationCallback = null,\n    error = '',\n    classN\n}: Props) => {\n    const [files, setFiles] = useState<FileWithPreview[] | ArrayType>([]);\n    const fileInputRef = useRef<HTMLInputElement | null>(null);\n    const bodyRef = useRef<HTMLDivElement | null>(null);\n    \n    useEffect(() => {\n        if (defaultFiles?.length) setFiles(defaultFiles)\n    },[defaultFiles])\n\n    const handleDrop = (e: React.DragEvent<HTMLDivElement>) => {\n        e.preventDefault();\n        const newFiles = Array.from(e.dataTransfer.files) as FileWithPreview[];\n\n        newFiles.forEach((file) => {\n            file.preview = URL.createObjectURL(file);\n        });\n        \n        if (multiple) {\n            setFiles([...files, ...newFiles]);\n            return onChange([...files, ...newFiles])\n        }\n        if (newFiles?.length) {\n            setFiles(newFiles)\n            onChange(newFiles)\n        }\n        bodyRef?.current?.classList.remove('_drag')\n\n    };\n\n    const handleDelete = (index: number) => {\n        const updatedFiles = [...files];\n        updatedFiles.splice(index, 1);\n        setFiles(updatedFiles);\n    };\n\n    const handleDragOver = (e: React.DragEvent<HTMLDivElement>) => {\n        e.preventDefault();\n        bodyRef?.current?.classList.add('_drag')\n    };\n\n    const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n        e.preventDefault();\n        bodyRef?.current?.classList.remove('_drag')\n    };\n\n    const handleDropzoneClick = () => {\n        if (fileInputRef.current) {\n            fileInputRef.current.click();\n        }\n    };\n\n    const handleFileInputChange = async (e: ChangeEvent<HTMLInputElement>) => {\n        const newFiles = Array.from(e.target.files as FileList) as FileWithPreview[];\n        const isValidated = validationCallback ? await validationCallback(newFiles) : true\n        if (isValidated) {\n            newFiles.forEach((file) => {\n                file.preview = URL.createObjectURL(file);\n            });\n            if (multiple) {\n                setFiles([...files, ...newFiles]);\n                return onChange([...files, ...newFiles])\n            }\n            if (newFiles?.length) {\n                setFiles(newFiles)\n                onChange(newFiles)\n            }\n        }\n    };\n\n    const borderColor = error ? 'red' : 'silver'\n    return (\n        <>\n            {error && <span className=\"error-message\">{error}</span>}\n            <div className={`DropzoneUI ${classN}`}\n                style={{\n                    width,\n                    height,\n                    backgroundImage: `linear-gradient(90deg, ${borderColor} 50%, transparent 50%), linear-gradient(90deg, ${borderColor} 50%, transparent 50%), linear-gradient(0deg, ${borderColor} 50%, transparent 50%), linear-gradient(0deg, ${borderColor} 50%, transparent 50%)`\n                }}\n                onDrop={handleDrop}\n                onDragOver={handleDragOver}\n                onDragLeave={handleDragLeave}\n                ref={bodyRef}\n            >\n                <div\n                    className='DropzoneUI__body'\n                    onClick={handleDropzoneClick}\n                >\n                    <HeadingUI \n                        text={`Drag & drop some file${multiple ? 's' : ''} here, or click to select file${multiple ? 's' : ''}`}\n                        size='14px'\n                        align='center'\n                    />\n                </div>\n                <input\n                    type=\"file\"\n                    ref={fileInputRef}\n                    style={{ display: 'none' }}\n                    onChange={handleFileInputChange}\n                    multiple={multiple}\n                    name={name}\n                />\n\n                <div className='DropzoneUI__files' style={{ maxHeight: +height.replace('px', '') - 30 + 'px' }}>\n                    {files.map((file, index) => (\n                        <div key={index} className='DropzoneUI__file'>\n                            <img src={file.preview} alt={`Preview ${index}`} className='DropzoneUI__preview' />\n                            <button\n                                className='DropzoneUI__remove'\n                                onClick={() => handleDelete(index)}\n                                type='button'>\n                                <FontAwesomeIcon icon={faX} />\n                            </button>\n                        </div>\n                    ))}\n                </div>\n\n            </div>\n        </>\n    );\n};\n\nexport default DropzoneUI;\n"],"names":["getAvMannequins","dispatch","getMannequins","then","res","setMannequinData","catch","err","console","log","_ref","_errors$name","_fileErrors$fronturl","_mannequin$fronturl","_fileErrors$backurl","_mannequin$backurl","callback","closePopup","mannequin","setMannequin","errors","mannequinInfo","fileErrors","setFileErrors","useState","editImage","files","name","URL","createObjectURL","validateFiles","field","map","file","obj","formValidator","mannequinFilesOptions","Object","keys","length","_jsxs","className","children","_jsx","HeadingUI","text","concat","align","color","InputUI","placeholder","value","label","error","message","event","target","size","appColor","DropzoneUI","width","height","classN","validationCallback","fronturl","onChange","defaultFiles","preview","includes","BASE_UPLOADS_MANNEQUINS_FRONTS_URL","backurl","BASE_UPLOADS_MANNEQUINS_BACKS_URL","ButtonUI","onClick","version","mannequins","isVisible","setIsVisible","editableMannequin","setEditableMannequin","setMannequinInfo","setErrors","side","setSide","useDispatch","rotateImage","src","alt","type","FontAwesomeIcon","icon","faReplyAll","print","faPencil","_id","PopupUI","EditMannequin","async","_editableMannequin$fr","_editableMannequin$ba","formErrors","mannequinFormOptions","getNewFile","image","response","fetch","blob","File","newMannequin","JSON","parse","stringify","formData","FormData","forEach","key","append","updateMannequin","data","setData","addImage","onSubmit","e","preventDefault","addMannequin","CustomizeMannequins","useSelector","availableMannequins","useEffect","MainHead","MainBody","MannequinsList","NewMannequin","silhouetteTypeOptions","id","silhouetteOrientationOptions","getSilhouetteFullPath","toLowerCase","BASE_UPLOADS_SILHOUETTES_TOPS_URL","BASE_UPLOADS_SILHOUETTES_BOTTOMS_URL","BASE_UPLOADS_SILHOUETTES_SLEEVES_URL","getDropdownOptionsFromItemsVariants","options","reduce","acc","option","push","multiple","CallbackSkeletonValue","setFiles","fileInputRef","useRef","bodyRef","borderColor","_Fragment","style","backgroundImage","onDrop","_bodyRef$current","newFiles","Array","from","dataTransfer","current","classList","remove","onDragOver","_bodyRef$current2","add","onDragLeave","_bodyRef$current3","ref","handleDropzoneClick","click","display","maxHeight","replace","index","updatedFiles","splice","handleDelete","faX"],"sourceRoot":""}