{"version":3,"file":"static/js/555.87bd240a.chunk.js","mappings":"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","sources":["services/mannequinService.ts","components/customize/mannequins/EditMannequin.tsx","components/customize/mannequins/MannequinsList.tsx","components/customize/mannequins/NewMannequin.tsx","components/customize/mannequins/CustomizeMannequins.tsx","layout/MainBody/MainBody.tsx","layout/MainHead/MainHead.tsx","shared/helpers/helpers.ts","shared/objectModels/GenericModel.ts","shared/ui/LoaderCircleUI/LoaderCircleUI.tsx","shared/ui/ButtonUI/ButtonUI.tsx","shared/ui/DropzoneUI/DropzoneUI.tsx","shared/ui/HeadingUI/HeadingUI.tsx","shared/ui/InputUI/InputUI.tsx","layout/ReactPortal/helper.ts","layout/ReactPortal/ReactPortal.tsx","shared/ui/PopupUI/PopupUI.tsx","utils/validators/validator.ts","utils/validators/validatorOptions.ts"],"sourcesContent":["import { setMannequinData } from \"redux/reducers/mannequinReducer\"\r\nimport { getMannequins } from \"shared/api/dataApi\"\r\n\r\n\r\nexport const getAvMannequins = (dispatch: any) => {\r\n    getMannequins().then(res => {\r\n        dispatch(setMannequinData(res))\r\n    }).catch(err => console.log(err))\r\n}","import { ChangeEvent, useState } from \"react\";\r\nimport { CallbackSkeletonType } from \"shared/objectModels/GenericModel\";\r\nimport { ButtonUI } from \"shared/ui/ButtonUI/ButtonUI\";\r\nimport HeadingUI from \"shared/ui/HeadingUI/HeadingUI\";\r\nimport InputUI from \"shared/ui/InputUI/InputUI\";\r\nimport './style.scss'\r\nimport { ArrayType, ObjectType, appColor } from \"shared/helpers/helpers\";\r\nimport DropzoneUI from \"shared/ui/DropzoneUI/DropzoneUI\";\r\nimport { BASE_UPLOADS_MANNEQUINS_BACKS_URL, BASE_UPLOADS_MANNEQUINS_FRONTS_URL } from \"shared/constants/genericApiRoutes\";\r\nimport { mannequinFilesOptions } from \"utils/validators/validatorOptions\";\r\nimport { formValidator } from \"utils/validators/validator\";\r\n\r\ninterface Props {\r\n    callback: CallbackSkeletonType,\r\n    closePopup: CallbackSkeletonType,\r\n    mannequin: ObjectType,\r\n    setMannequin: CallbackSkeletonType,\r\n    errors: ObjectType,\r\n    mannequinInfo: ObjectType\r\n}\r\n\r\nconst EditMannequin = ({\r\n    callback,\r\n    closePopup,\r\n    mannequin,\r\n    setMannequin,\r\n    errors,\r\n    mannequinInfo\r\n}: Props) => {\r\n\r\n    const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        const { target: { name, value } } = event\r\n        setMannequin({ ...mannequin, [name]: value })\r\n    }\r\n    const [fileErrors, setFileErrors] = useState<ObjectType>({})\r\n\r\n    const editImage = (files: ArrayType, name: string) => {\r\n        setMannequin({\r\n            ...mannequin,\r\n            [name]: URL.createObjectURL(files[0] as any)\r\n        })\r\n    }\r\n\r\n    const validateFiles = (files: ArrayType, field: string) => {\r\n        let err = {}\r\n        files?.map(file => {\r\n            const obj = {\r\n                [field]: file?.name\r\n            }\r\n            err = formValidator(obj, mannequinFilesOptions);\r\n        })\r\n        if (Object.keys(err).length) {\r\n            setFileErrors(err)\r\n            return false\r\n        }\r\n        if (Object.keys(fileErrors).length) { setFileErrors({}) };\r\n        return true\r\n    }\r\n\r\n    return (\r\n        <div className=\"new-mannequin\">\r\n            <HeadingUI text={`Edit ${mannequinInfo.name} mannequin`} align=\"center\" color=\"#aa8a75\" />\r\n            <div className=\"new-mannequin-inputs\">\r\n                <InputUI\r\n                    placeholder=\"Name\"\r\n                    value={mannequin?.name}\r\n                    label=\"Name*\"\r\n                    name=\"name\"\r\n                    error={errors?.name?.message || ''}\r\n                    callback={handleInputChange}\r\n                />\r\n            </div>\r\n            <div className=\"new-mannequin-zone\">\r\n                <HeadingUI text='Front image' size='18px' color={appColor} />\r\n                <DropzoneUI\r\n                    width=\"480px\"\r\n                    height=\"260px\"\r\n                    name='fronturl'\r\n                    classN=\"new-mannequin-dropzone\"\r\n                    validationCallback={(files) => validateFiles(files, 'fronturl')}\r\n                    error={fileErrors?.fronturl?.message || ''}\r\n                    onChange={(files: ArrayType) => editImage(files, 'fronturl')}\r\n                    defaultFiles={[{\r\n                        ...mannequin,\r\n                        preview: mannequin.fronturl?.includes('blob') ? mannequin.fronturl : `${BASE_UPLOADS_MANNEQUINS_FRONTS_URL}${mannequin.fronturl}`\r\n                    }]}\r\n                />\r\n            </div>\r\n            <div className=\"new-mannequin-zone\">\r\n                <HeadingUI text='Back image' size='18px' color={appColor} />\r\n                <DropzoneUI\r\n                    width=\"480px\"\r\n                    height=\"260px\"\r\n                    name='backurl'\r\n                    classN=\"new-mannequin-dropzone\"\r\n                    onChange={(files: ArrayType) => editImage(files, 'backurl')}\r\n                    validationCallback={(files) => validateFiles(files, 'backurl')}\r\n                    error={fileErrors?.backurl?.message || ''}\r\n                    defaultFiles={[{\r\n                        ...mannequin,\r\n                        preview: mannequin.backurl?.includes('blob') ? mannequin.backurl : `${BASE_UPLOADS_MANNEQUINS_BACKS_URL}${mannequin.backurl}`\r\n                    }]}\r\n                />\r\n            </div>\r\n            <div className=\"new-mannequin-actions\">\r\n                <ButtonUI onClick={() => closePopup()} version=\"gray\">Discard</ButtonUI>\r\n                <ButtonUI onClick={() => callback()}>Save</ButtonUI>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditMannequin;","import { BASE_UPLOADS_MANNEQUINS_BACKS_URL, BASE_UPLOADS_MANNEQUINS_FRONTS_URL } from \"shared/constants/genericApiRoutes\";\r\nimport { ArrayType, ObjectType } from \"shared/helpers/helpers\";\r\nimport { ButtonUI } from \"shared/ui/ButtonUI/ButtonUI\";\r\nimport HeadingUI from \"shared/ui/HeadingUI/HeadingUI\";\r\nimport './style.scss'\r\nimport { useEffect, useState } from \"react\";\r\nimport PopupUI from \"shared/ui/PopupUI/PopupUI\";\r\nimport { updateMannequin, updatePrint } from \"shared/api/dataApi\";\r\nimport { getAvPrints } from \"services/printService\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { formValidator } from \"utils/validators/validator\";\r\nimport { mannequinFormOptions } from \"utils/validators/validatorOptions\";\r\nimport { getAvMannequins } from \"services/mannequinService\";\r\nimport EditMannequin from \"./EditMannequin\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPencil, faReplyAll } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\ninterface Props {\r\n    mannequins: ArrayType\r\n}\r\n\r\nconst MannequinsList = ({\r\n    mannequins\r\n}: Props) => {\r\n\r\n    const [isVisible, setIsVisible] = useState<boolean>(false)\r\n    const [editableMannequin, setEditableMannequin] = useState<ObjectType>({})\r\n    const [mannequinInfo, setMannequinInfo] = useState<ObjectType>({})\r\n    const [errors, setErrors] = useState<ObjectType>({})\r\n    const [side, setSide] = useState<string>('front')\r\n    const dispatch = useDispatch()\r\n\r\n    const editMannequin = (print: ObjectType) => {\r\n        if (print) {\r\n            setEditableMannequin(print)\r\n            setMannequinInfo(print)\r\n            setIsVisible(true)\r\n        }\r\n    }\r\n\r\n    const closePopup = () => {\r\n        setIsVisible(false)\r\n        setEditableMannequin({})\r\n        setMannequinInfo({})\r\n        setErrors({})\r\n    }\r\n\r\n    const saveMannequin = async () => {\r\n\r\n        const formErrors = formValidator(editableMannequin, mannequinFormOptions);\r\n        if (formErrors) { return setErrors(formErrors) };\r\n        if (Object.keys(errors).length) { setErrors({}) };\r\n        async function getNewFile(image: string) {\r\n            const response = await fetch(image);\r\n            const blob = await response.blob();\r\n            const file = new File([blob], 'image.jpg', { type: blob.type });\r\n            return file\r\n        }\r\n        const newMannequin = JSON.parse(JSON.stringify(editableMannequin));\r\n        if (editableMannequin?.fronturl?.includes('blob')) {\r\n            const file = await getNewFile(editableMannequin.fronturl);\r\n            newMannequin.fronturl = file;\r\n        }\r\n        if (editableMannequin?.backurl?.includes('blob')) {\r\n            const file = await getNewFile(editableMannequin.backurl);\r\n            newMannequin.backurl = file;\r\n        }\r\n        const formData = new FormData();\r\n        Object.keys(newMannequin).forEach((key) => {\r\n            formData.append(key, newMannequin[key]);\r\n        });\r\n\r\n        await updateMannequin(formData)\r\n        await getAvMannequins(dispatch)\r\n        closePopup()\r\n    }\r\n\r\n    const rotateImage = () => {\r\n        setSide(side === 'front' ? 'back' : 'front')\r\n    }\r\n\r\n    return (\r\n        <div className=\"mannequin-list\">\r\n            {mannequins?.map((mannequin: ObjectType) => {\r\n                return <div className=\"mannequins-list-mannequin\" key={mannequin._id}>\r\n                    <HeadingUI classN=\"mannequin-list-text _ellipsis\" text={mannequin.name} size=\"16px\" />\r\n                    <div className=\"mannequin-list-image\">\r\n                        <img\r\n                            src={side === 'front'\r\n                                ? `${BASE_UPLOADS_MANNEQUINS_FRONTS_URL}${mannequin.fronturl}`\r\n                                : `${BASE_UPLOADS_MANNEQUINS_BACKS_URL}${mannequin.backurl}`\r\n                            }\r\n                            className=\"mannequin-list-img\"\r\n                            alt={mannequin.name}\r\n                        />\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"mannequin-list-rotate\"\r\n                            onClick={rotateImage}\r\n                        ><FontAwesomeIcon icon={faReplyAll} />\r\n                        </button>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"mannequin-list-edit\"\r\n                            onClick={() => editMannequin(mannequin)}\r\n                        ><FontAwesomeIcon icon={faPencil} />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            })}\r\n            {isVisible && <PopupUI callback={closePopup}>\r\n                <EditMannequin\r\n                    callback={saveMannequin}\r\n                    closePopup={closePopup}\r\n                    mannequin={editableMannequin}\r\n                    errors={errors}\r\n                    setMannequin={setEditableMannequin}\r\n                    mannequinInfo={mannequinInfo}\r\n                />\r\n            </PopupUI>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MannequinsList;","import { ChangeEvent, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getAvMannequins } from 'services/mannequinService';\r\nimport { getAvPrints } from 'services/printService';\r\nimport { addMannequin, addPrint } from 'shared/api/dataApi';\r\nimport { ArrayType, ObjectType, appColor } from 'shared/helpers/helpers';\r\nimport { CallbackSkeletonType } from 'shared/objectModels/GenericModel';\r\nimport { ButtonUI } from 'shared/ui/ButtonUI/ButtonUI';\r\nimport DropzoneUI from 'shared/ui/DropzoneUI/DropzoneUI';\r\nimport HeadingUI from 'shared/ui/HeadingUI/HeadingUI';\r\nimport InputUI from 'shared/ui/InputUI/InputUI';\r\nimport { formValidator } from 'utils/validators/validator';\r\nimport { mannequinFormOptions, printFormOptions } from 'utils/validators/validatorOptions';\r\n\r\ninterface Props {\r\n    closePopup: CallbackSkeletonType,\r\n}\r\n\r\nconst NewMannequin = ({\r\n    closePopup,\r\n}: Props) => {\r\n    const dispatch = useDispatch()\r\n    const [data, setData] = useState<ObjectType>({\r\n        name: '',\r\n        fronturl: '',\r\n        backurl: ''\r\n    })\r\n    const [errors, setErrors] = useState<ObjectType>({})\r\n    const [fileErrors, setFileErrors] = useState<ObjectType>({})\r\n\r\n    const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        const { target: { name, value } } = event\r\n        setData({ ...data, [name]: value })\r\n    }\r\n\r\n    const addNewMannequin: CallbackSkeletonType = async (e: HTMLFormElement) => {\r\n        e.preventDefault()\r\n        const errors = formValidator(data, mannequinFormOptions);\r\n        if (errors) { return setErrors(errors) };\r\n        if (Object.keys(errors).length) { setErrors({}) };\r\n        const formData = new FormData();\r\n        Object.keys(data).forEach((key: string) => {\r\n            formData.append(key, data[key]); // Add other data properties as needed\r\n        });\r\n        await addMannequin(formData)\r\n        await getAvMannequins(dispatch)\r\n        closePopup()\r\n\r\n    }\r\n\r\n    const addImage = (files: ArrayType, name: string) => {\r\n        setData({\r\n            ...data,\r\n            [name]: files[0]\r\n        })\r\n    }\r\n\r\n    const validateFiles = (files: ArrayType, field: string) => {\r\n        let err = {}\r\n        files?.map(file => {\r\n            const obj = {\r\n                [field]: file?.name\r\n            }\r\n            err = formValidator(obj, mannequinFormOptions);\r\n        })\r\n        if (Object.keys(err).length) {\r\n            setFileErrors(err)\r\n            return false\r\n        }\r\n        if (Object.keys(fileErrors).length) { setFileErrors({}) };\r\n        return true\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={addNewMannequin} className=\"new-mannequin\">\r\n            <HeadingUI text=\"Add new mannequin\" align=\"center\" color={appColor} />\r\n            <div className=\"new-mannequin-inputs\">\r\n                <InputUI\r\n                    placeholder=\"Name\"\r\n                    value={data?.name}\r\n                    label=\"Name*\"\r\n                    name=\"name\"\r\n                    error={errors?.name?.message || ''}\r\n                    callback={handleInputChange}\r\n                />\r\n                <div className=\"new-mannequin-zone\">\r\n                    <HeadingUI text='Front image' size='18px' color={appColor} />\r\n                    <DropzoneUI\r\n                        width=\"480px\"\r\n                        height=\"160px\"\r\n                        name=\"fronturl\"\r\n                        validationCallback={(files) => validateFiles(files, 'fronturl')}\r\n                        error={fileErrors?.fronturl?.message || ''}\r\n                        onChange={(files: ArrayType) => addImage(files, 'fronturl')}\r\n                    />\r\n                </div>\r\n                <div className=\"new-mannequin-zone\">\r\n                    <HeadingUI text='Back image' size='18px' color={appColor} />\r\n                    <DropzoneUI\r\n                        width=\"480px\"\r\n                        height=\"160px\"\r\n                        name=\"backurl\"\r\n                        validationCallback={(files) => validateFiles(files, 'backurl')}\r\n                        error={fileErrors?.backurl?.message || ''}\r\n                        onChange={(files: ArrayType) => addImage(files, 'backurl')}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"new-mannequin-actions\">\r\n                <ButtonUI onClick={() => closePopup()} version=\"gray\">Close</ButtonUI>\r\n                <ButtonUI type=\"submit\">Add</ButtonUI>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default NewMannequin;","import MainHead from 'layout/MainHead/MainHead';\r\nimport './style.scss'\r\nimport { ButtonUI } from 'shared/ui/ButtonUI/ButtonUI';\r\nimport { useEffect, useState } from 'react';\r\nimport MainBody from 'layout/MainBody/MainBody';\r\nimport HeadingUI from 'shared/ui/HeadingUI/HeadingUI';\r\nimport PopupUI from 'shared/ui/PopupUI/PopupUI';\r\nimport MannequinsList from './MannequinsList';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ObjectType } from 'shared/helpers/helpers';\r\nimport { availableMannequins } from 'redux/reducers/mannequinReducer';\r\nimport { getAvMannequins } from 'services/mannequinService';\r\nimport NewMannequin from './NewMannequin';\r\n\r\nconst CustomizeMannequins = () => {\r\n\r\n    const [isVisible, setIsVisible] = useState<boolean>(false)\r\n    const mannequins = useSelector(availableMannequins)\r\n    const dispatch = useDispatch()\r\n    const [errors, setErrors] = useState<ObjectType>({})\r\n\r\n    useEffect(() => {\r\n        getAvMannequins(dispatch)\r\n    }, [])\r\n\r\n    const closePopup = () => {\r\n        setIsVisible(false)\r\n        // dispatch(resetColorState())\r\n        setErrors({})\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <MainHead text=\"Customize Mannequins\" />\r\n            <ButtonUI classN=\"add-button\" onClick={() => setIsVisible(true)} type=\"button\">New Mannequin</ButtonUI>\r\n            <MainBody>\r\n                <div className=\"colors-pallette-list\">\r\n                    <HeadingUI text=\"Mannequins List\" size=\"22px\" />\r\n                    {mannequins?.length ? <MannequinsList mannequins={mannequins} /> : null}\r\n                </div>\r\n                {isVisible && <PopupUI callback={closePopup}>\r\n                    <NewMannequin\r\n                        closePopup={closePopup}\r\n                    />\r\n                </PopupUI>}\r\n            </MainBody>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CustomizeMannequins;","import './style.scss'\r\n\r\ninterface Props {\r\n    children: any\r\n}\r\n\r\nconst MainBody = ({\r\n    children\r\n}: Props) => {\r\n    return (\r\n        <div className=\"main-body\">\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainBody;","import HeadingUI from \"shared/ui/HeadingUI/HeadingUI\";\r\nimport './style.scss'\r\n\r\ninterface Props {\r\n    text: string,\r\n}\r\n\r\nconst MainHead = ({\r\n    text\r\n}: Props) => {\r\n    return (\r\n        <div className=\"main-head\">\r\n            <HeadingUI text={text} color=\"#aa8a75\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainHead;","import { AnimationObject } from \"shared/objectModels/AnimationModel\";\r\n\r\nexport type ArrayType = Array<Record<string, any>>\r\nexport type ObjectType = Record<string, any>\r\n\r\nexport const PortalAnimations: AnimationObject = {\r\n    fadeIn: [\r\n      { opacity: 0, visibility: \"hidden\" },\r\n      { opacity: 1, visibility: \"visible\" },\r\n    ],\r\n    fadeOut: [\r\n      { opacity: 1, visibility: \"visible\" },\r\n      { opacity: 0, visibility: \"hidden\" },\r\n    ],\r\n  };\r\n\r\nexport const CardBarPanelAnimations: AnimationObject = {\r\n    toRight: [\r\n        { opacity: 1, transform: \"translateX(0%)\" },\r\n        { opacity: 0, transform: \"translateX(100%)\" },\r\n    ],\r\n    fromRight: [\r\n        { opacity: 0, transform: \"translateX(100%)\" },\r\n        { opacity: 1, transform: \"translateX(0%)\" },\r\n    ],\r\n};\r\n\r\nexport const appColor = '#aa8a75';\r\n","export type CallbackSkeletonType = (event?: any) => void\r\nexport const CallbackSkeletonValue = () => {}","interface Iloader {\r\n    classN?: string\r\n}\r\n\r\nconst LoaderCircleUI = ({ classN }: Iloader) => {\r\n    return (\r\n        <div className={`LoaderCircleUI ${classN}`} ></div>\r\n    )\r\n}\r\n\r\nexport default LoaderCircleUI","import { HTMLProps } from \"react\";\r\nimport \"./style.scss\";\r\nimport { CallbackSkeletonValue } from \"shared/objectModels/GenericModel\";\r\nimport LoaderCircleUI from \"../LoaderCircleUI/LoaderCircleUI\";\r\n\r\ninterface Props extends HTMLProps<HTMLButtonElement> {\r\n  type?: \"button\" | \"submit\" | \"reset\";\r\n  version?: string;\r\n  classN?: string;\r\n  disabled?: boolean;\r\n  isLoading?: boolean;\r\n}\r\n\r\nconst versions: Record<string, string> = {\r\n  default: \"default-btn\",\r\n  red: 'red-btn',\r\n  orange: 'orange-btn',\r\n  blue: 'blue-btn',\r\n  green: 'green-btn',\r\n  gray: 'gray-btn',\r\n}\r\n\r\nexport const ButtonUI: React.FC<Props> = ({\r\n  children,\r\n  type = \"button\",\r\n  version = \"default\",\r\n  classN = '',\r\n  disabled = false,\r\n  isLoading = false,\r\n  onClick = CallbackSkeletonValue,\r\n  ...buttonProps\r\n}) => {\r\n  return (\r\n    <button\r\n      {...buttonProps}\r\n      className={`ButtonUI ${classN} ${versions[version]} ${disabled ? '_disabled' : ''}`}\r\n      type={type}\r\n      onClick={(event) => !disabled && !isLoading && onClick(event)}\r\n    >{isLoading ? (<LoaderCircleUI />) : children}</button>\r\n  )\r\n}","import React, { useState, ChangeEvent, useRef, useEffect } from 'react';\r\nimport './style.scss'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faX } from '@fortawesome/free-solid-svg-icons';\r\nimport HeadingUI from '../HeadingUI/HeadingUI';\r\nimport { CallbackSkeletonType, CallbackSkeletonValue } from 'shared/objectModels/GenericModel';\r\nimport { ArrayType, ObjectType } from 'shared/helpers/helpers';\r\n\r\ninterface FileWithPreview extends File {\r\n    preview: string;\r\n}\r\n\r\ninterface Props {\r\n    multiple?: boolean,\r\n    width?: string,\r\n    height?: string,\r\n    onChange?: CallbackSkeletonType,\r\n    defaultFiles?: ArrayType,\r\n    name: string,\r\n    validationCallback?: CallbackSkeletonType | null,\r\n    error?: string,\r\n    classN?: string\r\n}\r\n\r\nconst DropzoneUI = ({\r\n    multiple = false,\r\n    width = '400px',\r\n    height = '400px',\r\n    onChange = CallbackSkeletonValue,\r\n    defaultFiles,\r\n    name,\r\n    validationCallback = null,\r\n    error = '',\r\n    classN\r\n}: Props) => {\r\n    const [files, setFiles] = useState<FileWithPreview[] | ArrayType>([]);\r\n    const fileInputRef = useRef<HTMLInputElement | null>(null);\r\n    const bodyRef = useRef<HTMLDivElement | null>(null);\r\n    \r\n    useEffect(() => {\r\n        if (defaultFiles?.length) setFiles(defaultFiles)\r\n    },[defaultFiles])\r\n\r\n    const handleDrop = (e: React.DragEvent<HTMLDivElement>) => {\r\n        e.preventDefault();\r\n        const newFiles = Array.from(e.dataTransfer.files) as FileWithPreview[];\r\n\r\n        newFiles.forEach((file) => {\r\n            file.preview = URL.createObjectURL(file);\r\n        });\r\n        \r\n        if (multiple) {\r\n            setFiles([...files, ...newFiles]);\r\n            return onChange([...files, ...newFiles])\r\n        }\r\n        if (newFiles?.length) {\r\n            setFiles(newFiles)\r\n            onChange(newFiles)\r\n        }\r\n        bodyRef?.current?.classList.remove('_drag')\r\n\r\n    };\r\n\r\n    const handleDelete = (index: number) => {\r\n        const updatedFiles = [...files];\r\n        updatedFiles.splice(index, 1);\r\n        setFiles(updatedFiles);\r\n    };\r\n\r\n    const handleDragOver = (e: React.DragEvent<HTMLDivElement>) => {\r\n        e.preventDefault();\r\n        bodyRef?.current?.classList.add('_drag')\r\n    };\r\n\r\n    const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\r\n        e.preventDefault();\r\n        bodyRef?.current?.classList.remove('_drag')\r\n    };\r\n\r\n    const handleDropzoneClick = () => {\r\n        if (fileInputRef.current) {\r\n            fileInputRef.current.click();\r\n        }\r\n    };\r\n\r\n    const handleFileInputChange = async (e: ChangeEvent<HTMLInputElement>) => {\r\n        const newFiles = Array.from(e.target.files as FileList) as FileWithPreview[];\r\n        const isValidated = validationCallback ? await validationCallback(newFiles) : true\r\n        if (isValidated) {\r\n            newFiles.forEach((file) => {\r\n                file.preview = URL.createObjectURL(file);\r\n            });\r\n            if (multiple) {\r\n                setFiles([...files, ...newFiles]);\r\n                return onChange([...files, ...newFiles])\r\n            }\r\n            if (newFiles?.length) {\r\n                setFiles(newFiles)\r\n                onChange(newFiles)\r\n            }\r\n        }\r\n    };\r\n\r\n    const borderColor = error ? 'red' : 'silver'\r\n    return (\r\n        <>\r\n            {error && <span className=\"error-message\">{error}</span>}\r\n            <div className={`DropzoneUI ${classN}`}\r\n                style={{\r\n                    width,\r\n                    height,\r\n                    backgroundImage: `linear-gradient(90deg, ${borderColor} 50%, transparent 50%), linear-gradient(90deg, ${borderColor} 50%, transparent 50%), linear-gradient(0deg, ${borderColor} 50%, transparent 50%), linear-gradient(0deg, ${borderColor} 50%, transparent 50%)`\r\n                }}\r\n                onDrop={handleDrop}\r\n                onDragOver={handleDragOver}\r\n                onDragLeave={handleDragLeave}\r\n                ref={bodyRef}\r\n            >\r\n                <div\r\n                    className='DropzoneUI__body'\r\n                    onClick={handleDropzoneClick}\r\n                >\r\n                    <HeadingUI \r\n                        text={`Drag & drop some file${multiple ? 's' : ''} here, or click to select file${multiple ? 's' : ''}`}\r\n                        size='14px'\r\n                        align='center'\r\n                    />\r\n                </div>\r\n                <input\r\n                    type=\"file\"\r\n                    ref={fileInputRef}\r\n                    style={{ display: 'none' }}\r\n                    onChange={handleFileInputChange}\r\n                    multiple={multiple}\r\n                    name={name}\r\n                />\r\n\r\n                <div className='DropzoneUI__files' style={{ maxHeight: +height.replace('px', '') - 30 + 'px' }}>\r\n                    {files.map((file, index) => (\r\n                        <div key={index} className='DropzoneUI__file'>\r\n                            <img src={file.preview} alt={`Preview ${index}`} className='DropzoneUI__preview' />\r\n                            <button\r\n                                className='DropzoneUI__remove'\r\n                                onClick={() => handleDelete(index)}\r\n                                type='button'>\r\n                                <FontAwesomeIcon icon={faX} />\r\n                            </button>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DropzoneUI;\r\n","import './style.scss'\r\n\r\ninterface Props {\r\n    text: string,\r\n    classN?: string,\r\n    color?: string,\r\n    size?: string,\r\n    align?: 'center' | 'left' | 'right'\r\n}\r\n\r\nconst HeadingUI = ({\r\n    text,\r\n    classN = '',\r\n    color = '',\r\n    size = '',\r\n    align = 'left'\r\n}: Props) => {\r\n    return (\r\n        <h1 className={`headingUI ${classN}`}\r\n            style={{\r\n                color: color || '#000',\r\n                fontSize: size || '30px',\r\n                textAlign: align\r\n            }}\r\n        >{text}</h1>\r\n    );\r\n};\r\n\r\nexport default HeadingUI;","import { CallbackSkeletonType } from \"shared/objectModels/GenericModel\";\r\nimport './style.scss'\r\nimport { useEffect } from \"react\";\r\n\r\ninterface Props {\r\n    value: string,\r\n    placeholder?: string,\r\n    type?: string,\r\n    callback: CallbackSkeletonType,\r\n    label?: string,\r\n    name: string,\r\n    error?: string,\r\n}\r\n\r\nconst InputUI = ({\r\n    value,\r\n    placeholder = '',\r\n    type = 'text',\r\n    callback,\r\n    label = '',\r\n    name,\r\n    error,\r\n}: Props) => {\r\n    // const refInput = useRef<HTMLInputElement | null>(null)\r\n    // const refSpan = useRef<HTMLInputElement | null>(null)\r\n\r\n    // useEffect(() => {\r\n    //     if (error && refInput?.current && refSpan?.current) {\r\n    //         refInput.current.classList.add('_errorShake')\r\n    //         refSpan.current.classList.add('_errorShake')\r\n    //         setTimeout(() => {\r\n    //             refInput?.current?.classList.remove('_errorShake')\r\n    //             refSpan?.current?.classList.remove('_errorShake')\r\n    //         }, 500);\r\n    //     }\r\n\r\n    //     return () => {\r\n    //         refInput?.current?.classList.remove('_errorShake')\r\n    //         refSpan?.current?.classList.remove('_errorShake')\r\n    //     }\r\n    // },[error])\r\n\r\n    return (\r\n        <div className=\"InputUI\">\r\n            {label && <label \r\n                className=\"InputUI__label\"\r\n                htmlFor={`InputUI-${name}`}>\r\n                {label}\r\n            </label>}\r\n            {error && <span className=\"error-message\">{error}</span>}\r\n            <input \r\n                className={`InputUI__input${error ? ' _error' : ''}`}\r\n                id={`InputUI-${name}`}\r\n                name={name}\r\n                type={type}\r\n                defaultValue={value}\r\n                onChange={callback}\r\n                {...(placeholder && {placeholder})}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InputUI;","export function createWrapperAndAppendToBody(wrapperId: string) {\r\n    const wrapperElement = document.createElement(\"div\");\r\n    wrapperElement.setAttribute(\"id\", wrapperId);\r\n    document.body.appendChild(wrapperElement);\r\n    return wrapperElement;\r\n  }\r\n  \r\n  export const checkOffsetHeight = (selector: any) => {\r\n    const elem = document.querySelector(selector);\r\n    const top = elem && elem.getBoundingClientRect().top - 90;\r\n    let stack: any = [];\r\n    let prevScrollY = 0;\r\n  \r\n    const move = () => {\r\n      let point = window.scrollY + 20 > top ? top - window.scrollY : 20;\r\n    \r\n      if (top !== stack[0]) {\r\n        stack = [top];\r\n      } else {\r\n        stack.push(top);\r\n      }\r\n    \r\n      window.scrollBy({\r\n        top: point,\r\n      });\r\n  \r\n      if (prevScrollY === window.scrollY) return;\r\n  \r\n      if (window.scrollY + 10 < top) {\r\n        prevScrollY = window.scrollY;\r\n        requestAnimationFrame(move)\r\n      }\r\n    }\r\n  \r\n    return move;\r\n  }","import { useLayoutEffect, useState } from \"react\";\r\nimport { createPortal,  } from \"react-dom\";\r\nimport { createWrapperAndAppendToBody } from \"./helper\";\r\n\r\n\r\nfunction ReactPortal({ children, wrapperId = \"react-portal-wrapper\" }: any) {\r\n  const [wrapperElement, setWrapperElement] = useState<any>(null);\r\n\r\n  useLayoutEffect(() => {\r\n    let element = document.getElementById(wrapperId)!;\r\n    let systemCreated = false;\r\n\r\n    if (!element) {\r\n      systemCreated = true;\r\n      element = createWrapperAndAppendToBody(wrapperId);\r\n    }\r\n\r\n    setWrapperElement(element);\r\n\r\n    return () => {\r\n      if (systemCreated && element.parentNode) {\r\n        element.parentNode.removeChild(element);\r\n      }\r\n    };\r\n  }, [wrapperId]);\r\n\r\n  let element = document.getElementById(wrapperId);\r\n\r\n  if (!element) {\r\n    element = createWrapperAndAppendToBody(wrapperId);\r\n  }\r\n\r\n  if (wrapperElement === null) return null;\r\n\r\n  return createPortal(children, wrapperElement);\r\n}\r\n\r\nexport default ReactPortal;","import ReactPortal from 'layout/ReactPortal/ReactPortal';\r\nimport './style.scss'\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faXmark } from '@fortawesome/free-solid-svg-icons';\r\nimport { CallbackSkeletonType } from 'shared/objectModels/GenericModel';\r\n\r\ninterface PropsI {\r\n    callback: CallbackSkeletonType,\r\n    children: any\r\n}\r\n\r\nconst PopupUI = ({\r\n    callback,\r\n    children\r\n}: PropsI) => {\r\n\r\n    return (\r\n        <ReactPortal>\r\n            <div className='PopupUI'>\r\n                <div className=\"PopupUI__container\">\r\n                    <div className='PopupUI__body'>\r\n                        {children}\r\n                    </div>\r\n                    <div className='PopupUI__icon'\r\n                        onClick={() => callback()}>\r\n                        <FontAwesomeIcon icon={faXmark} fontSize='18px' color=\"#fff\" />\r\n                    </div>\r\n                </div>\r\n                <div className='PopupUI__BG' onClick={() => callback()}></div>\r\n            </div>\r\n        </ReactPortal>\r\n    );\r\n};\r\n\r\nexport default PopupUI;","import { ObjectType } from \"shared/helpers/helpers\";\r\n\r\ninterface Rule {\r\n    error: any;\r\n    rule: any;\r\n}\r\n\r\nexport type ErrorInfo = Record<string, Record<string, {message: string}>>\r\n\r\n\r\nexport const formValidator = (formData: ObjectType, options: ObjectType) => {\r\n    const errorInfo = Object.keys(formData).reduce((acc: any, inputName): any => {\r\n        const currnetInputOptions:Rule[] = options[inputName] || [];\r\n        const inputValue = formData[inputName];\r\n        currnetInputOptions.forEach(option => {\r\n            const rule = option.rule;\r\n            const error = option.error; \r\n\r\n            if(rule.required !== undefined && !inputValue) {\r\n                acc[inputName] = error;\r\n            }\r\n            if(rule.test !== undefined && !rule.test.test(inputValue)) {\r\n                acc[inputName] = error;\r\n            }\r\n        });\r\n        return acc;\r\n    }, {});\r\n\r\n    return Object.keys(errorInfo).length ? errorInfo : false;\r\n};\r\n\r\nexport const getAllErrorMessages = (options: ObjectType) => {\r\n    return Object.keys(options).reduce((acc: any, item) => {\r\n        acc[item] = { message:  `${item} not valid`};\r\n        return acc;\r\n    }, {});\r\n};\r\n","\r\nexport const colorFormOptions = {\r\n    name: [\r\n        {rule: { required : true }, error: {message: 'Name is required'} },\r\n    ],\r\n    hexcode: [\r\n        {rule: { required : true }, error: {message: 'HexCode is required'} },\r\n        {rule: { test: /^#(?:[0-9a-fA-F]{3}){1,2}$/ }, error: {message: 'Incorrect format for HexCode'} },\r\n    ],\r\n}\r\n\r\nexport const printFormOptions = {\r\n    name: [\r\n        {rule: { required : true }, error: {message: 'Name is required'} },\r\n    ],\r\n    price: [\r\n        {rule: { required : true }, error: {message: 'Price is required'} },\r\n    ]\r\n}\r\n\r\nexport const printFilesOptions = {\r\n    highresurl: [\r\n        {rule: { test: /^$|\\.jpe?g$|\\.png$|\\.webp$|\\.bmp$/i }, error: {message: 'Incorrect format for Highres Url'} }\r\n    ],\r\n    previewurl: [\r\n        {rule: { test: /^$|\\.jpe?g$|\\.png$|\\.webp$|\\.bmp$/i }, error: {message: 'Incorrect format for Preview Url'} }\r\n    ]\r\n}\r\n\r\nexport const mannequinFormOptions = {\r\n    name: [\r\n        {rule: { required : true }, error: {message: 'Name is required'} },\r\n    ]\r\n}\r\n\r\nexport const mannequinFilesOptions = {\r\n    fronturl: [\r\n        {rule: { test: /^$|\\.jpe?g$|\\.png$|\\.webp$|\\.bmp$/i }, error: {message: 'Incorrect format for Front Url'} }\r\n    ],\r\n    backurl: [\r\n        {rule: { test: /^$|\\.jpe?g$|\\.png$|\\.webp$|\\.bmp$/i }, error: {message: 'Incorrect format for Back Url'} }\r\n    ]\r\n}"],"names":["getAvMannequins","dispatch","getMannequins","then","res","setMannequinData","catch","err","console","log","_ref","_errors$name","_fileErrors$fronturl","_mannequin$fronturl","_fileErrors$backurl","_mannequin$backurl","callback","closePopup","mannequin","setMannequin","errors","mannequinInfo","fileErrors","setFileErrors","useState","editImage","files","name","URL","createObjectURL","validateFiles","field","map","file","obj","formValidator","mannequinFilesOptions","Object","keys","length","_jsxs","className","children","_jsx","HeadingUI","text","concat","align","color","InputUI","placeholder","value","label","error","message","event","target","size","appColor","DropzoneUI","width","height","classN","validationCallback","fronturl","onChange","defaultFiles","preview","includes","BASE_UPLOADS_MANNEQUINS_FRONTS_URL","backurl","BASE_UPLOADS_MANNEQUINS_BACKS_URL","ButtonUI","onClick","version","mannequins","isVisible","setIsVisible","editableMannequin","setEditableMannequin","setMannequinInfo","setErrors","side","setSide","useDispatch","rotateImage","src","alt","type","FontAwesomeIcon","icon","faReplyAll","print","faPencil","_id","PopupUI","EditMannequin","async","_editableMannequin$fr","_editableMannequin$ba","formErrors","mannequinFormOptions","getNewFile","image","response","fetch","blob","File","newMannequin","JSON","parse","stringify","formData","FormData","forEach","key","append","updateMannequin","data","setData","addImage","onSubmit","e","preventDefault","addMannequin","CustomizeMannequins","useSelector","availableMannequins","useEffect","MainHead","MainBody","MannequinsList","NewMannequin","CallbackSkeletonValue","versions","default","red","orange","blue","green","gray","disabled","isLoading","buttonProps","LoaderCircleUI","multiple","setFiles","fileInputRef","useRef","bodyRef","borderColor","_Fragment","style","backgroundImage","onDrop","_bodyRef$current","newFiles","Array","from","dataTransfer","current","classList","remove","onDragOver","_bodyRef$current2","add","onDragLeave","_bodyRef$current3","ref","handleDropzoneClick","click","display","maxHeight","replace","index","updatedFiles","splice","handleDelete","faX","fontSize","textAlign","htmlFor","id","defaultValue","createWrapperAndAppendToBody","wrapperId","wrapperElement","document","createElement","setAttribute","body","appendChild","setWrapperElement","useLayoutEffect","element","getElementById","systemCreated","parentNode","removeChild","createPortal","ReactPortal","faXmark","options","errorInfo","reduce","acc","inputName","currnetInputOptions","inputValue","option","rule","undefined","required","test","colorFormOptions","hexcode","printFormOptions","price","printFilesOptions","highresurl","previewurl"],"sourceRoot":""}